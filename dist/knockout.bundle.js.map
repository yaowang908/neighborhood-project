{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/knockout/build/output/knockout-latest.debug.js"],"names":["parentHotUpdateCallback","window","chunkId","moreModules","hotAvailableFilesMap","hotRequestedFilesMap","moduleId","Object","prototype","hasOwnProperty","call","hotUpdate","hotWaitingFiles","hotChunksLoading","hotUpdateDownloaded","hotAddUpdateChunk","hotCurrentChildModule","hotApplyOnUpdate","hotCurrentHash","hotRequestTimeout","hotCurrentModuleData","hotCurrentParents","hotCurrentParentsTemp","hotCreateRequire","me","installedModules","__webpack_require__","fn","request","hot","active","parents","indexOf","push","children","console","warn","ObjectFactory","name","configurable","enumerable","get","set","value","defineProperty","e","hotStatus","hotSetStatus","then","finishChunkLoading","err","hotWaitingFilesMap","hotEnsureUpdateChunk","t","mode","hotStatusHandlers","newStatus","i","length","hotDeferred","hotUpdateNewHash","toModuleId","id","hotCheck","apply","Error","requestTimeout","Promise","resolve","reject","XMLHttpRequest","requestPath","p","open","timeout","send","onreadystatechange","readyState","status","update","JSON","parse","responseText","hotDownloadManifest","c","h","promise","head","document","getElementsByTagName","script","createElement","charset","src","appendChild","hotDownloadUpdateChunk","deferred","hotApply","result","outdatedModules","options","cb","j","module","getAffectedStuff","updateModuleId","outdatedDependencies","queue","slice","map","chain","queueItem","pop","_selfAccepted","_selfDeclined","type","_main","parentId","parent","_declinedDependencies","concat","_acceptedDependencies","addAllToSet","a","b","item","appliedUpdate","warnUnexpectedRequire","abortError","doApply","doDispose","chainInfo","join","onDeclined","ignoreDeclined","onUnaccepted","ignoreUnaccepted","onAccepted","onDisposed","idx","outdatedSelfAcceptedModules","errorHandler","keys","forEach","installedChunks","hotDisposeChunk","dependency","moduleOutdatedDependencies","data","disposeHandlers","_disposeHandlers","child","splice","modules","error","callbacks","onErrored","dependencyId","ignoreErrored","err2","originalError","exports","l","accept","dep","callback","undefined","decline","dispose","addDisposeHandler","removeDisposeHandler","check","addStatusHandler","removeStatusHandler","hotCreateModule","m","d","getter","o","r","Symbol","toStringTag","__esModule","ns","create","key","bind","n","object","property","s","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","this","eval","navigator","jQueryInstance","koExports","amdRequire","ko","exportSymbol","koPath","tokens","split","target","exportProperty","owner","publicName","version","deferUpdates","useOnlyNativeEvents","utils","objectForEach","obj","action","prop","extend","source","setPrototypeOf","proto","__proto__","canSetPrototype","Array","knownEvents","knownEventTypesByEventName","test","userAgent","eventType","knownEventsForType","eventsThatMustBeRegisteredUsingAttachEvent","propertychange","ieVersion","div","iElems","innerHTML","cssClassNameRegex","toggleObjectClassPropertyString","classNames","shouldHaveClass","currentClassNames","match","arrayForEach","className","addOrRemoveItem","fieldsIncludedWithJsonPost","array","arrayIndexOf","arrayFirst","predicate","predicateOwner","arrayRemoveItem","itemToRemove","index","shift","arrayGetDistinctValues","arrayMap","mapping","arrayFilter","arrayPushAll","valuesToPush","included","existingEntryIndex","peekObservable","setPrototypeOfOrExtend","objectMap","emptyDomNode","domNode","firstChild","removeNode","moveCleanedNodesToContainerElement","nodes","nodesArray","makeArray","container","ownerDocument","cleanNode","cloneNodes","shouldCleanNodes","newNodesArray","clonedNode","cloneNode","setDomNodeChildren","childNodes","replaceDomNodes","nodeToReplaceOrNodeArray","nodesToReplaceArray","nodeType","insertionPoint","parentNode","insertBefore","fixUpContinuousNodeArray","continuousNodeArray","current","last","nextSibling","setOptionNodeSelectionState","optionNode","isSelected","setAttribute","selected","stringTrim","string","trim","toString","replace","stringStartsWith","startsWith","substring","domNodeIsContainedBy","node","containedByNode","contains","compareDocumentPosition","domNodeIsAttachedToDocument","documentElement","anyDomNodeIsAttachedToDocument","tagNameLower","element","tagName","toLowerCase","catchFunctionErrors","delegate","arguments","setTimeout","handler","deferError","registerEventHandler","wrappedHandler","mustUseAttachEvent","addEventListener","attachEvent","attachEventHandler","event","attachEventName","domNodeDisposal","addDisposeCallback","detachEvent","triggerEvent","useClickWorkaround","inputType","isClickOnCheckableElement","createEvent","dispatchEvent","eventCategory","initEvent","click","fireEvent","unwrapObservable","isObservable","peek","toggleDomNodeCssClass","addOrRemoveFn","classList","setTextContent","textContent","innerTextNode","virtualElements","createTextNode","forceRefresh","setElementName","mergeAttributes","elem","style","zoom","ensureSelectElementIsRenderedCorrectly","selectElement","originalWidth","width","range","min","max","arrayLikeObject","createSymbolOrString","identifier","isIe6","isIe7","getFormFields","form","fieldName","fields","isMatchingField","field","matches","parseJson","jsonString","Function","stringifyJson","replacer","space","stringify","postJson","urlOrForm","params","includeFields","url","originalForm","display","method","input","body","submit","removeChild","originalFunction","partialArgs","args","domData","uniqueId","dataStoreKeyExpandoPropertyName","Date","getTime","dataStore","getAll","createIfNotFound","dataStoreKey","hasExistingDataStore","allDataForNode","clear","nextKey","domDataKey","cleanableNodeTypes","1","8","9","cleanableNodeTypesWithDescendants","getDisposeCallbacksCollection","allDisposeCallbacks","cleanSingleNode","nodeWithChildren","nextChild","cleanImmediateCommentTypeChildren","removeDisposeCallback","callbacksCollection","destroyCallbacksCollection","descendants","cleanExternalData","none","table","tr","select","lookup","thead","tbody","tfoot","td","th","option","optgroup","mayRequireCreateElementHack","simpleHtmlParse","html","documentContext","windowContext","tags","wrap","getWrap","depth","markup","lastChild","parseHtmlFragment","elems","jQueryHtmlParse","setHtml","parsedNodes","memoization","memos","randomMax8HexChars","Math","random","memoize","memoId","unmemoize","callbackParams","unmemoizeDomNodeAndDescendants","extraCallbackParamsArray","findMemoNodes","rootNode","appendToArray","parseMemoText","nodeValue","combinedParams","memoText","tasks","taskQueue","taskQueueLength","nextHandle","nextIndexToProcess","processTasks","task","mark","countMarks","ex","scheduledProcess","scheduler","MutationObserver","observe","attributes","toggle","schedule","func","cancel","handle","resetForTesting","runEarly","extenders","throttle","writeTimeoutInstance","dependentObservable","read","write","clearTimeout","rateLimit","limitFunction","_deferUpdates","debounce","limit","ignoreUpdates","notify","notifyWhen","valuesArePrimitiveAndEqual","primitiveTypes","boolean","number","oldValueIsPrimitive","timeoutInstance","subscription","disposeCallback","_target","isDisposed","subscribable","ko_subscribable_fn","init","defaultEvent","limitNotifySubscribers","_limitBeforeChange","_origNotifySubscribers","_limitChange","instance","_subscriptions","change","_versionNumber","subscribe","callbackTarget","self","boundCallback","afterSubscriptionRemove","beforeSubscriptionAdd","notifySubscribers","valueToNotify","updateVersion","hasSubscriptionsForEvent","subs","_changeSubscriptions","dependencyDetection","begin","end","getVersion","hasChanged","versionToCheck","ignoreBeforeChange","notifyNextChange","previousValue","pendingValue","selfIsObservable","finish","_notificationIsPending","_evalIfChanged","shouldNotify","isDifferent","_notifyNextChangeIfValueIsDifferent","getSubscriptionsCount","total","eventName","subscriptions","oldValue","newValue","requestedExtenders","extenderHandler","isSubscribable","computedContext","currentFrame","outerFrames","lastId","registerDependency","_id","ignore","callbackArgs","getDependenciesCount","computed","isInitial","ignoreDependencies","observableLatestValue","observable","initialValue","valueWillMutate","valueHasMutated","observableFn","equalityComparer","protoProperty","hasPrototype","isWriteableObservable","observableArray","initialValues","trackArrayChanges","remove","valueOrPredicate","underlyingArray","removedValues","removeAll","arrayOfValues","allValues","destroy","destroyAll","oldItem","newItem","methodName","cacheDiffForKnownOperation","methodCallResult","arrayChangeEventName","compareArrayOptions","arrayChangeSubscription","underlyingNotifySubscribersFunction","trackingChanges","cachedDiff","pendingNotifications","underlyingBeforeSubscriptionAddFunction","underlyingAfterSubscriptionRemoveFunction","previousContents","currentContents","changes","compareArrays","getChanges","trackChanges","rawArray","operationName","diff","arrayLength","argsLength","offset","pushDiff","startIndex","endDeleteIndex","endAddIndex","endIndex","additions","deletions","argsIndex","findMovesInArrayComparison","computedState","computedDisposeDependencyCallback","entryToDispose","computedBeginDependencyDetectionCallback","computedObservable","state","disposalCount","disposalCandidates","addDependencyTracking","dependencyTracking","isSleeping","subscribeToDependency","evaluatorFunctionOrOptions","evaluatorFunctionTarget","writeFunction","latestValue","isStale","isDirty","isBeingEvaluated","suppressDisposalUntilDisposeWhenReturnsFalse","pure","readFunction","disposeWhenNodeIsRemoved","disposeWhen","domNodeDisposalCallback","dependenciesCount","evaluationTimeoutInstance","haveDependenciesChanged","evaluateImmediate","hasWriteFunction","computedFn","pureComputedOverrides","deferEvaluationOverrides","isActive","trackingObj","_order","_version","_evalDelayed","markDirty","respondToChange","evaluatePossiblyAsync","dirtySub","changeSub","throttleEvaluationTimeout","notifyChange","changed","evaluateImmediate_CallReadWithDependencyDetection","dependencyDetectionContext","evaluateImmediate_CallReadThenEndDependencyDetection","_latestValue","evaluate","isChange","dependeciesOrder","order","protoProp","isComputed","isPureComputed","pureComputed","objectLookup","values","toJS","rootObject","mapJsObjectGraph","mapInputCallback","visitedObjects","canHaveProperties","RegExp","String","Number","Boolean","outputProperties","save","visitorCallback","propertyName","visitPropertiesOrArrayEntries","indexer","propertyValue","previouslyMappedValue","valueToMap","toJSON","plainJavaScriptObject","constructor","existingIndex","selectExtensions","readValue","bindingHandlers","optionValueDomDataKey","getAttributeNode","specified","text","selectedIndex","writeValue","allowUnset","optionValue","selection","size","expressionRewriting","javaScriptReservedWords","javaScriptAssignmentTarget","bindingToken","stringDouble","divisionLookBehind","keywordRegexLookBehind","in","return","typeof","parseObjectLiteral","objectLiteralString","str","charCodeAt","toks","tok","unknown","substr","twoWayBindings","bindingRewriteValidators","preProcessBindings","bindingsStringOrKeyValueArray","bindingOptions","processKeyValue","val","writableVal","bindingParams","callPreprocessHook","expression","getWriteableValue","propertyAccessorResultStrings","makeValueAccessors","resultStrings","keyValueArray","keyValue","keyValueArrayContainsKey","writeValueToProperty","allBindings","checkIfDifferent","propWriters","commentNodesHaveTextProperty","createComment","startCommentRegex","endCommentRegex","htmlTagsWithOptionallyClosingChildren","ul","ol","isStartComment","isEndComment","getVirtualChildren","startComment","allowUnbalanced","currentNode","getMatchingEndComment","allVirtualChildren","getUnbalancedChildTags","childNode","captureRemaining","matchingEndComment","allowedBindings","emptyNode","virtualChildren","endCommentNode","prepend","containerNode","nodeToPrepend","insertAfter","nodeToInsert","insertAfterNode","hasBindingValue","virtualNodeBindingValue","regexMatch","normaliseVirtualElementDomStructure","elementVerified","unbalancedTags","nodeToInsertBefore","bindingProvider","bindingCache","nodeHasBindings","getAttribute","components","getBindings","bindingContext","bindingsString","parsedBindings","addBindingsForCustomElement","getBindingAccessors","valueAccessors","getBindingsString","parseBindingsString","bindingFunction","cache","cacheKey","rewrittenBindings","createBindingsStringEvaluator","createBindingsStringEvaluatorViaCache","message","bindingDoesNotRecurseIntoElementTypes","textarea","template","makeValueAccessor","evaluateValueAccessor","valueAccessor","makeAccessorsFromFunction","getBindingsAndMakeAccessors","context","applyBindingsToDescendantsInternal","elementOrVirtualElement","bindingContextsMayDifferFromDomParentElement","currentChild","nextInQueue","provider","preprocessNode","applyBindingsToNodeAndDescendantsInternal","nodeVerified","bindingContextMayDifferFromDomParentElement","shouldBindDescendants","isElement","shouldApplyBindings","applyBindingsToNodeInternal","bindingKey","dataItemOrAccessor","parentContext","dataItemAlias","extendCallback","updateContext","dataItemOrObservable","isFunc","dataItem","_subscribable","_addNode","unshift","properties","createStaticChildContext","exportDependencies","boundElementDomDataKey","sourceBindings","bindings","bindingHandlerThatControlsDescendantBindings","alreadyBound","storedBindingContextForNode","bindingsUpdater","getValueAccessor","orderedBindings","bindingsConsidered","cyclicDependencyStack","pushBinding","binding","bindingDependencyKey","topologicalSortBindings","bindingKeyAndHandler","handlerInitFn","handlerUpdateFn","bindingName","validateThatBindingIsAllowedForVirtualElements","initResult","storedBindingContextDomDataKey","getBindingContext","viewModelOrBindingContext","applyBindingAccessorsToNode","applyBindingsToNode","makeBindingAccessors","applyBindingsToDescendants","applyBindings","contextFor","dataFor","loadingSubscribablesCache","loadedDefinitionsCache","getObjectOwnProperty","propName","getFirstResultFromLoaders","argsExceptCallback","candidateLoaders","currentCandidateLoader","methodInstance","wasAborted","synchronousReturnValue","componentName","cachedDefinition","isSynchronousComponent","definition","completedAsync","config","beginLoadingComponent","loadComponentAndNotify","clearCachedDefinition","_getFirstResultFromLoaders","defaultConfigRegistry","register","isRegistered","unregister","defaultLoader","getConfig","loadComponent","errorCallback","makeErrorCallback","possiblyGetConfigFromAmd","loadedConfig","makeCallBackWhenZero","tryIssueCallback","templateConfig","viewModelConfig","resolvedTemplate","resolvedViewModel","createViewModelKey","resolveConfig","loadTemplate","isDocumentFragment","HTMLElement","isDomElement","cloneNodesFromTemplateSourceElement","elemInstance","getElementById","resolveTemplate","loadViewModel","resolveViewModel","fixedInstance","componentInfo","content","DocumentFragment","_allRegisteredComponents","componentBindingValue","paramsAttribute","nativeBindingProviderInstance","rawParamComputedValues","paramValue","paramName","paramValueComputed","$raw","getComponentParamsFromCustomElement","createDocumentFragment","newDocFrag","allComponents","componentLoadingOperationUniqueId","ignored1","ignored2","currentViewModel","currentLoadingOperationId","disposeAssociatedComponentViewModel","currentViewModelDispose","originalChildNodes","componentParams","loadingOperationId","componentDefinition","clonedNodesArray","cloneTemplateIntoElement","componentViewModel","componentViewModelFactory","templateNodes","createViewModel","childBindingContext","ctx","controlsDescendantBindings","attrHtmlToJavascriptMap","class","for","makeWithIfBinding","isWith","isNot","makeContextCallback","viewModel","didDisplayOnLastUpdate","savedNodes","rawValue","dataValue","shouldDisplay","isFirstRender","needsRefresh","attrName","attrValue","toRemove","removeAttribute","after","checkedValue","updateModel","isChecked","checked","elemValue","useCheckedValue","isRadio","modelValue","valueIsArray","writableValue","rawValueIsNonArrayObservable","oldElemValue","isCheckbox","disabled","eventsToHandle","handlerReturnValue","handlerFunction","argsForHandler","preventDefault","returnValue","bubble","cancelBubble","stopPropagation","makeTemplateValueAccessor","unwrappedValue","foreach","as","includeDestroyed","afterAdd","beforeRemove","afterRender","beforeMove","afterMove","templateEngine","nativeTemplateEngine","handleElementFocusChange","isFocused","ownerDoc","activeElement","handleElementFocusIn","handleElementFocusOut","focus","blur","captionPlaceholder","selectedOptions","captionValue","filteredArray","selectWasPreviouslyEmpty","multiple","previousScrollTop","scrollTop","unwrappedArray","valueAllowUnset","arrayToDomNodeChildrenOptions","previousSelectedValues","applyToObject","defaultValue","predicateType","itemUpdate","setSelectionCallback","arrayEntry","newOptions","setDomNodeChildrenFromArrayMapping","oldOptions","optionText","abs","valueToWrite","styleName","styleValue","parseVersion","parseFloat","operaVersion","opera","parseInt","safariVersion","firefoxVersion","selectionChangeRegisteredName","selectionChangeHandlerName","selectionChangeHandler","registerForSelectionChangeEvent","timeoutHandle","elementValueBeforeEvent","previousElementValue","elementValue","deferUpdateModel","ieUpdateModel","updateView","onEvent","preprocess","addBinding","currentIndex","eventsToCatch","requestedEventsToCatch","propertyChangedFired","valueUpdateHandler","ieAutoCompleteHackNeeded","autocomplete","updateFromModel","valueHasChanged","applyValueAction","isCurrentlyVisible","makeEventHandlerShortcut","templateSource","templateDocument","templateSources","domElement","anonymousTemplate","rewriterCallback","rewritten","templateRewriting","memoizeDataBindingAttributeSyntaxRegex","memoizeVirtualContainerBindingSyntaxRegex","constructMemoizedTagReplacement","dataBindAttributeValue","tagToRetain","nodeName","dataBindKeyValueArray","allValidators","validator","possibleErrorMessage","validateDataBindValuesForRewriting","rewrittenDataBindAttributeValue","applyBindingsToNextSiblingScript","ensureTemplateIsRewritten","htmlString","memoizeBindingAttributeSyntax","applyMemoizedBindingsToNextSibling","nodeToBind","templateType","elemContentsProperty","dataDomDataPrefix","templatesDomDataKey","getTemplateDomData","setTemplateDomData","templateData","containerData","textData","_templateEngine","invokeForEachNodeInContinuousRange","firstNode","lastNode","firstOutOfRangeNode","activateBindingsOnContinuousNodeArray","nextNodeInRange","nodePreviousSibling","previousSibling","newNodes","getFirstNodeFromPossibleArray","nodeOrNodeArray","executeTemplate","targetNodeOrNodeArray","renderMode","firstTargetNode","templateEngineToUse","renderedNodesArray","haveAddedNodesToParent","resolveTemplateName","setTemplateEngine","renderTemplate","dataOrBindingContext","activelyDisposeWhenNodeIsRemoved","templateName","renderTemplateForEach","arrayOrObservableArray","targetNode","parentBindingContext","arrayItemContext","executeTemplateForArrayItem","arrayValue","activateBindingsCallback","addedNodesArray","templateComputedDomDataKey","bindingValue","templateComputed","dataArray","innerBindingContext","newComputed","oldComputed","disposeOldComputedAndStoreNewOne","parsedBindingValue","left","right","limitFailedCompares","failedCompares","leftItem","rightItem","statusNotInOld","statusNotInNew","compareSmallArrayToBigArray","smlArray","bigArray","statusNotInSml","statusNotInBig","smlIndex","bigIndex","thisRow","lastRow","bigIndexMaxForRow","bigIndexMinForRow","myMin","myMax","editDistanceMatrix","smlIndexMax","bigIndexMax","compareRange","maxDistance","northDistance","westDistance","meMinusOne","editScript","notInSml","notInBig","reverse","oldArray","newArray","dontLimitMoves","mapNodeAndRefreshWhenChanged","callbackAfterAddingNodes","mappedNodes","newMappedNodes","lastMappingResultDomDataKey","deletedItemDummyValue","mapData","isFirstExecution","lastMappingResult","lastArray","x","newMappingResult","lastMappingResultIndex","newMappingResultIndex","nodesToDelete","itemsToProcess","itemsForBeforeRemoveCallbacks","itemsForMoveCallbacks","itemsForAfterAddCallbacks","itemMovedOrRetained","editScriptIndex","oldPosition","indexObservable","callCallback","items","editScriptItem","movedIndex","nextNode","initialized","useNodesIfAvailable","templateNodesFunc","templateText","jqueryTmplTemplateEngine","jQueryTmplVersion","ensureHasReferencedJQueryTemplates","precompiled","jQueryTemplateOptions","koBindingContext","resultNodes","compiledTemplate","templateMarkup","close","jqueryTmplTemplateEngineInstance"],"mappings":"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","file":"knockout.bundle.js","sourcesContent":[" \tfunction hotDisposeChunk(chunkId) {\n \t\tdelete installedChunks[chunkId];\n \t}\n \tvar parentHotUpdateCallback = window[\"webpackHotUpdate\"];\n \twindow[\"webpackHotUpdate\"] = // eslint-disable-next-line no-unused-vars\n \tfunction webpackHotUpdateCallback(chunkId, moreModules) {\n \t\thotAddUpdateChunk(chunkId, moreModules);\n \t\tif (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\n \t} ;\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadUpdateChunk(chunkId) {\n \t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\tvar script = document.createElement(\"script\");\n \t\tscript.charset = \"utf-8\";\n \t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + hotCurrentHash + \".hot-update.js\";\n \t\tif (null) script.crossOrigin = null;\n \t\thead.appendChild(script);\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadManifest(requestTimeout) {\n \t\trequestTimeout = requestTimeout || 10000;\n \t\treturn new Promise(function(resolve, reject) {\n \t\t\tif (typeof XMLHttpRequest === \"undefined\") {\n \t\t\t\treturn reject(new Error(\"No browser support\"));\n \t\t\t}\n \t\t\ttry {\n \t\t\t\tvar request = new XMLHttpRequest();\n \t\t\t\tvar requestPath = __webpack_require__.p + \"\" + hotCurrentHash + \".hot-update.json\";\n \t\t\t\trequest.open(\"GET\", requestPath, true);\n \t\t\t\trequest.timeout = requestTimeout;\n \t\t\t\trequest.send(null);\n \t\t\t} catch (err) {\n \t\t\t\treturn reject(err);\n \t\t\t}\n \t\t\trequest.onreadystatechange = function() {\n \t\t\t\tif (request.readyState !== 4) return;\n \t\t\t\tif (request.status === 0) {\n \t\t\t\t\t// timeout\n \t\t\t\t\treject(\n \t\t\t\t\t\tnew Error(\"Manifest request to \" + requestPath + \" timed out.\")\n \t\t\t\t\t);\n \t\t\t\t} else if (request.status === 404) {\n \t\t\t\t\t// no update available\n \t\t\t\t\tresolve();\n \t\t\t\t} else if (request.status !== 200 && request.status !== 304) {\n \t\t\t\t\t// other failure\n \t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\n \t\t\t\t} else {\n \t\t\t\t\t// success\n \t\t\t\t\ttry {\n \t\t\t\t\t\tvar update = JSON.parse(request.responseText);\n \t\t\t\t\t} catch (e) {\n \t\t\t\t\t\treject(e);\n \t\t\t\t\t\treturn;\n \t\t\t\t\t}\n \t\t\t\t\tresolve(update);\n \t\t\t\t}\n \t\t\t};\n \t\t});\n \t}\n\n \tvar hotApplyOnUpdate = true;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentHash = \"4c6e5e88c90d2f043f66\";\n \tvar hotRequestTimeout = 10000;\n \tvar hotCurrentModuleData = {};\n \tvar hotCurrentChildModule;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParents = [];\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParentsTemp = [];\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateRequire(moduleId) {\n \t\tvar me = installedModules[moduleId];\n \t\tif (!me) return __webpack_require__;\n \t\tvar fn = function(request) {\n \t\t\tif (me.hot.active) {\n \t\t\t\tif (installedModules[request]) {\n \t\t\t\t\tif (installedModules[request].parents.indexOf(moduleId) === -1) {\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\thotCurrentParents = [moduleId];\n \t\t\t\t\thotCurrentChildModule = request;\n \t\t\t\t}\n \t\t\t\tif (me.children.indexOf(request) === -1) {\n \t\t\t\t\tme.children.push(request);\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tconsole.warn(\n \t\t\t\t\t\"[HMR] unexpected require(\" +\n \t\t\t\t\t\trequest +\n \t\t\t\t\t\t\") from disposed module \" +\n \t\t\t\t\t\tmoduleId\n \t\t\t\t);\n \t\t\t\thotCurrentParents = [];\n \t\t\t}\n \t\t\treturn __webpack_require__(request);\n \t\t};\n \t\tvar ObjectFactory = function ObjectFactory(name) {\n \t\t\treturn {\n \t\t\t\tconfigurable: true,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: function() {\n \t\t\t\t\treturn __webpack_require__[name];\n \t\t\t\t},\n \t\t\t\tset: function(value) {\n \t\t\t\t\t__webpack_require__[name] = value;\n \t\t\t\t}\n \t\t\t};\n \t\t};\n \t\tfor (var name in __webpack_require__) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(__webpack_require__, name) &&\n \t\t\t\tname !== \"e\" &&\n \t\t\t\tname !== \"t\"\n \t\t\t) {\n \t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\n \t\t\t}\n \t\t}\n \t\tfn.e = function(chunkId) {\n \t\t\tif (hotStatus === \"ready\") hotSetStatus(\"prepare\");\n \t\t\thotChunksLoading++;\n \t\t\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\n \t\t\t\tfinishChunkLoading();\n \t\t\t\tthrow err;\n \t\t\t});\n\n \t\t\tfunction finishChunkLoading() {\n \t\t\t\thotChunksLoading--;\n \t\t\t\tif (hotStatus === \"prepare\") {\n \t\t\t\t\tif (!hotWaitingFilesMap[chunkId]) {\n \t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t\t\t}\n \t\t\t\t\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\n \t\t\t\t\t\thotUpdateDownloaded();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t};\n \t\tfn.t = function(value, mode) {\n \t\t\tif (mode & 1) value = fn(value);\n \t\t\treturn __webpack_require__.t(value, mode & ~1);\n \t\t};\n \t\treturn fn;\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateModule(moduleId) {\n \t\tvar hot = {\n \t\t\t// private stuff\n \t\t\t_acceptedDependencies: {},\n \t\t\t_declinedDependencies: {},\n \t\t\t_selfAccepted: false,\n \t\t\t_selfDeclined: false,\n \t\t\t_disposeHandlers: [],\n \t\t\t_main: hotCurrentChildModule !== moduleId,\n\n \t\t\t// Module API\n \t\t\tactive: true,\n \t\t\taccept: function(dep, callback) {\n \t\t\t\tif (dep === undefined) hot._selfAccepted = true;\n \t\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\n \t\t\t\telse hot._acceptedDependencies[dep] = callback || function() {};\n \t\t\t},\n \t\t\tdecline: function(dep) {\n \t\t\t\tif (dep === undefined) hot._selfDeclined = true;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n \t\t\t\telse hot._declinedDependencies[dep] = true;\n \t\t\t},\n \t\t\tdispose: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\taddDisposeHandler: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\tremoveDisposeHandler: function(callback) {\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n \t\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t// Management API\n \t\t\tcheck: hotCheck,\n \t\t\tapply: hotApply,\n \t\t\tstatus: function(l) {\n \t\t\t\tif (!l) return hotStatus;\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\taddStatusHandler: function(l) {\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\tremoveStatusHandler: function(l) {\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n \t\t\t\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t//inherit from previous dispose call\n \t\t\tdata: hotCurrentModuleData[moduleId]\n \t\t};\n \t\thotCurrentChildModule = undefined;\n \t\treturn hot;\n \t}\n\n \tvar hotStatusHandlers = [];\n \tvar hotStatus = \"idle\";\n\n \tfunction hotSetStatus(newStatus) {\n \t\thotStatus = newStatus;\n \t\tfor (var i = 0; i < hotStatusHandlers.length; i++)\n \t\t\thotStatusHandlers[i].call(null, newStatus);\n \t}\n\n \t// while downloading\n \tvar hotWaitingFiles = 0;\n \tvar hotChunksLoading = 0;\n \tvar hotWaitingFilesMap = {};\n \tvar hotRequestedFilesMap = {};\n \tvar hotAvailableFilesMap = {};\n \tvar hotDeferred;\n\n \t// The update info\n \tvar hotUpdate, hotUpdateNewHash;\n\n \tfunction toModuleId(id) {\n \t\tvar isNumber = +id + \"\" === id;\n \t\treturn isNumber ? +id : id;\n \t}\n\n \tfunction hotCheck(apply) {\n \t\tif (hotStatus !== \"idle\") {\n \t\t\tthrow new Error(\"check() is only allowed in idle status\");\n \t\t}\n \t\thotApplyOnUpdate = apply;\n \t\thotSetStatus(\"check\");\n \t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\n \t\t\tif (!update) {\n \t\t\t\thotSetStatus(\"idle\");\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\thotRequestedFilesMap = {};\n \t\t\thotWaitingFilesMap = {};\n \t\t\thotAvailableFilesMap = update.c;\n \t\t\thotUpdateNewHash = update.h;\n\n \t\t\thotSetStatus(\"prepare\");\n \t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\thotDeferred = {\n \t\t\t\t\tresolve: resolve,\n \t\t\t\t\treject: reject\n \t\t\t\t};\n \t\t\t});\n \t\t\thotUpdate = {};\n \t\t\tvar chunkId = 2;\n \t\t\t// eslint-disable-next-line no-lone-blocks\n \t\t\t{\n \t\t\t\t/*globals chunkId */\n \t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t}\n \t\t\tif (\n \t\t\t\thotStatus === \"prepare\" &&\n \t\t\t\thotChunksLoading === 0 &&\n \t\t\t\thotWaitingFiles === 0\n \t\t\t) {\n \t\t\t\thotUpdateDownloaded();\n \t\t\t}\n \t\t\treturn promise;\n \t\t});\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotAddUpdateChunk(chunkId, moreModules) {\n \t\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n \t\t\treturn;\n \t\thotRequestedFilesMap[chunkId] = false;\n \t\tfor (var moduleId in moreModules) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n \t\t\thotUpdateDownloaded();\n \t\t}\n \t}\n\n \tfunction hotEnsureUpdateChunk(chunkId) {\n \t\tif (!hotAvailableFilesMap[chunkId]) {\n \t\t\thotWaitingFilesMap[chunkId] = true;\n \t\t} else {\n \t\t\thotRequestedFilesMap[chunkId] = true;\n \t\t\thotWaitingFiles++;\n \t\t\thotDownloadUpdateChunk(chunkId);\n \t\t}\n \t}\n\n \tfunction hotUpdateDownloaded() {\n \t\thotSetStatus(\"ready\");\n \t\tvar deferred = hotDeferred;\n \t\thotDeferred = null;\n \t\tif (!deferred) return;\n \t\tif (hotApplyOnUpdate) {\n \t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\n \t\t\t// avoid triggering uncaught exception warning in Chrome.\n \t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\n \t\t\tPromise.resolve()\n \t\t\t\t.then(function() {\n \t\t\t\t\treturn hotApply(hotApplyOnUpdate);\n \t\t\t\t})\n \t\t\t\t.then(\n \t\t\t\t\tfunction(result) {\n \t\t\t\t\t\tdeferred.resolve(result);\n \t\t\t\t\t},\n \t\t\t\t\tfunction(err) {\n \t\t\t\t\t\tdeferred.reject(err);\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t} else {\n \t\t\tvar outdatedModules = [];\n \t\t\tfor (var id in hotUpdate) {\n \t\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\n \t\t\t\t}\n \t\t\t}\n \t\t\tdeferred.resolve(outdatedModules);\n \t\t}\n \t}\n\n \tfunction hotApply(options) {\n \t\tif (hotStatus !== \"ready\")\n \t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n \t\toptions = options || {};\n\n \t\tvar cb;\n \t\tvar i;\n \t\tvar j;\n \t\tvar module;\n \t\tvar moduleId;\n\n \t\tfunction getAffectedStuff(updateModuleId) {\n \t\t\tvar outdatedModules = [updateModuleId];\n \t\t\tvar outdatedDependencies = {};\n\n \t\t\tvar queue = outdatedModules.slice().map(function(id) {\n \t\t\t\treturn {\n \t\t\t\t\tchain: [id],\n \t\t\t\t\tid: id\n \t\t\t\t};\n \t\t\t});\n \t\t\twhile (queue.length > 0) {\n \t\t\t\tvar queueItem = queue.pop();\n \t\t\t\tvar moduleId = queueItem.id;\n \t\t\t\tvar chain = queueItem.chain;\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (!module || module.hot._selfAccepted) continue;\n \t\t\t\tif (module.hot._selfDeclined) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"self-declined\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tif (module.hot._main) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"unaccepted\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n \t\t\t\t\tvar parentId = module.parents[i];\n \t\t\t\t\tvar parent = installedModules[parentId];\n \t\t\t\t\tif (!parent) continue;\n \t\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n \t\t\t\t\t\treturn {\n \t\t\t\t\t\t\ttype: \"declined\",\n \t\t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\tparentId: parentId\n \t\t\t\t\t\t};\n \t\t\t\t\t}\n \t\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n \t\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n \t\t\t\t\t\tif (!outdatedDependencies[parentId])\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \t\t\t\t\tdelete outdatedDependencies[parentId];\n \t\t\t\t\toutdatedModules.push(parentId);\n \t\t\t\t\tqueue.push({\n \t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\tid: parentId\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t}\n\n \t\t\treturn {\n \t\t\t\ttype: \"accepted\",\n \t\t\t\tmoduleId: updateModuleId,\n \t\t\t\toutdatedModules: outdatedModules,\n \t\t\t\toutdatedDependencies: outdatedDependencies\n \t\t\t};\n \t\t}\n\n \t\tfunction addAllToSet(a, b) {\n \t\t\tfor (var i = 0; i < b.length; i++) {\n \t\t\t\tvar item = b[i];\n \t\t\t\tif (a.indexOf(item) === -1) a.push(item);\n \t\t\t}\n \t\t}\n\n \t\t// at begin all updates modules are outdated\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n \t\tvar outdatedDependencies = {};\n \t\tvar outdatedModules = [];\n \t\tvar appliedUpdate = {};\n\n \t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\n \t\t\tconsole.warn(\n \t\t\t\t\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\"\n \t\t\t);\n \t\t};\n\n \t\tfor (var id in hotUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\tmoduleId = toModuleId(id);\n \t\t\t\t/** @type {TODO} */\n \t\t\t\tvar result;\n \t\t\t\tif (hotUpdate[id]) {\n \t\t\t\t\tresult = getAffectedStuff(moduleId);\n \t\t\t\t} else {\n \t\t\t\t\tresult = {\n \t\t\t\t\t\ttype: \"disposed\",\n \t\t\t\t\t\tmoduleId: id\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\t/** @type {Error|false} */\n \t\t\t\tvar abortError = false;\n \t\t\t\tvar doApply = false;\n \t\t\t\tvar doDispose = false;\n \t\t\t\tvar chainInfo = \"\";\n \t\t\t\tif (result.chain) {\n \t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n \t\t\t\t}\n \t\t\t\tswitch (result.type) {\n \t\t\t\t\tcase \"self-declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\t\" in \" +\n \t\t\t\t\t\t\t\t\tresult.parentId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"unaccepted\":\n \t\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n \t\t\t\t\t\tif (!options.ignoreUnaccepted)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"accepted\":\n \t\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n \t\t\t\t\t\tdoApply = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"disposed\":\n \t\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n \t\t\t\t\t\tdoDispose = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n \t\t\t\t}\n \t\t\t\tif (abortError) {\n \t\t\t\t\thotSetStatus(\"abort\");\n \t\t\t\t\treturn Promise.reject(abortError);\n \t\t\t\t}\n \t\t\t\tif (doApply) {\n \t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n \t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n \t\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n \t\t\t\t\t\tif (\n \t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n \t\t\t\t\t\t\t\tresult.outdatedDependencies,\n \t\t\t\t\t\t\t\tmoduleId\n \t\t\t\t\t\t\t)\n \t\t\t\t\t\t) {\n \t\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n \t\t\t\t\t\t\taddAllToSet(\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n \t\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif (doDispose) {\n \t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n \t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Store self accepted outdated modules to require them later by the module system\n \t\tvar outdatedSelfAcceptedModules = [];\n \t\tfor (i = 0; i < outdatedModules.length; i++) {\n \t\t\tmoduleId = outdatedModules[i];\n \t\t\tif (\n \t\t\t\tinstalledModules[moduleId] &&\n \t\t\t\tinstalledModules[moduleId].hot._selfAccepted\n \t\t\t)\n \t\t\t\toutdatedSelfAcceptedModules.push({\n \t\t\t\t\tmodule: moduleId,\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n \t\t\t\t});\n \t\t}\n\n \t\t// Now in \"dispose\" phase\n \t\thotSetStatus(\"dispose\");\n \t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\n \t\t\tif (hotAvailableFilesMap[chunkId] === false) {\n \t\t\t\thotDisposeChunk(chunkId);\n \t\t\t}\n \t\t});\n\n \t\tvar idx;\n \t\tvar queue = outdatedModules.slice();\n \t\twhile (queue.length > 0) {\n \t\t\tmoduleId = queue.pop();\n \t\t\tmodule = installedModules[moduleId];\n \t\t\tif (!module) continue;\n\n \t\t\tvar data = {};\n\n \t\t\t// Call dispose handlers\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n \t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n \t\t\t\tcb = disposeHandlers[j];\n \t\t\t\tcb(data);\n \t\t\t}\n \t\t\thotCurrentModuleData[moduleId] = data;\n\n \t\t\t// disable module (this disables requires from this module)\n \t\t\tmodule.hot.active = false;\n\n \t\t\t// remove module from cache\n \t\t\tdelete installedModules[moduleId];\n\n \t\t\t// when disposing there is no need to call dispose handler\n \t\t\tdelete outdatedDependencies[moduleId];\n\n \t\t\t// remove \"parents\" references from all children\n \t\t\tfor (j = 0; j < module.children.length; j++) {\n \t\t\t\tvar child = installedModules[module.children[j]];\n \t\t\t\tif (!child) continue;\n \t\t\t\tidx = child.parents.indexOf(moduleId);\n \t\t\t\tif (idx >= 0) {\n \t\t\t\t\tchild.parents.splice(idx, 1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// remove outdated dependency from module children\n \t\tvar dependency;\n \t\tvar moduleOutdatedDependencies;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n \t\t\t\t\t\tidx = module.children.indexOf(dependency);\n \t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Not in \"apply\" phase\n \t\thotSetStatus(\"apply\");\n\n \t\thotCurrentHash = hotUpdateNewHash;\n\n \t\t// insert new code\n \t\tfor (moduleId in appliedUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n \t\t\t}\n \t\t}\n\n \t\t// call accept handlers\n \t\tvar error = null;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tvar callbacks = [];\n \t\t\t\t\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\n \t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\n \t\t\t\t\t\tif (cb) {\n \t\t\t\t\t\t\tif (callbacks.indexOf(cb) !== -1) continue;\n \t\t\t\t\t\t\tcallbacks.push(cb);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tfor (i = 0; i < callbacks.length; i++) {\n \t\t\t\t\t\tcb = callbacks[i];\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\n \t\t\t\t\t\t} catch (err) {\n \t\t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n \t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\n \t\t\t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t\t\t});\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Load self accepted modules\n \t\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\n \t\t\tmoduleId = item.module;\n \t\t\thotCurrentParents = [moduleId];\n \t\t\ttry {\n \t\t\t\t__webpack_require__(moduleId);\n \t\t\t} catch (err) {\n \t\t\t\tif (typeof item.errorHandler === \"function\") {\n \t\t\t\t\ttry {\n \t\t\t\t\t\titem.errorHandler(err);\n \t\t\t\t\t} catch (err2) {\n \t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n \t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\terror: err2,\n \t\t\t\t\t\t\t\toriginalError: err\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\tif (!error) error = err2;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\ttype: \"self-accept-errored\",\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// handle errors in accept handlers and self accepted module load\n \t\tif (error) {\n \t\t\thotSetStatus(\"fail\");\n \t\t\treturn Promise.reject(error);\n \t\t}\n\n \t\thotSetStatus(\"idle\");\n \t\treturn new Promise(function(resolve) {\n \t\t\tresolve(outdatedModules);\n \t\t});\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {},\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n\n \t// Load entry module and return exports\n \treturn hotCreateRequire(7)(__webpack_require__.s = 7);\n","/*!\n * Knockout JavaScript library v3.4.2\n * (c) The Knockout.js team - http://knockoutjs.com/\n * License: MIT (http://www.opensource.org/licenses/mit-license.php)\n */\n\n(function(){\nvar DEBUG=true;\n(function(undefined){\n    // (0, eval)('this') is a robust way of getting a reference to the global object\n    // For details, see http://stackoverflow.com/questions/14119988/return-this-0-evalthis/14120023#14120023\n    var window = this || (0, eval)('this'),\n        document = window['document'],\n        navigator = window['navigator'],\n        jQueryInstance = window[\"jQuery\"],\n        JSON = window[\"JSON\"];\n(function(factory) {\n    // Support three module loading scenarios\n    if (typeof define === 'function' && define['amd']) {\n        // [1] AMD anonymous module\n        define(['exports', 'require'], factory);\n    } else if (typeof exports === 'object' && typeof module === 'object') {\n        // [2] CommonJS/Node.js\n        factory(module['exports'] || exports);  // module.exports is for Node.js\n    } else {\n        // [3] No module loader (plain <script> tag) - put directly in global namespace\n        factory(window['ko'] = {});\n    }\n}(function(koExports, amdRequire){\n// Internally, all KO objects are attached to koExports (even the non-exported ones whose names will be minified by the closure compiler).\n// In the future, the following \"ko\" variable may be made distinct from \"koExports\" so that private objects are not externally reachable.\nvar ko = typeof koExports !== 'undefined' ? koExports : {};\n// Google Closure Compiler helpers (used only to make the minified file smaller)\nko.exportSymbol = function(koPath, object) {\n    var tokens = koPath.split(\".\");\n\n    // In the future, \"ko\" may become distinct from \"koExports\" (so that non-exported objects are not reachable)\n    // At that point, \"target\" would be set to: (typeof koExports !== \"undefined\" ? koExports : ko)\n    var target = ko;\n\n    for (var i = 0; i < tokens.length - 1; i++)\n        target = target[tokens[i]];\n    target[tokens[tokens.length - 1]] = object;\n};\nko.exportProperty = function(owner, publicName, object) {\n    owner[publicName] = object;\n};\nko.version = \"3.4.2\";\n\nko.exportSymbol('version', ko.version);\n// For any options that may affect various areas of Knockout and aren't directly associated with data binding.\nko.options = {\n    'deferUpdates': false,\n    'useOnlyNativeEvents': false\n};\n\n//ko.exportSymbol('options', ko.options);   // 'options' isn't minified\nko.utils = (function () {\n    function objectForEach(obj, action) {\n        for (var prop in obj) {\n            if (obj.hasOwnProperty(prop)) {\n                action(prop, obj[prop]);\n            }\n        }\n    }\n\n    function extend(target, source) {\n        if (source) {\n            for(var prop in source) {\n                if(source.hasOwnProperty(prop)) {\n                    target[prop] = source[prop];\n                }\n            }\n        }\n        return target;\n    }\n\n    function setPrototypeOf(obj, proto) {\n        obj.__proto__ = proto;\n        return obj;\n    }\n\n    var canSetPrototype = ({ __proto__: [] } instanceof Array);\n    var canUseSymbols = !DEBUG && typeof Symbol === 'function';\n\n    // Represent the known event types in a compact way, then at runtime transform it into a hash with event name as key (for fast lookup)\n    var knownEvents = {}, knownEventTypesByEventName = {};\n    var keyEventTypeName = (navigator && /Firefox\\/2/i.test(navigator.userAgent)) ? 'KeyboardEvent' : 'UIEvents';\n    knownEvents[keyEventTypeName] = ['keyup', 'keydown', 'keypress'];\n    knownEvents['MouseEvents'] = ['click', 'dblclick', 'mousedown', 'mouseup', 'mousemove', 'mouseover', 'mouseout', 'mouseenter', 'mouseleave'];\n    objectForEach(knownEvents, function(eventType, knownEventsForType) {\n        if (knownEventsForType.length) {\n            for (var i = 0, j = knownEventsForType.length; i < j; i++)\n                knownEventTypesByEventName[knownEventsForType[i]] = eventType;\n        }\n    });\n    var eventsThatMustBeRegisteredUsingAttachEvent = { 'propertychange': true }; // Workaround for an IE9 issue - https://github.com/SteveSanderson/knockout/issues/406\n\n    // Detect IE versions for bug workarounds (uses IE conditionals, not UA string, for robustness)\n    // Note that, since IE 10 does not support conditional comments, the following logic only detects IE < 10.\n    // Currently this is by design, since IE 10+ behaves correctly when treated as a standard browser.\n    // If there is a future need to detect specific versions of IE10+, we will amend this.\n    var ieVersion = document && (function() {\n        var version = 3, div = document.createElement('div'), iElems = div.getElementsByTagName('i');\n\n        // Keep constructing conditional HTML blocks until we hit one that resolves to an empty fragment\n        while (\n            div.innerHTML = '<!--[if gt IE ' + (++version) + ']><i></i><![endif]-->',\n            iElems[0]\n        ) {}\n        return version > 4 ? version : undefined;\n    }());\n    var isIe6 = ieVersion === 6,\n        isIe7 = ieVersion === 7;\n\n    function isClickOnCheckableElement(element, eventType) {\n        if ((ko.utils.tagNameLower(element) !== \"input\") || !element.type) return false;\n        if (eventType.toLowerCase() != \"click\") return false;\n        var inputType = element.type;\n        return (inputType == \"checkbox\") || (inputType == \"radio\");\n    }\n\n    // For details on the pattern for changing node classes\n    // see: https://github.com/knockout/knockout/issues/1597\n    var cssClassNameRegex = /\\S+/g;\n\n    function toggleDomNodeCssClass(node, classNames, shouldHaveClass) {\n        var addOrRemoveFn;\n        if (classNames) {\n            if (typeof node.classList === 'object') {\n                addOrRemoveFn = node.classList[shouldHaveClass ? 'add' : 'remove'];\n                ko.utils.arrayForEach(classNames.match(cssClassNameRegex), function(className) {\n                    addOrRemoveFn.call(node.classList, className);\n                });\n            } else if (typeof node.className['baseVal'] === 'string') {\n                // SVG tag .classNames is an SVGAnimatedString instance\n                toggleObjectClassPropertyString(node.className, 'baseVal', classNames, shouldHaveClass);\n            } else {\n                // node.className ought to be a string.\n                toggleObjectClassPropertyString(node, 'className', classNames, shouldHaveClass);\n            }\n        }\n    }\n\n    function toggleObjectClassPropertyString(obj, prop, classNames, shouldHaveClass) {\n        // obj/prop is either a node/'className' or a SVGAnimatedString/'baseVal'.\n        var currentClassNames = obj[prop].match(cssClassNameRegex) || [];\n        ko.utils.arrayForEach(classNames.match(cssClassNameRegex), function(className) {\n            ko.utils.addOrRemoveItem(currentClassNames, className, shouldHaveClass);\n        });\n        obj[prop] = currentClassNames.join(\" \");\n    }\n\n    return {\n        fieldsIncludedWithJsonPost: ['authenticity_token', /^__RequestVerificationToken(_.*)?$/],\n\n        arrayForEach: function (array, action) {\n            for (var i = 0, j = array.length; i < j; i++)\n                action(array[i], i);\n        },\n\n        arrayIndexOf: function (array, item) {\n            if (typeof Array.prototype.indexOf == \"function\")\n                return Array.prototype.indexOf.call(array, item);\n            for (var i = 0, j = array.length; i < j; i++)\n                if (array[i] === item)\n                    return i;\n            return -1;\n        },\n\n        arrayFirst: function (array, predicate, predicateOwner) {\n            for (var i = 0, j = array.length; i < j; i++)\n                if (predicate.call(predicateOwner, array[i], i))\n                    return array[i];\n            return null;\n        },\n\n        arrayRemoveItem: function (array, itemToRemove) {\n            var index = ko.utils.arrayIndexOf(array, itemToRemove);\n            if (index > 0) {\n                array.splice(index, 1);\n            }\n            else if (index === 0) {\n                array.shift();\n            }\n        },\n\n        arrayGetDistinctValues: function (array) {\n            array = array || [];\n            var result = [];\n            for (var i = 0, j = array.length; i < j; i++) {\n                if (ko.utils.arrayIndexOf(result, array[i]) < 0)\n                    result.push(array[i]);\n            }\n            return result;\n        },\n\n        arrayMap: function (array, mapping) {\n            array = array || [];\n            var result = [];\n            for (var i = 0, j = array.length; i < j; i++)\n                result.push(mapping(array[i], i));\n            return result;\n        },\n\n        arrayFilter: function (array, predicate) {\n            array = array || [];\n            var result = [];\n            for (var i = 0, j = array.length; i < j; i++)\n                if (predicate(array[i], i))\n                    result.push(array[i]);\n            return result;\n        },\n\n        arrayPushAll: function (array, valuesToPush) {\n            if (valuesToPush instanceof Array)\n                array.push.apply(array, valuesToPush);\n            else\n                for (var i = 0, j = valuesToPush.length; i < j; i++)\n                    array.push(valuesToPush[i]);\n            return array;\n        },\n\n        addOrRemoveItem: function(array, value, included) {\n            var existingEntryIndex = ko.utils.arrayIndexOf(ko.utils.peekObservable(array), value);\n            if (existingEntryIndex < 0) {\n                if (included)\n                    array.push(value);\n            } else {\n                if (!included)\n                    array.splice(existingEntryIndex, 1);\n            }\n        },\n\n        canSetPrototype: canSetPrototype,\n\n        extend: extend,\n\n        setPrototypeOf: setPrototypeOf,\n\n        setPrototypeOfOrExtend: canSetPrototype ? setPrototypeOf : extend,\n\n        objectForEach: objectForEach,\n\n        objectMap: function(source, mapping) {\n            if (!source)\n                return source;\n            var target = {};\n            for (var prop in source) {\n                if (source.hasOwnProperty(prop)) {\n                    target[prop] = mapping(source[prop], prop, source);\n                }\n            }\n            return target;\n        },\n\n        emptyDomNode: function (domNode) {\n            while (domNode.firstChild) {\n                ko.removeNode(domNode.firstChild);\n            }\n        },\n\n        moveCleanedNodesToContainerElement: function(nodes) {\n            // Ensure it's a real array, as we're about to reparent the nodes and\n            // we don't want the underlying collection to change while we're doing that.\n            var nodesArray = ko.utils.makeArray(nodes);\n            var templateDocument = (nodesArray[0] && nodesArray[0].ownerDocument) || document;\n\n            var container = templateDocument.createElement('div');\n            for (var i = 0, j = nodesArray.length; i < j; i++) {\n                container.appendChild(ko.cleanNode(nodesArray[i]));\n            }\n            return container;\n        },\n\n        cloneNodes: function (nodesArray, shouldCleanNodes) {\n            for (var i = 0, j = nodesArray.length, newNodesArray = []; i < j; i++) {\n                var clonedNode = nodesArray[i].cloneNode(true);\n                newNodesArray.push(shouldCleanNodes ? ko.cleanNode(clonedNode) : clonedNode);\n            }\n            return newNodesArray;\n        },\n\n        setDomNodeChildren: function (domNode, childNodes) {\n            ko.utils.emptyDomNode(domNode);\n            if (childNodes) {\n                for (var i = 0, j = childNodes.length; i < j; i++)\n                    domNode.appendChild(childNodes[i]);\n            }\n        },\n\n        replaceDomNodes: function (nodeToReplaceOrNodeArray, newNodesArray) {\n            var nodesToReplaceArray = nodeToReplaceOrNodeArray.nodeType ? [nodeToReplaceOrNodeArray] : nodeToReplaceOrNodeArray;\n            if (nodesToReplaceArray.length > 0) {\n                var insertionPoint = nodesToReplaceArray[0];\n                var parent = insertionPoint.parentNode;\n                for (var i = 0, j = newNodesArray.length; i < j; i++)\n                    parent.insertBefore(newNodesArray[i], insertionPoint);\n                for (var i = 0, j = nodesToReplaceArray.length; i < j; i++) {\n                    ko.removeNode(nodesToReplaceArray[i]);\n                }\n            }\n        },\n\n        fixUpContinuousNodeArray: function(continuousNodeArray, parentNode) {\n            // Before acting on a set of nodes that were previously outputted by a template function, we have to reconcile\n            // them against what is in the DOM right now. It may be that some of the nodes have already been removed, or that\n            // new nodes might have been inserted in the middle, for example by a binding. Also, there may previously have been\n            // leading comment nodes (created by rewritten string-based templates) that have since been removed during binding.\n            // So, this function translates the old \"map\" output array into its best guess of the set of current DOM nodes.\n            //\n            // Rules:\n            //   [A] Any leading nodes that have been removed should be ignored\n            //       These most likely correspond to memoization nodes that were already removed during binding\n            //       See https://github.com/knockout/knockout/pull/440\n            //   [B] Any trailing nodes that have been remove should be ignored\n            //       This prevents the code here from adding unrelated nodes to the array while processing rule [C]\n            //       See https://github.com/knockout/knockout/pull/1903\n            //   [C] We want to output a continuous series of nodes. So, ignore any nodes that have already been removed,\n            //       and include any nodes that have been inserted among the previous collection\n\n            if (continuousNodeArray.length) {\n                // The parent node can be a virtual element; so get the real parent node\n                parentNode = (parentNode.nodeType === 8 && parentNode.parentNode) || parentNode;\n\n                // Rule [A]\n                while (continuousNodeArray.length && continuousNodeArray[0].parentNode !== parentNode)\n                    continuousNodeArray.splice(0, 1);\n\n                // Rule [B]\n                while (continuousNodeArray.length > 1 && continuousNodeArray[continuousNodeArray.length - 1].parentNode !== parentNode)\n                    continuousNodeArray.length--;\n\n                // Rule [C]\n                if (continuousNodeArray.length > 1) {\n                    var current = continuousNodeArray[0], last = continuousNodeArray[continuousNodeArray.length - 1];\n                    // Replace with the actual new continuous node set\n                    continuousNodeArray.length = 0;\n                    while (current !== last) {\n                        continuousNodeArray.push(current);\n                        current = current.nextSibling;\n                    }\n                    continuousNodeArray.push(last);\n                }\n            }\n            return continuousNodeArray;\n        },\n\n        setOptionNodeSelectionState: function (optionNode, isSelected) {\n            // IE6 sometimes throws \"unknown error\" if you try to write to .selected directly, whereas Firefox struggles with setAttribute. Pick one based on browser.\n            if (ieVersion < 7)\n                optionNode.setAttribute(\"selected\", isSelected);\n            else\n                optionNode.selected = isSelected;\n        },\n\n        stringTrim: function (string) {\n            return string === null || string === undefined ? '' :\n                string.trim ?\n                    string.trim() :\n                    string.toString().replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g, '');\n        },\n\n        stringStartsWith: function (string, startsWith) {\n            string = string || \"\";\n            if (startsWith.length > string.length)\n                return false;\n            return string.substring(0, startsWith.length) === startsWith;\n        },\n\n        domNodeIsContainedBy: function (node, containedByNode) {\n            if (node === containedByNode)\n                return true;\n            if (node.nodeType === 11)\n                return false; // Fixes issue #1162 - can't use node.contains for document fragments on IE8\n            if (containedByNode.contains)\n                return containedByNode.contains(node.nodeType === 3 ? node.parentNode : node);\n            if (containedByNode.compareDocumentPosition)\n                return (containedByNode.compareDocumentPosition(node) & 16) == 16;\n            while (node && node != containedByNode) {\n                node = node.parentNode;\n            }\n            return !!node;\n        },\n\n        domNodeIsAttachedToDocument: function (node) {\n            return ko.utils.domNodeIsContainedBy(node, node.ownerDocument.documentElement);\n        },\n\n        anyDomNodeIsAttachedToDocument: function(nodes) {\n            return !!ko.utils.arrayFirst(nodes, ko.utils.domNodeIsAttachedToDocument);\n        },\n\n        tagNameLower: function(element) {\n            // For HTML elements, tagName will always be upper case; for XHTML elements, it'll be lower case.\n            // Possible future optimization: If we know it's an element from an XHTML document (not HTML),\n            // we don't need to do the .toLowerCase() as it will always be lower case anyway.\n            return element && element.tagName && element.tagName.toLowerCase();\n        },\n\n        catchFunctionErrors: function (delegate) {\n            return ko['onError'] ? function () {\n                try {\n                    return delegate.apply(this, arguments);\n                } catch (e) {\n                    ko['onError'] && ko['onError'](e);\n                    throw e;\n                }\n            } : delegate;\n        },\n\n        setTimeout: function (handler, timeout) {\n            return setTimeout(ko.utils.catchFunctionErrors(handler), timeout);\n        },\n\n        deferError: function (error) {\n            setTimeout(function () {\n                ko['onError'] && ko['onError'](error);\n                throw error;\n            }, 0);\n        },\n\n        registerEventHandler: function (element, eventType, handler) {\n            var wrappedHandler = ko.utils.catchFunctionErrors(handler);\n\n            var mustUseAttachEvent = ieVersion && eventsThatMustBeRegisteredUsingAttachEvent[eventType];\n            if (!ko.options['useOnlyNativeEvents'] && !mustUseAttachEvent && jQueryInstance) {\n                jQueryInstance(element)['bind'](eventType, wrappedHandler);\n            } else if (!mustUseAttachEvent && typeof element.addEventListener == \"function\")\n                element.addEventListener(eventType, wrappedHandler, false);\n            else if (typeof element.attachEvent != \"undefined\") {\n                var attachEventHandler = function (event) { wrappedHandler.call(element, event); },\n                    attachEventName = \"on\" + eventType;\n                element.attachEvent(attachEventName, attachEventHandler);\n\n                // IE does not dispose attachEvent handlers automatically (unlike with addEventListener)\n                // so to avoid leaks, we have to remove them manually. See bug #856\n                ko.utils.domNodeDisposal.addDisposeCallback(element, function() {\n                    element.detachEvent(attachEventName, attachEventHandler);\n                });\n            } else\n                throw new Error(\"Browser doesn't support addEventListener or attachEvent\");\n        },\n\n        triggerEvent: function (element, eventType) {\n            if (!(element && element.nodeType))\n                throw new Error(\"element must be a DOM node when calling triggerEvent\");\n\n            // For click events on checkboxes and radio buttons, jQuery toggles the element checked state *after* the\n            // event handler runs instead of *before*. (This was fixed in 1.9 for checkboxes but not for radio buttons.)\n            // IE doesn't change the checked state when you trigger the click event using \"fireEvent\".\n            // In both cases, we'll use the click method instead.\n            var useClickWorkaround = isClickOnCheckableElement(element, eventType);\n\n            if (!ko.options['useOnlyNativeEvents'] && jQueryInstance && !useClickWorkaround) {\n                jQueryInstance(element)['trigger'](eventType);\n            } else if (typeof document.createEvent == \"function\") {\n                if (typeof element.dispatchEvent == \"function\") {\n                    var eventCategory = knownEventTypesByEventName[eventType] || \"HTMLEvents\";\n                    var event = document.createEvent(eventCategory);\n                    event.initEvent(eventType, true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, element);\n                    element.dispatchEvent(event);\n                }\n                else\n                    throw new Error(\"The supplied element doesn't support dispatchEvent\");\n            } else if (useClickWorkaround && element.click) {\n                element.click();\n            } else if (typeof element.fireEvent != \"undefined\") {\n                element.fireEvent(\"on\" + eventType);\n            } else {\n                throw new Error(\"Browser doesn't support triggering events\");\n            }\n        },\n\n        unwrapObservable: function (value) {\n            return ko.isObservable(value) ? value() : value;\n        },\n\n        peekObservable: function (value) {\n            return ko.isObservable(value) ? value.peek() : value;\n        },\n\n        toggleDomNodeCssClass: toggleDomNodeCssClass,\n\n        setTextContent: function(element, textContent) {\n            var value = ko.utils.unwrapObservable(textContent);\n            if ((value === null) || (value === undefined))\n                value = \"\";\n\n            // We need there to be exactly one child: a text node.\n            // If there are no children, more than one, or if it's not a text node,\n            // we'll clear everything and create a single text node.\n            var innerTextNode = ko.virtualElements.firstChild(element);\n            if (!innerTextNode || innerTextNode.nodeType != 3 || ko.virtualElements.nextSibling(innerTextNode)) {\n                ko.virtualElements.setDomNodeChildren(element, [element.ownerDocument.createTextNode(value)]);\n            } else {\n                innerTextNode.data = value;\n            }\n\n            ko.utils.forceRefresh(element);\n        },\n\n        setElementName: function(element, name) {\n            element.name = name;\n\n            // Workaround IE 6/7 issue\n            // - https://github.com/SteveSanderson/knockout/issues/197\n            // - http://www.matts411.com/post/setting_the_name_attribute_in_ie_dom/\n            if (ieVersion <= 7) {\n                try {\n                    element.mergeAttributes(document.createElement(\"<input name='\" + element.name + \"'/>\"), false);\n                }\n                catch(e) {} // For IE9 with doc mode \"IE9 Standards\" and browser mode \"IE9 Compatibility View\"\n            }\n        },\n\n        forceRefresh: function(node) {\n            // Workaround for an IE9 rendering bug - https://github.com/SteveSanderson/knockout/issues/209\n            if (ieVersion >= 9) {\n                // For text nodes and comment nodes (most likely virtual elements), we will have to refresh the container\n                var elem = node.nodeType == 1 ? node : node.parentNode;\n                if (elem.style)\n                    elem.style.zoom = elem.style.zoom;\n            }\n        },\n\n        ensureSelectElementIsRenderedCorrectly: function(selectElement) {\n            // Workaround for IE9 rendering bug - it doesn't reliably display all the text in dynamically-added select boxes unless you force it to re-render by updating the width.\n            // (See https://github.com/SteveSanderson/knockout/issues/312, http://stackoverflow.com/questions/5908494/select-only-shows-first-char-of-selected-option)\n            // Also fixes IE7 and IE8 bug that causes selects to be zero width if enclosed by 'if' or 'with'. (See issue #839)\n            if (ieVersion) {\n                var originalWidth = selectElement.style.width;\n                selectElement.style.width = 0;\n                selectElement.style.width = originalWidth;\n            }\n        },\n\n        range: function (min, max) {\n            min = ko.utils.unwrapObservable(min);\n            max = ko.utils.unwrapObservable(max);\n            var result = [];\n            for (var i = min; i <= max; i++)\n                result.push(i);\n            return result;\n        },\n\n        makeArray: function(arrayLikeObject) {\n            var result = [];\n            for (var i = 0, j = arrayLikeObject.length; i < j; i++) {\n                result.push(arrayLikeObject[i]);\n            };\n            return result;\n        },\n\n        createSymbolOrString: function(identifier) {\n            return canUseSymbols ? Symbol(identifier) : identifier;\n        },\n\n        isIe6 : isIe6,\n        isIe7 : isIe7,\n        ieVersion : ieVersion,\n\n        getFormFields: function(form, fieldName) {\n            var fields = ko.utils.makeArray(form.getElementsByTagName(\"input\")).concat(ko.utils.makeArray(form.getElementsByTagName(\"textarea\")));\n            var isMatchingField = (typeof fieldName == 'string')\n                ? function(field) { return field.name === fieldName }\n                : function(field) { return fieldName.test(field.name) }; // Treat fieldName as regex or object containing predicate\n            var matches = [];\n            for (var i = fields.length - 1; i >= 0; i--) {\n                if (isMatchingField(fields[i]))\n                    matches.push(fields[i]);\n            };\n            return matches;\n        },\n\n        parseJson: function (jsonString) {\n            if (typeof jsonString == \"string\") {\n                jsonString = ko.utils.stringTrim(jsonString);\n                if (jsonString) {\n                    if (JSON && JSON.parse) // Use native parsing where available\n                        return JSON.parse(jsonString);\n                    return (new Function(\"return \" + jsonString))(); // Fallback on less safe parsing for older browsers\n                }\n            }\n            return null;\n        },\n\n        stringifyJson: function (data, replacer, space) {   // replacer and space are optional\n            if (!JSON || !JSON.stringify)\n                throw new Error(\"Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don't support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js\");\n            return JSON.stringify(ko.utils.unwrapObservable(data), replacer, space);\n        },\n\n        postJson: function (urlOrForm, data, options) {\n            options = options || {};\n            var params = options['params'] || {};\n            var includeFields = options['includeFields'] || this.fieldsIncludedWithJsonPost;\n            var url = urlOrForm;\n\n            // If we were given a form, use its 'action' URL and pick out any requested field values\n            if((typeof urlOrForm == 'object') && (ko.utils.tagNameLower(urlOrForm) === \"form\")) {\n                var originalForm = urlOrForm;\n                url = originalForm.action;\n                for (var i = includeFields.length - 1; i >= 0; i--) {\n                    var fields = ko.utils.getFormFields(originalForm, includeFields[i]);\n                    for (var j = fields.length - 1; j >= 0; j--)\n                        params[fields[j].name] = fields[j].value;\n                }\n            }\n\n            data = ko.utils.unwrapObservable(data);\n            var form = document.createElement(\"form\");\n            form.style.display = \"none\";\n            form.action = url;\n            form.method = \"post\";\n            for (var key in data) {\n                // Since 'data' this is a model object, we include all properties including those inherited from its prototype\n                var input = document.createElement(\"input\");\n                input.type = \"hidden\";\n                input.name = key;\n                input.value = ko.utils.stringifyJson(ko.utils.unwrapObservable(data[key]));\n                form.appendChild(input);\n            }\n            objectForEach(params, function(key, value) {\n                var input = document.createElement(\"input\");\n                input.type = \"hidden\";\n                input.name = key;\n                input.value = value;\n                form.appendChild(input);\n            });\n            document.body.appendChild(form);\n            options['submitter'] ? options['submitter'](form) : form.submit();\n            setTimeout(function () { form.parentNode.removeChild(form); }, 0);\n        }\n    }\n}());\n\nko.exportSymbol('utils', ko.utils);\nko.exportSymbol('utils.arrayForEach', ko.utils.arrayForEach);\nko.exportSymbol('utils.arrayFirst', ko.utils.arrayFirst);\nko.exportSymbol('utils.arrayFilter', ko.utils.arrayFilter);\nko.exportSymbol('utils.arrayGetDistinctValues', ko.utils.arrayGetDistinctValues);\nko.exportSymbol('utils.arrayIndexOf', ko.utils.arrayIndexOf);\nko.exportSymbol('utils.arrayMap', ko.utils.arrayMap);\nko.exportSymbol('utils.arrayPushAll', ko.utils.arrayPushAll);\nko.exportSymbol('utils.arrayRemoveItem', ko.utils.arrayRemoveItem);\nko.exportSymbol('utils.extend', ko.utils.extend);\nko.exportSymbol('utils.fieldsIncludedWithJsonPost', ko.utils.fieldsIncludedWithJsonPost);\nko.exportSymbol('utils.getFormFields', ko.utils.getFormFields);\nko.exportSymbol('utils.peekObservable', ko.utils.peekObservable);\nko.exportSymbol('utils.postJson', ko.utils.postJson);\nko.exportSymbol('utils.parseJson', ko.utils.parseJson);\nko.exportSymbol('utils.registerEventHandler', ko.utils.registerEventHandler);\nko.exportSymbol('utils.stringifyJson', ko.utils.stringifyJson);\nko.exportSymbol('utils.range', ko.utils.range);\nko.exportSymbol('utils.toggleDomNodeCssClass', ko.utils.toggleDomNodeCssClass);\nko.exportSymbol('utils.triggerEvent', ko.utils.triggerEvent);\nko.exportSymbol('utils.unwrapObservable', ko.utils.unwrapObservable);\nko.exportSymbol('utils.objectForEach', ko.utils.objectForEach);\nko.exportSymbol('utils.addOrRemoveItem', ko.utils.addOrRemoveItem);\nko.exportSymbol('utils.setTextContent', ko.utils.setTextContent);\nko.exportSymbol('unwrap', ko.utils.unwrapObservable); // Convenient shorthand, because this is used so commonly\n\nif (!Function.prototype['bind']) {\n    // Function.prototype.bind is a standard part of ECMAScript 5th Edition (December 2009, http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf)\n    // In case the browser doesn't implement it natively, provide a JavaScript implementation. This implementation is based on the one in prototype.js\n    Function.prototype['bind'] = function (object) {\n        var originalFunction = this;\n        if (arguments.length === 1) {\n            return function () {\n                return originalFunction.apply(object, arguments);\n            };\n        } else {\n            var partialArgs = Array.prototype.slice.call(arguments, 1);\n            return function () {\n                var args = partialArgs.slice(0);\n                args.push.apply(args, arguments);\n                return originalFunction.apply(object, args);\n            };\n        }\n    };\n}\n\nko.utils.domData = new (function () {\n    var uniqueId = 0;\n    var dataStoreKeyExpandoPropertyName = \"__ko__\" + (new Date).getTime();\n    var dataStore = {};\n\n    function getAll(node, createIfNotFound) {\n        var dataStoreKey = node[dataStoreKeyExpandoPropertyName];\n        var hasExistingDataStore = dataStoreKey && (dataStoreKey !== \"null\") && dataStore[dataStoreKey];\n        if (!hasExistingDataStore) {\n            if (!createIfNotFound)\n                return undefined;\n            dataStoreKey = node[dataStoreKeyExpandoPropertyName] = \"ko\" + uniqueId++;\n            dataStore[dataStoreKey] = {};\n        }\n        return dataStore[dataStoreKey];\n    }\n\n    return {\n        get: function (node, key) {\n            var allDataForNode = getAll(node, false);\n            return allDataForNode === undefined ? undefined : allDataForNode[key];\n        },\n        set: function (node, key, value) {\n            if (value === undefined) {\n                // Make sure we don't actually create a new domData key if we are actually deleting a value\n                if (getAll(node, false) === undefined)\n                    return;\n            }\n            var allDataForNode = getAll(node, true);\n            allDataForNode[key] = value;\n        },\n        clear: function (node) {\n            var dataStoreKey = node[dataStoreKeyExpandoPropertyName];\n            if (dataStoreKey) {\n                delete dataStore[dataStoreKey];\n                node[dataStoreKeyExpandoPropertyName] = null;\n                return true; // Exposing \"did clean\" flag purely so specs can infer whether things have been cleaned up as intended\n            }\n            return false;\n        },\n\n        nextKey: function () {\n            return (uniqueId++) + dataStoreKeyExpandoPropertyName;\n        }\n    };\n})();\n\nko.exportSymbol('utils.domData', ko.utils.domData);\nko.exportSymbol('utils.domData.clear', ko.utils.domData.clear); // Exporting only so specs can clear up after themselves fully\n\nko.utils.domNodeDisposal = new (function () {\n    var domDataKey = ko.utils.domData.nextKey();\n    var cleanableNodeTypes = { 1: true, 8: true, 9: true };       // Element, Comment, Document\n    var cleanableNodeTypesWithDescendants = { 1: true, 9: true }; // Element, Document\n\n    function getDisposeCallbacksCollection(node, createIfNotFound) {\n        var allDisposeCallbacks = ko.utils.domData.get(node, domDataKey);\n        if ((allDisposeCallbacks === undefined) && createIfNotFound) {\n            allDisposeCallbacks = [];\n            ko.utils.domData.set(node, domDataKey, allDisposeCallbacks);\n        }\n        return allDisposeCallbacks;\n    }\n    function destroyCallbacksCollection(node) {\n        ko.utils.domData.set(node, domDataKey, undefined);\n    }\n\n    function cleanSingleNode(node) {\n        // Run all the dispose callbacks\n        var callbacks = getDisposeCallbacksCollection(node, false);\n        if (callbacks) {\n            callbacks = callbacks.slice(0); // Clone, as the array may be modified during iteration (typically, callbacks will remove themselves)\n            for (var i = 0; i < callbacks.length; i++)\n                callbacks[i](node);\n        }\n\n        // Erase the DOM data\n        ko.utils.domData.clear(node);\n\n        // Perform cleanup needed by external libraries (currently only jQuery, but can be extended)\n        ko.utils.domNodeDisposal[\"cleanExternalData\"](node);\n\n        // Clear any immediate-child comment nodes, as these wouldn't have been found by\n        // node.getElementsByTagName(\"*\") in cleanNode() (comment nodes aren't elements)\n        if (cleanableNodeTypesWithDescendants[node.nodeType])\n            cleanImmediateCommentTypeChildren(node);\n    }\n\n    function cleanImmediateCommentTypeChildren(nodeWithChildren) {\n        var child, nextChild = nodeWithChildren.firstChild;\n        while (child = nextChild) {\n            nextChild = child.nextSibling;\n            if (child.nodeType === 8)\n                cleanSingleNode(child);\n        }\n    }\n\n    return {\n        addDisposeCallback : function(node, callback) {\n            if (typeof callback != \"function\")\n                throw new Error(\"Callback must be a function\");\n            getDisposeCallbacksCollection(node, true).push(callback);\n        },\n\n        removeDisposeCallback : function(node, callback) {\n            var callbacksCollection = getDisposeCallbacksCollection(node, false);\n            if (callbacksCollection) {\n                ko.utils.arrayRemoveItem(callbacksCollection, callback);\n                if (callbacksCollection.length == 0)\n                    destroyCallbacksCollection(node);\n            }\n        },\n\n        cleanNode : function(node) {\n            // First clean this node, where applicable\n            if (cleanableNodeTypes[node.nodeType]) {\n                cleanSingleNode(node);\n\n                // ... then its descendants, where applicable\n                if (cleanableNodeTypesWithDescendants[node.nodeType]) {\n                    // Clone the descendants list in case it changes during iteration\n                    var descendants = [];\n                    ko.utils.arrayPushAll(descendants, node.getElementsByTagName(\"*\"));\n                    for (var i = 0, j = descendants.length; i < j; i++)\n                        cleanSingleNode(descendants[i]);\n                }\n            }\n            return node;\n        },\n\n        removeNode : function(node) {\n            ko.cleanNode(node);\n            if (node.parentNode)\n                node.parentNode.removeChild(node);\n        },\n\n        \"cleanExternalData\" : function (node) {\n            // Special support for jQuery here because it's so commonly used.\n            // Many jQuery plugins (including jquery.tmpl) store data using jQuery's equivalent of domData\n            // so notify it to tear down any resources associated with the node & descendants here.\n            if (jQueryInstance && (typeof jQueryInstance['cleanData'] == \"function\"))\n                jQueryInstance['cleanData']([node]);\n        }\n    };\n})();\nko.cleanNode = ko.utils.domNodeDisposal.cleanNode; // Shorthand name for convenience\nko.removeNode = ko.utils.domNodeDisposal.removeNode; // Shorthand name for convenience\nko.exportSymbol('cleanNode', ko.cleanNode);\nko.exportSymbol('removeNode', ko.removeNode);\nko.exportSymbol('utils.domNodeDisposal', ko.utils.domNodeDisposal);\nko.exportSymbol('utils.domNodeDisposal.addDisposeCallback', ko.utils.domNodeDisposal.addDisposeCallback);\nko.exportSymbol('utils.domNodeDisposal.removeDisposeCallback', ko.utils.domNodeDisposal.removeDisposeCallback);\n(function () {\n    var none = [0, \"\", \"\"],\n        table = [1, \"<table>\", \"</table>\"],\n        tbody = [2, \"<table><tbody>\", \"</tbody></table>\"],\n        tr = [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\n        select = [1, \"<select multiple='multiple'>\", \"</select>\"],\n        lookup = {\n            'thead': table,\n            'tbody': table,\n            'tfoot': table,\n            'tr': tbody,\n            'td': tr,\n            'th': tr,\n            'option': select,\n            'optgroup': select\n        },\n\n        // This is needed for old IE if you're *not* using either jQuery or innerShiv. Doesn't affect other cases.\n        mayRequireCreateElementHack = ko.utils.ieVersion <= 8;\n\n    function getWrap(tags) {\n        var m = tags.match(/^<([a-z]+)[ >]/);\n        return (m && lookup[m[1]]) || none;\n    }\n\n    function simpleHtmlParse(html, documentContext) {\n        documentContext || (documentContext = document);\n        var windowContext = documentContext['parentWindow'] || documentContext['defaultView'] || window;\n\n        // Based on jQuery's \"clean\" function, but only accounting for table-related elements.\n        // If you have referenced jQuery, this won't be used anyway - KO will use jQuery's \"clean\" function directly\n\n        // Note that there's still an issue in IE < 9 whereby it will discard comment nodes that are the first child of\n        // a descendant node. For example: \"<div><!-- mycomment -->abc</div>\" will get parsed as \"<div>abc</div>\"\n        // This won't affect anyone who has referenced jQuery, and there's always the workaround of inserting a dummy node\n        // (possibly a text node) in front of the comment. So, KO does not attempt to workaround this IE issue automatically at present.\n\n        // Trim whitespace, otherwise indexOf won't work as expected\n        var tags = ko.utils.stringTrim(html).toLowerCase(), div = documentContext.createElement(\"div\"),\n            wrap = getWrap(tags),\n            depth = wrap[0];\n\n        // Go to html and back, then peel off extra wrappers\n        // Note that we always prefix with some dummy text, because otherwise, IE<9 will strip out leading comment nodes in descendants. Total madness.\n        var markup = \"ignored<div>\" + wrap[1] + html + wrap[2] + \"</div>\";\n        if (typeof windowContext['innerShiv'] == \"function\") {\n            // Note that innerShiv is deprecated in favour of html5shiv. We should consider adding\n            // support for html5shiv (except if no explicit support is needed, e.g., if html5shiv\n            // somehow shims the native APIs so it just works anyway)\n            div.appendChild(windowContext['innerShiv'](markup));\n        } else {\n            if (mayRequireCreateElementHack) {\n                // The document.createElement('my-element') trick to enable custom elements in IE6-8\n                // only works if we assign innerHTML on an element associated with that document.\n                documentContext.appendChild(div);\n            }\n\n            div.innerHTML = markup;\n\n            if (mayRequireCreateElementHack) {\n                div.parentNode.removeChild(div);\n            }\n        }\n\n        // Move to the right depth\n        while (depth--)\n            div = div.lastChild;\n\n        return ko.utils.makeArray(div.lastChild.childNodes);\n    }\n\n    function jQueryHtmlParse(html, documentContext) {\n        // jQuery's \"parseHTML\" function was introduced in jQuery 1.8.0 and is a documented public API.\n        if (jQueryInstance['parseHTML']) {\n            return jQueryInstance['parseHTML'](html, documentContext) || []; // Ensure we always return an array and never null\n        } else {\n            // For jQuery < 1.8.0, we fall back on the undocumented internal \"clean\" function.\n            var elems = jQueryInstance['clean']([html], documentContext);\n\n            // As of jQuery 1.7.1, jQuery parses the HTML by appending it to some dummy parent nodes held in an in-memory document fragment.\n            // Unfortunately, it never clears the dummy parent nodes from the document fragment, so it leaks memory over time.\n            // Fix this by finding the top-most dummy parent element, and detaching it from its owner fragment.\n            if (elems && elems[0]) {\n                // Find the top-most parent element that's a direct child of a document fragment\n                var elem = elems[0];\n                while (elem.parentNode && elem.parentNode.nodeType !== 11 /* i.e., DocumentFragment */)\n                    elem = elem.parentNode;\n                // ... then detach it\n                if (elem.parentNode)\n                    elem.parentNode.removeChild(elem);\n            }\n\n            return elems;\n        }\n    }\n\n    ko.utils.parseHtmlFragment = function(html, documentContext) {\n        return jQueryInstance ?\n            jQueryHtmlParse(html, documentContext) :   // As below, benefit from jQuery's optimisations where possible\n            simpleHtmlParse(html, documentContext);  // ... otherwise, this simple logic will do in most common cases.\n    };\n\n    ko.utils.setHtml = function(node, html) {\n        ko.utils.emptyDomNode(node);\n\n        // There's no legitimate reason to display a stringified observable without unwrapping it, so we'll unwrap it\n        html = ko.utils.unwrapObservable(html);\n\n        if ((html !== null) && (html !== undefined)) {\n            if (typeof html != 'string')\n                html = html.toString();\n\n            // jQuery contains a lot of sophisticated code to parse arbitrary HTML fragments,\n            // for example <tr> elements which are not normally allowed to exist on their own.\n            // If you've referenced jQuery we'll use that rather than duplicating its code.\n            if (jQueryInstance) {\n                jQueryInstance(node)['html'](html);\n            } else {\n                // ... otherwise, use KO's own parsing logic.\n                var parsedNodes = ko.utils.parseHtmlFragment(html, node.ownerDocument);\n                for (var i = 0; i < parsedNodes.length; i++)\n                    node.appendChild(parsedNodes[i]);\n            }\n        }\n    };\n})();\n\nko.exportSymbol('utils.parseHtmlFragment', ko.utils.parseHtmlFragment);\nko.exportSymbol('utils.setHtml', ko.utils.setHtml);\n\nko.memoization = (function () {\n    var memos = {};\n\n    function randomMax8HexChars() {\n        return (((1 + Math.random()) * 0x100000000) | 0).toString(16).substring(1);\n    }\n    function generateRandomId() {\n        return randomMax8HexChars() + randomMax8HexChars();\n    }\n    function findMemoNodes(rootNode, appendToArray) {\n        if (!rootNode)\n            return;\n        if (rootNode.nodeType == 8) {\n            var memoId = ko.memoization.parseMemoText(rootNode.nodeValue);\n            if (memoId != null)\n                appendToArray.push({ domNode: rootNode, memoId: memoId });\n        } else if (rootNode.nodeType == 1) {\n            for (var i = 0, childNodes = rootNode.childNodes, j = childNodes.length; i < j; i++)\n                findMemoNodes(childNodes[i], appendToArray);\n        }\n    }\n\n    return {\n        memoize: function (callback) {\n            if (typeof callback != \"function\")\n                throw new Error(\"You can only pass a function to ko.memoization.memoize()\");\n            var memoId = generateRandomId();\n            memos[memoId] = callback;\n            return \"<!--[ko_memo:\" + memoId + \"]-->\";\n        },\n\n        unmemoize: function (memoId, callbackParams) {\n            var callback = memos[memoId];\n            if (callback === undefined)\n                throw new Error(\"Couldn't find any memo with ID \" + memoId + \". Perhaps it's already been unmemoized.\");\n            try {\n                callback.apply(null, callbackParams || []);\n                return true;\n            }\n            finally { delete memos[memoId]; }\n        },\n\n        unmemoizeDomNodeAndDescendants: function (domNode, extraCallbackParamsArray) {\n            var memos = [];\n            findMemoNodes(domNode, memos);\n            for (var i = 0, j = memos.length; i < j; i++) {\n                var node = memos[i].domNode;\n                var combinedParams = [node];\n                if (extraCallbackParamsArray)\n                    ko.utils.arrayPushAll(combinedParams, extraCallbackParamsArray);\n                ko.memoization.unmemoize(memos[i].memoId, combinedParams);\n                node.nodeValue = \"\"; // Neuter this node so we don't try to unmemoize it again\n                if (node.parentNode)\n                    node.parentNode.removeChild(node); // If possible, erase it totally (not always possible - someone else might just hold a reference to it then call unmemoizeDomNodeAndDescendants again)\n            }\n        },\n\n        parseMemoText: function (memoText) {\n            var match = memoText.match(/^\\[ko_memo\\:(.*?)\\]$/);\n            return match ? match[1] : null;\n        }\n    };\n})();\n\nko.exportSymbol('memoization', ko.memoization);\nko.exportSymbol('memoization.memoize', ko.memoization.memoize);\nko.exportSymbol('memoization.unmemoize', ko.memoization.unmemoize);\nko.exportSymbol('memoization.parseMemoText', ko.memoization.parseMemoText);\nko.exportSymbol('memoization.unmemoizeDomNodeAndDescendants', ko.memoization.unmemoizeDomNodeAndDescendants);\nko.tasks = (function () {\n    var scheduler,\n        taskQueue = [],\n        taskQueueLength = 0,\n        nextHandle = 1,\n        nextIndexToProcess = 0;\n\n    if (window['MutationObserver']) {\n        // Chrome 27+, Firefox 14+, IE 11+, Opera 15+, Safari 6.1+\n        // From https://github.com/petkaantonov/bluebird * Copyright (c) 2014 Petka Antonov * License: MIT\n        scheduler = (function (callback) {\n            var div = document.createElement(\"div\");\n            new MutationObserver(callback).observe(div, {attributes: true});\n            return function () { div.classList.toggle(\"foo\"); };\n        })(scheduledProcess);\n    } else if (document && \"onreadystatechange\" in document.createElement(\"script\")) {\n        // IE 6-10\n        // From https://github.com/YuzuJS/setImmediate * Copyright (c) 2012 Barnesandnoble.com, llc, Donavon West, and Domenic Denicola * License: MIT\n        scheduler = function (callback) {\n            var script = document.createElement(\"script\");\n            script.onreadystatechange = function () {\n                script.onreadystatechange = null;\n                document.documentElement.removeChild(script);\n                script = null;\n                callback();\n            };\n            document.documentElement.appendChild(script);\n        };\n    } else {\n        scheduler = function (callback) {\n            setTimeout(callback, 0);\n        };\n    }\n\n    function processTasks() {\n        if (taskQueueLength) {\n            // Each mark represents the end of a logical group of tasks and the number of these groups is\n            // limited to prevent unchecked recursion.\n            var mark = taskQueueLength, countMarks = 0;\n\n            // nextIndexToProcess keeps track of where we are in the queue; processTasks can be called recursively without issue\n            for (var task; nextIndexToProcess < taskQueueLength; ) {\n                if (task = taskQueue[nextIndexToProcess++]) {\n                    if (nextIndexToProcess > mark) {\n                        if (++countMarks >= 5000) {\n                            nextIndexToProcess = taskQueueLength;   // skip all tasks remaining in the queue since any of them could be causing the recursion\n                            ko.utils.deferError(Error(\"'Too much recursion' after processing \" + countMarks + \" task groups.\"));\n                            break;\n                        }\n                        mark = taskQueueLength;\n                    }\n                    try {\n                        task();\n                    } catch (ex) {\n                        ko.utils.deferError(ex);\n                    }\n                }\n            }\n        }\n    }\n\n    function scheduledProcess() {\n        processTasks();\n\n        // Reset the queue\n        nextIndexToProcess = taskQueueLength = taskQueue.length = 0;\n    }\n\n    function scheduleTaskProcessing() {\n        ko.tasks['scheduler'](scheduledProcess);\n    }\n\n    var tasks = {\n        'scheduler': scheduler,     // Allow overriding the scheduler\n\n        schedule: function (func) {\n            if (!taskQueueLength) {\n                scheduleTaskProcessing();\n            }\n\n            taskQueue[taskQueueLength++] = func;\n            return nextHandle++;\n        },\n\n        cancel: function (handle) {\n            var index = handle - (nextHandle - taskQueueLength);\n            if (index >= nextIndexToProcess && index < taskQueueLength) {\n                taskQueue[index] = null;\n            }\n        },\n\n        // For testing only: reset the queue and return the previous queue length\n        'resetForTesting': function () {\n            var length = taskQueueLength - nextIndexToProcess;\n            nextIndexToProcess = taskQueueLength = taskQueue.length = 0;\n            return length;\n        },\n\n        runEarly: processTasks\n    };\n\n    return tasks;\n})();\n\nko.exportSymbol('tasks', ko.tasks);\nko.exportSymbol('tasks.schedule', ko.tasks.schedule);\n//ko.exportSymbol('tasks.cancel', ko.tasks.cancel);  \"cancel\" isn't minified\nko.exportSymbol('tasks.runEarly', ko.tasks.runEarly);\nko.extenders = {\n    'throttle': function(target, timeout) {\n        // Throttling means two things:\n\n        // (1) For dependent observables, we throttle *evaluations* so that, no matter how fast its dependencies\n        //     notify updates, the target doesn't re-evaluate (and hence doesn't notify) faster than a certain rate\n        target['throttleEvaluation'] = timeout;\n\n        // (2) For writable targets (observables, or writable dependent observables), we throttle *writes*\n        //     so the target cannot change value synchronously or faster than a certain rate\n        var writeTimeoutInstance = null;\n        return ko.dependentObservable({\n            'read': target,\n            'write': function(value) {\n                clearTimeout(writeTimeoutInstance);\n                writeTimeoutInstance = ko.utils.setTimeout(function() {\n                    target(value);\n                }, timeout);\n            }\n        });\n    },\n\n    'rateLimit': function(target, options) {\n        var timeout, method, limitFunction;\n\n        if (typeof options == 'number') {\n            timeout = options;\n        } else {\n            timeout = options['timeout'];\n            method = options['method'];\n        }\n\n        // rateLimit supersedes deferred updates\n        target._deferUpdates = false;\n\n        limitFunction = method == 'notifyWhenChangesStop' ?  debounce : throttle;\n        target.limit(function(callback) {\n            return limitFunction(callback, timeout);\n        });\n    },\n\n    'deferred': function(target, options) {\n        if (options !== true) {\n            throw new Error('The \\'deferred\\' extender only accepts the value \\'true\\', because it is not supported to turn deferral off once enabled.')\n        }\n\n        if (!target._deferUpdates) {\n            target._deferUpdates = true;\n            target.limit(function (callback) {\n                var handle,\n                    ignoreUpdates = false;\n                return function () {\n                    if (!ignoreUpdates) {\n                        ko.tasks.cancel(handle);\n                        handle = ko.tasks.schedule(callback);\n\n                        try {\n                            ignoreUpdates = true;\n                            target['notifySubscribers'](undefined, 'dirty');\n                        } finally {\n                            ignoreUpdates = false;\n                        }\n                    }\n                };\n            });\n        }\n    },\n\n    'notify': function(target, notifyWhen) {\n        target[\"equalityComparer\"] = notifyWhen == \"always\" ?\n            null :  // null equalityComparer means to always notify\n            valuesArePrimitiveAndEqual;\n    }\n};\n\nvar primitiveTypes = { 'undefined':1, 'boolean':1, 'number':1, 'string':1 };\nfunction valuesArePrimitiveAndEqual(a, b) {\n    var oldValueIsPrimitive = (a === null) || (typeof(a) in primitiveTypes);\n    return oldValueIsPrimitive ? (a === b) : false;\n}\n\nfunction throttle(callback, timeout) {\n    var timeoutInstance;\n    return function () {\n        if (!timeoutInstance) {\n            timeoutInstance = ko.utils.setTimeout(function () {\n                timeoutInstance = undefined;\n                callback();\n            }, timeout);\n        }\n    };\n}\n\nfunction debounce(callback, timeout) {\n    var timeoutInstance;\n    return function () {\n        clearTimeout(timeoutInstance);\n        timeoutInstance = ko.utils.setTimeout(callback, timeout);\n    };\n}\n\nfunction applyExtenders(requestedExtenders) {\n    var target = this;\n    if (requestedExtenders) {\n        ko.utils.objectForEach(requestedExtenders, function(key, value) {\n            var extenderHandler = ko.extenders[key];\n            if (typeof extenderHandler == 'function') {\n                target = extenderHandler(target, value) || target;\n            }\n        });\n    }\n    return target;\n}\n\nko.exportSymbol('extenders', ko.extenders);\n\nko.subscription = function (target, callback, disposeCallback) {\n    this._target = target;\n    this.callback = callback;\n    this.disposeCallback = disposeCallback;\n    this.isDisposed = false;\n    ko.exportProperty(this, 'dispose', this.dispose);\n};\nko.subscription.prototype.dispose = function () {\n    this.isDisposed = true;\n    this.disposeCallback();\n};\n\nko.subscribable = function () {\n    ko.utils.setPrototypeOfOrExtend(this, ko_subscribable_fn);\n    ko_subscribable_fn.init(this);\n}\n\nvar defaultEvent = \"change\";\n\n// Moved out of \"limit\" to avoid the extra closure\nfunction limitNotifySubscribers(value, event) {\n    if (!event || event === defaultEvent) {\n        this._limitChange(value);\n    } else if (event === 'beforeChange') {\n        this._limitBeforeChange(value);\n    } else {\n        this._origNotifySubscribers(value, event);\n    }\n}\n\nvar ko_subscribable_fn = {\n    init: function(instance) {\n        instance._subscriptions = { \"change\": [] };\n        instance._versionNumber = 1;\n    },\n\n    subscribe: function (callback, callbackTarget, event) {\n        var self = this;\n\n        event = event || defaultEvent;\n        var boundCallback = callbackTarget ? callback.bind(callbackTarget) : callback;\n\n        var subscription = new ko.subscription(self, boundCallback, function () {\n            ko.utils.arrayRemoveItem(self._subscriptions[event], subscription);\n            if (self.afterSubscriptionRemove)\n                self.afterSubscriptionRemove(event);\n        });\n\n        if (self.beforeSubscriptionAdd)\n            self.beforeSubscriptionAdd(event);\n\n        if (!self._subscriptions[event])\n            self._subscriptions[event] = [];\n        self._subscriptions[event].push(subscription);\n\n        return subscription;\n    },\n\n    \"notifySubscribers\": function (valueToNotify, event) {\n        event = event || defaultEvent;\n        if (event === defaultEvent) {\n            this.updateVersion();\n        }\n        if (this.hasSubscriptionsForEvent(event)) {\n            var subs = event === defaultEvent && this._changeSubscriptions || this._subscriptions[event].slice(0);\n            try {\n                ko.dependencyDetection.begin(); // Begin suppressing dependency detection (by setting the top frame to undefined)\n                for (var i = 0, subscription; subscription = subs[i]; ++i) {\n                    // In case a subscription was disposed during the arrayForEach cycle, check\n                    // for isDisposed on each subscription before invoking its callback\n                    if (!subscription.isDisposed)\n                        subscription.callback(valueToNotify);\n                }\n            } finally {\n                ko.dependencyDetection.end(); // End suppressing dependency detection\n            }\n        }\n    },\n\n    getVersion: function () {\n        return this._versionNumber;\n    },\n\n    hasChanged: function (versionToCheck) {\n        return this.getVersion() !== versionToCheck;\n    },\n\n    updateVersion: function () {\n        ++this._versionNumber;\n    },\n\n    limit: function(limitFunction) {\n        var self = this, selfIsObservable = ko.isObservable(self),\n            ignoreBeforeChange, notifyNextChange, previousValue, pendingValue, beforeChange = 'beforeChange';\n\n        if (!self._origNotifySubscribers) {\n            self._origNotifySubscribers = self[\"notifySubscribers\"];\n            self[\"notifySubscribers\"] = limitNotifySubscribers;\n        }\n\n        var finish = limitFunction(function() {\n            self._notificationIsPending = false;\n\n            // If an observable provided a reference to itself, access it to get the latest value.\n            // This allows computed observables to delay calculating their value until needed.\n            if (selfIsObservable && pendingValue === self) {\n                pendingValue = self._evalIfChanged ? self._evalIfChanged() : self();\n            }\n            var shouldNotify = notifyNextChange || self.isDifferent(previousValue, pendingValue);\n\n            notifyNextChange = ignoreBeforeChange = false;\n\n            if (shouldNotify) {\n                self._origNotifySubscribers(previousValue = pendingValue);\n            }\n        });\n\n        self._limitChange = function(value) {\n            self._changeSubscriptions = self._subscriptions[defaultEvent].slice(0);\n            self._notificationIsPending = ignoreBeforeChange = true;\n            pendingValue = value;\n            finish();\n        };\n        self._limitBeforeChange = function(value) {\n            if (!ignoreBeforeChange) {\n                previousValue = value;\n                self._origNotifySubscribers(value, beforeChange);\n            }\n        };\n        self._notifyNextChangeIfValueIsDifferent = function() {\n            if (self.isDifferent(previousValue, self.peek(true /*evaluate*/))) {\n                notifyNextChange = true;\n            }\n        };\n    },\n\n    hasSubscriptionsForEvent: function(event) {\n        return this._subscriptions[event] && this._subscriptions[event].length;\n    },\n\n    getSubscriptionsCount: function (event) {\n        if (event) {\n            return this._subscriptions[event] && this._subscriptions[event].length || 0;\n        } else {\n            var total = 0;\n            ko.utils.objectForEach(this._subscriptions, function(eventName, subscriptions) {\n                if (eventName !== 'dirty')\n                    total += subscriptions.length;\n            });\n            return total;\n        }\n    },\n\n    isDifferent: function(oldValue, newValue) {\n        return !this['equalityComparer'] || !this['equalityComparer'](oldValue, newValue);\n    },\n\n    extend: applyExtenders\n};\n\nko.exportProperty(ko_subscribable_fn, 'subscribe', ko_subscribable_fn.subscribe);\nko.exportProperty(ko_subscribable_fn, 'extend', ko_subscribable_fn.extend);\nko.exportProperty(ko_subscribable_fn, 'getSubscriptionsCount', ko_subscribable_fn.getSubscriptionsCount);\n\n// For browsers that support proto assignment, we overwrite the prototype of each\n// observable instance. Since observables are functions, we need Function.prototype\n// to still be in the prototype chain.\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(ko_subscribable_fn, Function.prototype);\n}\n\nko.subscribable['fn'] = ko_subscribable_fn;\n\n\nko.isSubscribable = function (instance) {\n    return instance != null && typeof instance.subscribe == \"function\" && typeof instance[\"notifySubscribers\"] == \"function\";\n};\n\nko.exportSymbol('subscribable', ko.subscribable);\nko.exportSymbol('isSubscribable', ko.isSubscribable);\n\nko.computedContext = ko.dependencyDetection = (function () {\n    var outerFrames = [],\n        currentFrame,\n        lastId = 0;\n\n    // Return a unique ID that can be assigned to an observable for dependency tracking.\n    // Theoretically, you could eventually overflow the number storage size, resulting\n    // in duplicate IDs. But in JavaScript, the largest exact integral value is 2^53\n    // or 9,007,199,254,740,992. If you created 1,000,000 IDs per second, it would\n    // take over 285 years to reach that number.\n    // Reference http://blog.vjeux.com/2010/javascript/javascript-max_int-number-limits.html\n    function getId() {\n        return ++lastId;\n    }\n\n    function begin(options) {\n        outerFrames.push(currentFrame);\n        currentFrame = options;\n    }\n\n    function end() {\n        currentFrame = outerFrames.pop();\n    }\n\n    return {\n        begin: begin,\n\n        end: end,\n\n        registerDependency: function (subscribable) {\n            if (currentFrame) {\n                if (!ko.isSubscribable(subscribable))\n                    throw new Error(\"Only subscribable things can act as dependencies\");\n                currentFrame.callback.call(currentFrame.callbackTarget, subscribable, subscribable._id || (subscribable._id = getId()));\n            }\n        },\n\n        ignore: function (callback, callbackTarget, callbackArgs) {\n            try {\n                begin();\n                return callback.apply(callbackTarget, callbackArgs || []);\n            } finally {\n                end();\n            }\n        },\n\n        getDependenciesCount: function () {\n            if (currentFrame)\n                return currentFrame.computed.getDependenciesCount();\n        },\n\n        isInitial: function() {\n            if (currentFrame)\n                return currentFrame.isInitial;\n        }\n    };\n})();\n\nko.exportSymbol('computedContext', ko.computedContext);\nko.exportSymbol('computedContext.getDependenciesCount', ko.computedContext.getDependenciesCount);\nko.exportSymbol('computedContext.isInitial', ko.computedContext.isInitial);\n\nko.exportSymbol('ignoreDependencies', ko.ignoreDependencies = ko.dependencyDetection.ignore);\nvar observableLatestValue = ko.utils.createSymbolOrString('_latestValue');\n\nko.observable = function (initialValue) {\n    function observable() {\n        if (arguments.length > 0) {\n            // Write\n\n            // Ignore writes if the value hasn't changed\n            if (observable.isDifferent(observable[observableLatestValue], arguments[0])) {\n                observable.valueWillMutate();\n                observable[observableLatestValue] = arguments[0];\n                observable.valueHasMutated();\n            }\n            return this; // Permits chained assignments\n        }\n        else {\n            // Read\n            ko.dependencyDetection.registerDependency(observable); // The caller only needs to be notified of changes if they did a \"read\" operation\n            return observable[observableLatestValue];\n        }\n    }\n\n    observable[observableLatestValue] = initialValue;\n\n    // Inherit from 'subscribable'\n    if (!ko.utils.canSetPrototype) {\n        // 'subscribable' won't be on the prototype chain unless we put it there directly\n        ko.utils.extend(observable, ko.subscribable['fn']);\n    }\n    ko.subscribable['fn'].init(observable);\n\n    // Inherit from 'observable'\n    ko.utils.setPrototypeOfOrExtend(observable, observableFn);\n\n    if (ko.options['deferUpdates']) {\n        ko.extenders['deferred'](observable, true);\n    }\n\n    return observable;\n}\n\n// Define prototype for observables\nvar observableFn = {\n    'equalityComparer': valuesArePrimitiveAndEqual,\n    peek: function() { return this[observableLatestValue]; },\n    valueHasMutated: function () { this['notifySubscribers'](this[observableLatestValue]); },\n    valueWillMutate: function () { this['notifySubscribers'](this[observableLatestValue], 'beforeChange'); }\n};\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.observable constructor\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(observableFn, ko.subscribable['fn']);\n}\n\nvar protoProperty = ko.observable.protoProperty = '__ko_proto__';\nobservableFn[protoProperty] = ko.observable;\n\nko.hasPrototype = function(instance, prototype) {\n    if ((instance === null) || (instance === undefined) || (instance[protoProperty] === undefined)) return false;\n    if (instance[protoProperty] === prototype) return true;\n    return ko.hasPrototype(instance[protoProperty], prototype); // Walk the prototype chain\n};\n\nko.isObservable = function (instance) {\n    return ko.hasPrototype(instance, ko.observable);\n}\nko.isWriteableObservable = function (instance) {\n    // Observable\n    if ((typeof instance == 'function') && instance[protoProperty] === ko.observable)\n        return true;\n    // Writeable dependent observable\n    if ((typeof instance == 'function') && (instance[protoProperty] === ko.dependentObservable) && (instance.hasWriteFunction))\n        return true;\n    // Anything else\n    return false;\n}\n\nko.exportSymbol('observable', ko.observable);\nko.exportSymbol('isObservable', ko.isObservable);\nko.exportSymbol('isWriteableObservable', ko.isWriteableObservable);\nko.exportSymbol('isWritableObservable', ko.isWriteableObservable);\nko.exportSymbol('observable.fn', observableFn);\nko.exportProperty(observableFn, 'peek', observableFn.peek);\nko.exportProperty(observableFn, 'valueHasMutated', observableFn.valueHasMutated);\nko.exportProperty(observableFn, 'valueWillMutate', observableFn.valueWillMutate);\nko.observableArray = function (initialValues) {\n    initialValues = initialValues || [];\n\n    if (typeof initialValues != 'object' || !('length' in initialValues))\n        throw new Error(\"The argument passed when initializing an observable array must be an array, or null, or undefined.\");\n\n    var result = ko.observable(initialValues);\n    ko.utils.setPrototypeOfOrExtend(result, ko.observableArray['fn']);\n    return result.extend({'trackArrayChanges':true});\n};\n\nko.observableArray['fn'] = {\n    'remove': function (valueOrPredicate) {\n        var underlyingArray = this.peek();\n        var removedValues = [];\n        var predicate = typeof valueOrPredicate == \"function\" && !ko.isObservable(valueOrPredicate) ? valueOrPredicate : function (value) { return value === valueOrPredicate; };\n        for (var i = 0; i < underlyingArray.length; i++) {\n            var value = underlyingArray[i];\n            if (predicate(value)) {\n                if (removedValues.length === 0) {\n                    this.valueWillMutate();\n                }\n                removedValues.push(value);\n                underlyingArray.splice(i, 1);\n                i--;\n            }\n        }\n        if (removedValues.length) {\n            this.valueHasMutated();\n        }\n        return removedValues;\n    },\n\n    'removeAll': function (arrayOfValues) {\n        // If you passed zero args, we remove everything\n        if (arrayOfValues === undefined) {\n            var underlyingArray = this.peek();\n            var allValues = underlyingArray.slice(0);\n            this.valueWillMutate();\n            underlyingArray.splice(0, underlyingArray.length);\n            this.valueHasMutated();\n            return allValues;\n        }\n        // If you passed an arg, we interpret it as an array of entries to remove\n        if (!arrayOfValues)\n            return [];\n        return this['remove'](function (value) {\n            return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;\n        });\n    },\n\n    'destroy': function (valueOrPredicate) {\n        var underlyingArray = this.peek();\n        var predicate = typeof valueOrPredicate == \"function\" && !ko.isObservable(valueOrPredicate) ? valueOrPredicate : function (value) { return value === valueOrPredicate; };\n        this.valueWillMutate();\n        for (var i = underlyingArray.length - 1; i >= 0; i--) {\n            var value = underlyingArray[i];\n            if (predicate(value))\n                underlyingArray[i][\"_destroy\"] = true;\n        }\n        this.valueHasMutated();\n    },\n\n    'destroyAll': function (arrayOfValues) {\n        // If you passed zero args, we destroy everything\n        if (arrayOfValues === undefined)\n            return this['destroy'](function() { return true });\n\n        // If you passed an arg, we interpret it as an array of entries to destroy\n        if (!arrayOfValues)\n            return [];\n        return this['destroy'](function (value) {\n            return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;\n        });\n    },\n\n    'indexOf': function (item) {\n        var underlyingArray = this();\n        return ko.utils.arrayIndexOf(underlyingArray, item);\n    },\n\n    'replace': function(oldItem, newItem) {\n        var index = this['indexOf'](oldItem);\n        if (index >= 0) {\n            this.valueWillMutate();\n            this.peek()[index] = newItem;\n            this.valueHasMutated();\n        }\n    }\n};\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.observableArray constructor\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(ko.observableArray['fn'], ko.observable['fn']);\n}\n\n// Populate ko.observableArray.fn with read/write functions from native arrays\n// Important: Do not add any additional functions here that may reasonably be used to *read* data from the array\n// because we'll eval them without causing subscriptions, so ko.computed output could end up getting stale\nko.utils.arrayForEach([\"pop\", \"push\", \"reverse\", \"shift\", \"sort\", \"splice\", \"unshift\"], function (methodName) {\n    ko.observableArray['fn'][methodName] = function () {\n        // Use \"peek\" to avoid creating a subscription in any computed that we're executing in the context of\n        // (for consistency with mutating regular observables)\n        var underlyingArray = this.peek();\n        this.valueWillMutate();\n        this.cacheDiffForKnownOperation(underlyingArray, methodName, arguments);\n        var methodCallResult = underlyingArray[methodName].apply(underlyingArray, arguments);\n        this.valueHasMutated();\n        // The native sort and reverse methods return a reference to the array, but it makes more sense to return the observable array instead.\n        return methodCallResult === underlyingArray ? this : methodCallResult;\n    };\n});\n\n// Populate ko.observableArray.fn with read-only functions from native arrays\nko.utils.arrayForEach([\"slice\"], function (methodName) {\n    ko.observableArray['fn'][methodName] = function () {\n        var underlyingArray = this();\n        return underlyingArray[methodName].apply(underlyingArray, arguments);\n    };\n});\n\nko.exportSymbol('observableArray', ko.observableArray);\nvar arrayChangeEventName = 'arrayChange';\nko.extenders['trackArrayChanges'] = function(target, options) {\n    // Use the provided options--each call to trackArrayChanges overwrites the previously set options\n    target.compareArrayOptions = {};\n    if (options && typeof options == \"object\") {\n        ko.utils.extend(target.compareArrayOptions, options);\n    }\n    target.compareArrayOptions['sparse'] = true;\n\n    // Only modify the target observable once\n    if (target.cacheDiffForKnownOperation) {\n        return;\n    }\n    var trackingChanges = false,\n        cachedDiff = null,\n        arrayChangeSubscription,\n        pendingNotifications = 0,\n        underlyingNotifySubscribersFunction,\n        underlyingBeforeSubscriptionAddFunction = target.beforeSubscriptionAdd,\n        underlyingAfterSubscriptionRemoveFunction = target.afterSubscriptionRemove;\n\n    // Watch \"subscribe\" calls, and for array change events, ensure change tracking is enabled\n    target.beforeSubscriptionAdd = function (event) {\n        if (underlyingBeforeSubscriptionAddFunction)\n            underlyingBeforeSubscriptionAddFunction.call(target, event);\n        if (event === arrayChangeEventName) {\n            trackChanges();\n        }\n    };\n    // Watch \"dispose\" calls, and for array change events, ensure change tracking is disabled when all are disposed\n    target.afterSubscriptionRemove = function (event) {\n        if (underlyingAfterSubscriptionRemoveFunction)\n            underlyingAfterSubscriptionRemoveFunction.call(target, event);\n        if (event === arrayChangeEventName && !target.hasSubscriptionsForEvent(arrayChangeEventName)) {\n            if (underlyingNotifySubscribersFunction) {\n                target['notifySubscribers'] = underlyingNotifySubscribersFunction;\n                underlyingNotifySubscribersFunction = undefined;\n            }\n            arrayChangeSubscription.dispose();\n            trackingChanges = false;\n        }\n    };\n\n    function trackChanges() {\n        // Calling 'trackChanges' multiple times is the same as calling it once\n        if (trackingChanges) {\n            return;\n        }\n\n        trackingChanges = true;\n\n        // Intercept \"notifySubscribers\" to track how many times it was called.\n        underlyingNotifySubscribersFunction = target['notifySubscribers'];\n        target['notifySubscribers'] = function(valueToNotify, event) {\n            if (!event || event === defaultEvent) {\n                ++pendingNotifications;\n            }\n            return underlyingNotifySubscribersFunction.apply(this, arguments);\n        };\n\n        // Each time the array changes value, capture a clone so that on the next\n        // change it's possible to produce a diff\n        var previousContents = [].concat(target.peek() || []);\n        cachedDiff = null;\n        arrayChangeSubscription = target.subscribe(function(currentContents) {\n            // Make a copy of the current contents and ensure it's an array\n            currentContents = [].concat(currentContents || []);\n\n            // Compute the diff and issue notifications, but only if someone is listening\n            if (target.hasSubscriptionsForEvent(arrayChangeEventName)) {\n                var changes = getChanges(previousContents, currentContents);\n            }\n\n            // Eliminate references to the old, removed items, so they can be GCed\n            previousContents = currentContents;\n            cachedDiff = null;\n            pendingNotifications = 0;\n\n            if (changes && changes.length) {\n                target['notifySubscribers'](changes, arrayChangeEventName);\n            }\n        });\n    }\n\n    function getChanges(previousContents, currentContents) {\n        // We try to re-use cached diffs.\n        // The scenarios where pendingNotifications > 1 are when using rate-limiting or the Deferred Updates\n        // plugin, which without this check would not be compatible with arrayChange notifications. Normally,\n        // notifications are issued immediately so we wouldn't be queueing up more than one.\n        if (!cachedDiff || pendingNotifications > 1) {\n            cachedDiff = ko.utils.compareArrays(previousContents, currentContents, target.compareArrayOptions);\n        }\n\n        return cachedDiff;\n    }\n\n    target.cacheDiffForKnownOperation = function(rawArray, operationName, args) {\n        // Only run if we're currently tracking changes for this observable array\n        // and there aren't any pending deferred notifications.\n        if (!trackingChanges || pendingNotifications) {\n            return;\n        }\n        var diff = [],\n            arrayLength = rawArray.length,\n            argsLength = args.length,\n            offset = 0;\n\n        function pushDiff(status, value, index) {\n            return diff[diff.length] = { 'status': status, 'value': value, 'index': index };\n        }\n        switch (operationName) {\n            case 'push':\n                offset = arrayLength;\n            case 'unshift':\n                for (var index = 0; index < argsLength; index++) {\n                    pushDiff('added', args[index], offset + index);\n                }\n                break;\n\n            case 'pop':\n                offset = arrayLength - 1;\n            case 'shift':\n                if (arrayLength) {\n                    pushDiff('deleted', rawArray[offset], offset);\n                }\n                break;\n\n            case 'splice':\n                // Negative start index means 'from end of array'. After that we clamp to [0...arrayLength].\n                // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\n                var startIndex = Math.min(Math.max(0, args[0] < 0 ? arrayLength + args[0] : args[0]), arrayLength),\n                    endDeleteIndex = argsLength === 1 ? arrayLength : Math.min(startIndex + (args[1] || 0), arrayLength),\n                    endAddIndex = startIndex + argsLength - 2,\n                    endIndex = Math.max(endDeleteIndex, endAddIndex),\n                    additions = [], deletions = [];\n                for (var index = startIndex, argsIndex = 2; index < endIndex; ++index, ++argsIndex) {\n                    if (index < endDeleteIndex)\n                        deletions.push(pushDiff('deleted', rawArray[index], index));\n                    if (index < endAddIndex)\n                        additions.push(pushDiff('added', args[argsIndex], index));\n                }\n                ko.utils.findMovesInArrayComparison(deletions, additions);\n                break;\n\n            default:\n                return;\n        }\n        cachedDiff = diff;\n    };\n};\nvar computedState = ko.utils.createSymbolOrString('_state');\n\nko.computed = ko.dependentObservable = function (evaluatorFunctionOrOptions, evaluatorFunctionTarget, options) {\n    if (typeof evaluatorFunctionOrOptions === \"object\") {\n        // Single-parameter syntax - everything is on this \"options\" param\n        options = evaluatorFunctionOrOptions;\n    } else {\n        // Multi-parameter syntax - construct the options according to the params passed\n        options = options || {};\n        if (evaluatorFunctionOrOptions) {\n            options[\"read\"] = evaluatorFunctionOrOptions;\n        }\n    }\n    if (typeof options[\"read\"] != \"function\")\n        throw Error(\"Pass a function that returns the value of the ko.computed\");\n\n    var writeFunction = options[\"write\"];\n    var state = {\n        latestValue: undefined,\n        isStale: true,\n        isDirty: true,\n        isBeingEvaluated: false,\n        suppressDisposalUntilDisposeWhenReturnsFalse: false,\n        isDisposed: false,\n        pure: false,\n        isSleeping: false,\n        readFunction: options[\"read\"],\n        evaluatorFunctionTarget: evaluatorFunctionTarget || options[\"owner\"],\n        disposeWhenNodeIsRemoved: options[\"disposeWhenNodeIsRemoved\"] || options.disposeWhenNodeIsRemoved || null,\n        disposeWhen: options[\"disposeWhen\"] || options.disposeWhen,\n        domNodeDisposalCallback: null,\n        dependencyTracking: {},\n        dependenciesCount: 0,\n        evaluationTimeoutInstance: null\n    };\n\n    function computedObservable() {\n        if (arguments.length > 0) {\n            if (typeof writeFunction === \"function\") {\n                // Writing a value\n                writeFunction.apply(state.evaluatorFunctionTarget, arguments);\n            } else {\n                throw new Error(\"Cannot write a value to a ko.computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters.\");\n            }\n            return this; // Permits chained assignments\n        } else {\n            // Reading the value\n            ko.dependencyDetection.registerDependency(computedObservable);\n            if (state.isDirty || (state.isSleeping && computedObservable.haveDependenciesChanged())) {\n                computedObservable.evaluateImmediate();\n            }\n            return state.latestValue;\n        }\n    }\n\n    computedObservable[computedState] = state;\n    computedObservable.hasWriteFunction = typeof writeFunction === \"function\";\n\n    // Inherit from 'subscribable'\n    if (!ko.utils.canSetPrototype) {\n        // 'subscribable' won't be on the prototype chain unless we put it there directly\n        ko.utils.extend(computedObservable, ko.subscribable['fn']);\n    }\n    ko.subscribable['fn'].init(computedObservable);\n\n    // Inherit from 'computed'\n    ko.utils.setPrototypeOfOrExtend(computedObservable, computedFn);\n\n    if (options['pure']) {\n        state.pure = true;\n        state.isSleeping = true;     // Starts off sleeping; will awake on the first subscription\n        ko.utils.extend(computedObservable, pureComputedOverrides);\n    } else if (options['deferEvaluation']) {\n        ko.utils.extend(computedObservable, deferEvaluationOverrides);\n    }\n\n    if (ko.options['deferUpdates']) {\n        ko.extenders['deferred'](computedObservable, true);\n    }\n\n    if (DEBUG) {\n        // #1731 - Aid debugging by exposing the computed's options\n        computedObservable[\"_options\"] = options;\n    }\n\n    if (state.disposeWhenNodeIsRemoved) {\n        // Since this computed is associated with a DOM node, and we don't want to dispose the computed\n        // until the DOM node is *removed* from the document (as opposed to never having been in the document),\n        // we'll prevent disposal until \"disposeWhen\" first returns false.\n        state.suppressDisposalUntilDisposeWhenReturnsFalse = true;\n\n        // disposeWhenNodeIsRemoved: true can be used to opt into the \"only dispose after first false result\"\n        // behaviour even if there's no specific node to watch. In that case, clear the option so we don't try\n        // to watch for a non-node's disposal. This technique is intended for KO's internal use only and shouldn't\n        // be documented or used by application code, as it's likely to change in a future version of KO.\n        if (!state.disposeWhenNodeIsRemoved.nodeType) {\n            state.disposeWhenNodeIsRemoved = null;\n        }\n    }\n\n    // Evaluate, unless sleeping or deferEvaluation is true\n    if (!state.isSleeping && !options['deferEvaluation']) {\n        computedObservable.evaluateImmediate();\n    }\n\n    // Attach a DOM node disposal callback so that the computed will be proactively disposed as soon as the node is\n    // removed using ko.removeNode. But skip if isActive is false (there will never be any dependencies to dispose).\n    if (state.disposeWhenNodeIsRemoved && computedObservable.isActive()) {\n        ko.utils.domNodeDisposal.addDisposeCallback(state.disposeWhenNodeIsRemoved, state.domNodeDisposalCallback = function () {\n            computedObservable.dispose();\n        });\n    }\n\n    return computedObservable;\n};\n\n// Utility function that disposes a given dependencyTracking entry\nfunction computedDisposeDependencyCallback(id, entryToDispose) {\n    if (entryToDispose !== null && entryToDispose.dispose) {\n        entryToDispose.dispose();\n    }\n}\n\n// This function gets called each time a dependency is detected while evaluating a computed.\n// It's factored out as a shared function to avoid creating unnecessary function instances during evaluation.\nfunction computedBeginDependencyDetectionCallback(subscribable, id) {\n    var computedObservable = this.computedObservable,\n        state = computedObservable[computedState];\n    if (!state.isDisposed) {\n        if (this.disposalCount && this.disposalCandidates[id]) {\n            // Don't want to dispose this subscription, as it's still being used\n            computedObservable.addDependencyTracking(id, subscribable, this.disposalCandidates[id]);\n            this.disposalCandidates[id] = null; // No need to actually delete the property - disposalCandidates is a transient object anyway\n            --this.disposalCount;\n        } else if (!state.dependencyTracking[id]) {\n            // Brand new subscription - add it\n            computedObservable.addDependencyTracking(id, subscribable, state.isSleeping ? { _target: subscribable } : computedObservable.subscribeToDependency(subscribable));\n        }\n        // If the observable we've accessed has a pending notification, ensure we get notified of the actual final value (bypass equality checks)\n        if (subscribable._notificationIsPending) {\n            subscribable._notifyNextChangeIfValueIsDifferent();\n        }\n    }\n}\n\nvar computedFn = {\n    \"equalityComparer\": valuesArePrimitiveAndEqual,\n    getDependenciesCount: function () {\n        return this[computedState].dependenciesCount;\n    },\n    addDependencyTracking: function (id, target, trackingObj) {\n        if (this[computedState].pure && target === this) {\n            throw Error(\"A 'pure' computed must not be called recursively\");\n        }\n\n        this[computedState].dependencyTracking[id] = trackingObj;\n        trackingObj._order = this[computedState].dependenciesCount++;\n        trackingObj._version = target.getVersion();\n    },\n    haveDependenciesChanged: function () {\n        var id, dependency, dependencyTracking = this[computedState].dependencyTracking;\n        for (id in dependencyTracking) {\n            if (dependencyTracking.hasOwnProperty(id)) {\n                dependency = dependencyTracking[id];\n                if ((this._evalDelayed && dependency._target._notificationIsPending) || dependency._target.hasChanged(dependency._version)) {\n                    return true;\n                }\n            }\n        }\n    },\n    markDirty: function () {\n        // Process \"dirty\" events if we can handle delayed notifications\n        if (this._evalDelayed && !this[computedState].isBeingEvaluated) {\n            this._evalDelayed(false /*isChange*/);\n        }\n    },\n    isActive: function () {\n        var state = this[computedState];\n        return state.isDirty || state.dependenciesCount > 0;\n    },\n    respondToChange: function () {\n        // Ignore \"change\" events if we've already scheduled a delayed notification\n        if (!this._notificationIsPending) {\n            this.evaluatePossiblyAsync();\n        } else if (this[computedState].isDirty) {\n            this[computedState].isStale = true;\n        }\n    },\n    subscribeToDependency: function (target) {\n        if (target._deferUpdates && !this[computedState].disposeWhenNodeIsRemoved) {\n            var dirtySub = target.subscribe(this.markDirty, this, 'dirty'),\n                changeSub = target.subscribe(this.respondToChange, this);\n            return {\n                _target: target,\n                dispose: function () {\n                    dirtySub.dispose();\n                    changeSub.dispose();\n                }\n            };\n        } else {\n            return target.subscribe(this.evaluatePossiblyAsync, this);\n        }\n    },\n    evaluatePossiblyAsync: function () {\n        var computedObservable = this,\n            throttleEvaluationTimeout = computedObservable['throttleEvaluation'];\n        if (throttleEvaluationTimeout && throttleEvaluationTimeout >= 0) {\n            clearTimeout(this[computedState].evaluationTimeoutInstance);\n            this[computedState].evaluationTimeoutInstance = ko.utils.setTimeout(function () {\n                computedObservable.evaluateImmediate(true /*notifyChange*/);\n            }, throttleEvaluationTimeout);\n        } else if (computedObservable._evalDelayed) {\n            computedObservable._evalDelayed(true /*isChange*/);\n        } else {\n            computedObservable.evaluateImmediate(true /*notifyChange*/);\n        }\n    },\n    evaluateImmediate: function (notifyChange) {\n        var computedObservable = this,\n            state = computedObservable[computedState],\n            disposeWhen = state.disposeWhen,\n            changed = false;\n\n        if (state.isBeingEvaluated) {\n            // If the evaluation of a ko.computed causes side effects, it's possible that it will trigger its own re-evaluation.\n            // This is not desirable (it's hard for a developer to realise a chain of dependencies might cause this, and they almost\n            // certainly didn't intend infinite re-evaluations). So, for predictability, we simply prevent ko.computeds from causing\n            // their own re-evaluation. Further discussion at https://github.com/SteveSanderson/knockout/pull/387\n            return;\n        }\n\n        // Do not evaluate (and possibly capture new dependencies) if disposed\n        if (state.isDisposed) {\n            return;\n        }\n\n        if (state.disposeWhenNodeIsRemoved && !ko.utils.domNodeIsAttachedToDocument(state.disposeWhenNodeIsRemoved) || disposeWhen && disposeWhen()) {\n            // See comment above about suppressDisposalUntilDisposeWhenReturnsFalse\n            if (!state.suppressDisposalUntilDisposeWhenReturnsFalse) {\n                computedObservable.dispose();\n                return;\n            }\n        } else {\n            // It just did return false, so we can stop suppressing now\n            state.suppressDisposalUntilDisposeWhenReturnsFalse = false;\n        }\n\n        state.isBeingEvaluated = true;\n        try {\n            changed = this.evaluateImmediate_CallReadWithDependencyDetection(notifyChange);\n        } finally {\n            state.isBeingEvaluated = false;\n        }\n\n        if (!state.dependenciesCount) {\n            computedObservable.dispose();\n        }\n\n        return changed;\n    },\n    evaluateImmediate_CallReadWithDependencyDetection: function (notifyChange) {\n        // This function is really just part of the evaluateImmediate logic. You would never call it from anywhere else.\n        // Factoring it out into a separate function means it can be independent of the try/catch block in evaluateImmediate,\n        // which contributes to saving about 40% off the CPU overhead of computed evaluation (on V8 at least).\n\n        var computedObservable = this,\n            state = computedObservable[computedState],\n            changed = false;\n\n        // Initially, we assume that none of the subscriptions are still being used (i.e., all are candidates for disposal).\n        // Then, during evaluation, we cross off any that are in fact still being used.\n        var isInitial = state.pure ? undefined : !state.dependenciesCount,   // If we're evaluating when there are no previous dependencies, it must be the first time\n            dependencyDetectionContext = {\n                computedObservable: computedObservable,\n                disposalCandidates: state.dependencyTracking,\n                disposalCount: state.dependenciesCount\n            };\n\n        ko.dependencyDetection.begin({\n            callbackTarget: dependencyDetectionContext,\n            callback: computedBeginDependencyDetectionCallback,\n            computed: computedObservable,\n            isInitial: isInitial\n        });\n\n        state.dependencyTracking = {};\n        state.dependenciesCount = 0;\n\n        var newValue = this.evaluateImmediate_CallReadThenEndDependencyDetection(state, dependencyDetectionContext);\n\n        if (computedObservable.isDifferent(state.latestValue, newValue)) {\n            if (!state.isSleeping) {\n                computedObservable[\"notifySubscribers\"](state.latestValue, \"beforeChange\");\n            }\n\n            state.latestValue = newValue;\n            if (DEBUG) computedObservable._latestValue = newValue;\n\n            if (state.isSleeping) {\n                computedObservable.updateVersion();\n            } else if (notifyChange) {\n                computedObservable[\"notifySubscribers\"](state.latestValue);\n            }\n\n            changed = true;\n        }\n\n        if (isInitial) {\n            computedObservable[\"notifySubscribers\"](state.latestValue, \"awake\");\n        }\n\n        return changed;\n    },\n    evaluateImmediate_CallReadThenEndDependencyDetection: function (state, dependencyDetectionContext) {\n        // This function is really part of the evaluateImmediate_CallReadWithDependencyDetection logic.\n        // You'd never call it from anywhere else. Factoring it out means that evaluateImmediate_CallReadWithDependencyDetection\n        // can be independent of try/finally blocks, which contributes to saving about 40% off the CPU\n        // overhead of computed evaluation (on V8 at least).\n\n        try {\n            var readFunction = state.readFunction;\n            return state.evaluatorFunctionTarget ? readFunction.call(state.evaluatorFunctionTarget) : readFunction();\n        } finally {\n            ko.dependencyDetection.end();\n\n            // For each subscription no longer being used, remove it from the active subscriptions list and dispose it\n            if (dependencyDetectionContext.disposalCount && !state.isSleeping) {\n                ko.utils.objectForEach(dependencyDetectionContext.disposalCandidates, computedDisposeDependencyCallback);\n            }\n\n            state.isStale = state.isDirty = false;\n        }\n    },\n    peek: function (evaluate) {\n        // By default, peek won't re-evaluate, except while the computed is sleeping or to get the initial value when \"deferEvaluation\" is set.\n        // Pass in true to evaluate if needed.\n        var state = this[computedState];\n        if ((state.isDirty && (evaluate || !state.dependenciesCount)) || (state.isSleeping && this.haveDependenciesChanged())) {\n            this.evaluateImmediate();\n        }\n        return state.latestValue;\n    },\n    limit: function (limitFunction) {\n        // Override the limit function with one that delays evaluation as well\n        ko.subscribable['fn'].limit.call(this, limitFunction);\n        this._evalIfChanged = function () {\n            if (this[computedState].isStale) {\n                this.evaluateImmediate();\n            } else {\n                this[computedState].isDirty = false;\n            }\n            return this[computedState].latestValue;\n        };\n        this._evalDelayed = function (isChange) {\n            this._limitBeforeChange(this[computedState].latestValue);\n\n            // Mark as dirty\n            this[computedState].isDirty = true;\n            if (isChange) {\n                this[computedState].isStale = true;\n            }\n\n            // Pass the observable to the \"limit\" code, which will evaluate it when\n            // it's time to do the notification.\n            this._limitChange(this);\n        };\n    },\n    dispose: function () {\n        var state = this[computedState];\n        if (!state.isSleeping && state.dependencyTracking) {\n            ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\n                if (dependency.dispose)\n                    dependency.dispose();\n            });\n        }\n        if (state.disposeWhenNodeIsRemoved && state.domNodeDisposalCallback) {\n            ko.utils.domNodeDisposal.removeDisposeCallback(state.disposeWhenNodeIsRemoved, state.domNodeDisposalCallback);\n        }\n        state.dependencyTracking = null;\n        state.dependenciesCount = 0;\n        state.isDisposed = true;\n        state.isStale = false;\n        state.isDirty = false;\n        state.isSleeping = false;\n        state.disposeWhenNodeIsRemoved = null;\n    }\n};\n\nvar pureComputedOverrides = {\n    beforeSubscriptionAdd: function (event) {\n        // If asleep, wake up the computed by subscribing to any dependencies.\n        var computedObservable = this,\n            state = computedObservable[computedState];\n        if (!state.isDisposed && state.isSleeping && event == 'change') {\n            state.isSleeping = false;\n            if (state.isStale || computedObservable.haveDependenciesChanged()) {\n                state.dependencyTracking = null;\n                state.dependenciesCount = 0;\n                if (computedObservable.evaluateImmediate()) {\n                    computedObservable.updateVersion();\n                }\n            } else {\n                // First put the dependencies in order\n                var dependeciesOrder = [];\n                ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\n                    dependeciesOrder[dependency._order] = id;\n                });\n                // Next, subscribe to each one\n                ko.utils.arrayForEach(dependeciesOrder, function (id, order) {\n                    var dependency = state.dependencyTracking[id],\n                        subscription = computedObservable.subscribeToDependency(dependency._target);\n                    subscription._order = order;\n                    subscription._version = dependency._version;\n                    state.dependencyTracking[id] = subscription;\n                });\n            }\n            if (!state.isDisposed) {     // test since evaluating could trigger disposal\n                computedObservable[\"notifySubscribers\"](state.latestValue, \"awake\");\n            }\n        }\n    },\n    afterSubscriptionRemove: function (event) {\n        var state = this[computedState];\n        if (!state.isDisposed && event == 'change' && !this.hasSubscriptionsForEvent('change')) {\n            ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\n                if (dependency.dispose) {\n                    state.dependencyTracking[id] = {\n                        _target: dependency._target,\n                        _order: dependency._order,\n                        _version: dependency._version\n                    };\n                    dependency.dispose();\n                }\n            });\n            state.isSleeping = true;\n            this[\"notifySubscribers\"](undefined, \"asleep\");\n        }\n    },\n    getVersion: function () {\n        // Because a pure computed is not automatically updated while it is sleeping, we can't\n        // simply return the version number. Instead, we check if any of the dependencies have\n        // changed and conditionally re-evaluate the computed observable.\n        var state = this[computedState];\n        if (state.isSleeping && (state.isStale || this.haveDependenciesChanged())) {\n            this.evaluateImmediate();\n        }\n        return ko.subscribable['fn'].getVersion.call(this);\n    }\n};\n\nvar deferEvaluationOverrides = {\n    beforeSubscriptionAdd: function (event) {\n        // This will force a computed with deferEvaluation to evaluate when the first subscription is registered.\n        if (event == 'change' || event == 'beforeChange') {\n            this.peek();\n        }\n    }\n};\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.computed constructor\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(computedFn, ko.subscribable['fn']);\n}\n\n// Set the proto chain values for ko.hasPrototype\nvar protoProp = ko.observable.protoProperty; // == \"__ko_proto__\"\nko.computed[protoProp] = ko.observable;\ncomputedFn[protoProp] = ko.computed;\n\nko.isComputed = function (instance) {\n    return ko.hasPrototype(instance, ko.computed);\n};\n\nko.isPureComputed = function (instance) {\n    return ko.hasPrototype(instance, ko.computed)\n        && instance[computedState] && instance[computedState].pure;\n};\n\nko.exportSymbol('computed', ko.computed);\nko.exportSymbol('dependentObservable', ko.computed);    // export ko.dependentObservable for backwards compatibility (1.x)\nko.exportSymbol('isComputed', ko.isComputed);\nko.exportSymbol('isPureComputed', ko.isPureComputed);\nko.exportSymbol('computed.fn', computedFn);\nko.exportProperty(computedFn, 'peek', computedFn.peek);\nko.exportProperty(computedFn, 'dispose', computedFn.dispose);\nko.exportProperty(computedFn, 'isActive', computedFn.isActive);\nko.exportProperty(computedFn, 'getDependenciesCount', computedFn.getDependenciesCount);\n\nko.pureComputed = function (evaluatorFunctionOrOptions, evaluatorFunctionTarget) {\n    if (typeof evaluatorFunctionOrOptions === 'function') {\n        return ko.computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget, {'pure':true});\n    } else {\n        evaluatorFunctionOrOptions = ko.utils.extend({}, evaluatorFunctionOrOptions);   // make a copy of the parameter object\n        evaluatorFunctionOrOptions['pure'] = true;\n        return ko.computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget);\n    }\n}\nko.exportSymbol('pureComputed', ko.pureComputed);\n\n(function() {\n    var maxNestedObservableDepth = 10; // Escape the (unlikely) pathalogical case where an observable's current value is itself (or similar reference cycle)\n\n    ko.toJS = function(rootObject) {\n        if (arguments.length == 0)\n            throw new Error(\"When calling ko.toJS, pass the object you want to convert.\");\n\n        // We just unwrap everything at every level in the object graph\n        return mapJsObjectGraph(rootObject, function(valueToMap) {\n            // Loop because an observable's value might in turn be another observable wrapper\n            for (var i = 0; ko.isObservable(valueToMap) && (i < maxNestedObservableDepth); i++)\n                valueToMap = valueToMap();\n            return valueToMap;\n        });\n    };\n\n    ko.toJSON = function(rootObject, replacer, space) {     // replacer and space are optional\n        var plainJavaScriptObject = ko.toJS(rootObject);\n        return ko.utils.stringifyJson(plainJavaScriptObject, replacer, space);\n    };\n\n    function mapJsObjectGraph(rootObject, mapInputCallback, visitedObjects) {\n        visitedObjects = visitedObjects || new objectLookup();\n\n        rootObject = mapInputCallback(rootObject);\n        var canHaveProperties = (typeof rootObject == \"object\") && (rootObject !== null) && (rootObject !== undefined) && (!(rootObject instanceof RegExp)) && (!(rootObject instanceof Date)) && (!(rootObject instanceof String)) && (!(rootObject instanceof Number)) && (!(rootObject instanceof Boolean));\n        if (!canHaveProperties)\n            return rootObject;\n\n        var outputProperties = rootObject instanceof Array ? [] : {};\n        visitedObjects.save(rootObject, outputProperties);\n\n        visitPropertiesOrArrayEntries(rootObject, function(indexer) {\n            var propertyValue = mapInputCallback(rootObject[indexer]);\n\n            switch (typeof propertyValue) {\n                case \"boolean\":\n                case \"number\":\n                case \"string\":\n                case \"function\":\n                    outputProperties[indexer] = propertyValue;\n                    break;\n                case \"object\":\n                case \"undefined\":\n                    var previouslyMappedValue = visitedObjects.get(propertyValue);\n                    outputProperties[indexer] = (previouslyMappedValue !== undefined)\n                        ? previouslyMappedValue\n                        : mapJsObjectGraph(propertyValue, mapInputCallback, visitedObjects);\n                    break;\n            }\n        });\n\n        return outputProperties;\n    }\n\n    function visitPropertiesOrArrayEntries(rootObject, visitorCallback) {\n        if (rootObject instanceof Array) {\n            for (var i = 0; i < rootObject.length; i++)\n                visitorCallback(i);\n\n            // For arrays, also respect toJSON property for custom mappings (fixes #278)\n            if (typeof rootObject['toJSON'] == 'function')\n                visitorCallback('toJSON');\n        } else {\n            for (var propertyName in rootObject) {\n                visitorCallback(propertyName);\n            }\n        }\n    };\n\n    function objectLookup() {\n        this.keys = [];\n        this.values = [];\n    };\n\n    objectLookup.prototype = {\n        constructor: objectLookup,\n        save: function(key, value) {\n            var existingIndex = ko.utils.arrayIndexOf(this.keys, key);\n            if (existingIndex >= 0)\n                this.values[existingIndex] = value;\n            else {\n                this.keys.push(key);\n                this.values.push(value);\n            }\n        },\n        get: function(key) {\n            var existingIndex = ko.utils.arrayIndexOf(this.keys, key);\n            return (existingIndex >= 0) ? this.values[existingIndex] : undefined;\n        }\n    };\n})();\n\nko.exportSymbol('toJS', ko.toJS);\nko.exportSymbol('toJSON', ko.toJSON);\n(function () {\n    var hasDomDataExpandoProperty = '__ko__hasDomDataOptionValue__';\n\n    // Normally, SELECT elements and their OPTIONs can only take value of type 'string' (because the values\n    // are stored on DOM attributes). ko.selectExtensions provides a way for SELECTs/OPTIONs to have values\n    // that are arbitrary objects. This is very convenient when implementing things like cascading dropdowns.\n    ko.selectExtensions = {\n        readValue : function(element) {\n            switch (ko.utils.tagNameLower(element)) {\n                case 'option':\n                    if (element[hasDomDataExpandoProperty] === true)\n                        return ko.utils.domData.get(element, ko.bindingHandlers.options.optionValueDomDataKey);\n                    return ko.utils.ieVersion <= 7\n                        ? (element.getAttributeNode('value') && element.getAttributeNode('value').specified ? element.value : element.text)\n                        : element.value;\n                case 'select':\n                    return element.selectedIndex >= 0 ? ko.selectExtensions.readValue(element.options[element.selectedIndex]) : undefined;\n                default:\n                    return element.value;\n            }\n        },\n\n        writeValue: function(element, value, allowUnset) {\n            switch (ko.utils.tagNameLower(element)) {\n                case 'option':\n                    switch(typeof value) {\n                        case \"string\":\n                            ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, undefined);\n                            if (hasDomDataExpandoProperty in element) { // IE <= 8 throws errors if you delete non-existent properties from a DOM node\n                                delete element[hasDomDataExpandoProperty];\n                            }\n                            element.value = value;\n                            break;\n                        default:\n                            // Store arbitrary object using DomData\n                            ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, value);\n                            element[hasDomDataExpandoProperty] = true;\n\n                            // Special treatment of numbers is just for backward compatibility. KO 1.2.1 wrote numerical values to element.value.\n                            element.value = typeof value === \"number\" ? value : \"\";\n                            break;\n                    }\n                    break;\n                case 'select':\n                    if (value === \"\" || value === null)       // A blank string or null value will select the caption\n                        value = undefined;\n                    var selection = -1;\n                    for (var i = 0, n = element.options.length, optionValue; i < n; ++i) {\n                        optionValue = ko.selectExtensions.readValue(element.options[i]);\n                        // Include special check to handle selecting a caption with a blank string value\n                        if (optionValue == value || (optionValue == \"\" && value === undefined)) {\n                            selection = i;\n                            break;\n                        }\n                    }\n                    if (allowUnset || selection >= 0 || (value === undefined && element.size > 1)) {\n                        element.selectedIndex = selection;\n                    }\n                    break;\n                default:\n                    if ((value === null) || (value === undefined))\n                        value = \"\";\n                    element.value = value;\n                    break;\n            }\n        }\n    };\n})();\n\nko.exportSymbol('selectExtensions', ko.selectExtensions);\nko.exportSymbol('selectExtensions.readValue', ko.selectExtensions.readValue);\nko.exportSymbol('selectExtensions.writeValue', ko.selectExtensions.writeValue);\nko.expressionRewriting = (function () {\n    var javaScriptReservedWords = [\"true\", \"false\", \"null\", \"undefined\"];\n\n    // Matches something that can be assigned to--either an isolated identifier or something ending with a property accessor\n    // This is designed to be simple and avoid false negatives, but could produce false positives (e.g., a+b.c).\n    // This also will not properly handle nested brackets (e.g., obj1[obj2['prop']]; see #911).\n    var javaScriptAssignmentTarget = /^(?:[$_a-z][$\\w]*|(.+)(\\.\\s*[$_a-z][$\\w]*|\\[.+\\]))$/i;\n\n    function getWriteableValue(expression) {\n        if (ko.utils.arrayIndexOf(javaScriptReservedWords, expression) >= 0)\n            return false;\n        var match = expression.match(javaScriptAssignmentTarget);\n        return match === null ? false : match[1] ? ('Object(' + match[1] + ')' + match[2]) : expression;\n    }\n\n    // The following regular expressions will be used to split an object-literal string into tokens\n\n        // These two match strings, either with double quotes or single quotes\n    var stringDouble = '\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\"',\n        stringSingle = \"'(?:[^'\\\\\\\\]|\\\\\\\\.)*'\",\n        // Matches a regular expression (text enclosed by slashes), but will also match sets of divisions\n        // as a regular expression (this is handled by the parsing loop below).\n        stringRegexp = '/(?:[^/\\\\\\\\]|\\\\\\\\.)*/\\w*',\n        // These characters have special meaning to the parser and must not appear in the middle of a\n        // token, except as part of a string.\n        specials = ',\"\\'{}()/:[\\\\]',\n        // Match text (at least two characters) that does not contain any of the above special characters,\n        // although some of the special characters are allowed to start it (all but the colon and comma).\n        // The text can contain spaces, but leading or trailing spaces are skipped.\n        everyThingElse = '[^\\\\s:,/][^' + specials + ']*[^\\\\s' + specials + ']',\n        // Match any non-space character not matched already. This will match colons and commas, since they're\n        // not matched by \"everyThingElse\", but will also match any other single character that wasn't already\n        // matched (for example: in \"a: 1, b: 2\", each of the non-space characters will be matched by oneNotSpace).\n        oneNotSpace = '[^\\\\s]',\n\n        // Create the actual regular expression by or-ing the above strings. The order is important.\n        bindingToken = RegExp(stringDouble + '|' + stringSingle + '|' + stringRegexp + '|' + everyThingElse + '|' + oneNotSpace, 'g'),\n\n        // Match end of previous token to determine whether a slash is a division or regex.\n        divisionLookBehind = /[\\])\"'A-Za-z0-9_$]+$/,\n        keywordRegexLookBehind = {'in':1,'return':1,'typeof':1};\n\n    function parseObjectLiteral(objectLiteralString) {\n        // Trim leading and trailing spaces from the string\n        var str = ko.utils.stringTrim(objectLiteralString);\n\n        // Trim braces '{' surrounding the whole object literal\n        if (str.charCodeAt(0) === 123) str = str.slice(1, -1);\n\n        // Split into tokens\n        var result = [], toks = str.match(bindingToken), key, values = [], depth = 0;\n\n        if (toks) {\n            // Append a comma so that we don't need a separate code block to deal with the last item\n            toks.push(',');\n\n            for (var i = 0, tok; tok = toks[i]; ++i) {\n                var c = tok.charCodeAt(0);\n                // A comma signals the end of a key/value pair if depth is zero\n                if (c === 44) { // \",\"\n                    if (depth <= 0) {\n                        result.push((key && values.length) ? {key: key, value: values.join('')} : {'unknown': key || values.join('')});\n                        key = depth = 0;\n                        values = [];\n                        continue;\n                    }\n                // Simply skip the colon that separates the name and value\n                } else if (c === 58) { // \":\"\n                    if (!depth && !key && values.length === 1) {\n                        key = values.pop();\n                        continue;\n                    }\n                // A set of slashes is initially matched as a regular expression, but could be division\n                } else if (c === 47 && i && tok.length > 1) {  // \"/\"\n                    // Look at the end of the previous token to determine if the slash is actually division\n                    var match = toks[i-1].match(divisionLookBehind);\n                    if (match && !keywordRegexLookBehind[match[0]]) {\n                        // The slash is actually a division punctuator; re-parse the remainder of the string (not including the slash)\n                        str = str.substr(str.indexOf(tok) + 1);\n                        toks = str.match(bindingToken);\n                        toks.push(',');\n                        i = -1;\n                        // Continue with just the slash\n                        tok = '/';\n                    }\n                // Increment depth for parentheses, braces, and brackets so that interior commas are ignored\n                } else if (c === 40 || c === 123 || c === 91) { // '(', '{', '['\n                    ++depth;\n                } else if (c === 41 || c === 125 || c === 93) { // ')', '}', ']'\n                    --depth;\n                // The key will be the first token; if it's a string, trim the quotes\n                } else if (!key && !values.length && (c === 34 || c === 39)) { // '\"', \"'\"\n                    tok = tok.slice(1, -1);\n                }\n                values.push(tok);\n            }\n        }\n        return result;\n    }\n\n    // Two-way bindings include a write function that allow the handler to update the value even if it's not an observable.\n    var twoWayBindings = {};\n\n    function preProcessBindings(bindingsStringOrKeyValueArray, bindingOptions) {\n        bindingOptions = bindingOptions || {};\n\n        function processKeyValue(key, val) {\n            var writableVal;\n            function callPreprocessHook(obj) {\n                return (obj && obj['preprocess']) ? (val = obj['preprocess'](val, key, processKeyValue)) : true;\n            }\n            if (!bindingParams) {\n                if (!callPreprocessHook(ko['getBindingHandler'](key)))\n                    return;\n\n                if (twoWayBindings[key] && (writableVal = getWriteableValue(val))) {\n                    // For two-way bindings, provide a write method in case the value\n                    // isn't a writable observable.\n                    propertyAccessorResultStrings.push(\"'\" + key + \"':function(_z){\" + writableVal + \"=_z}\");\n                }\n            }\n            // Values are wrapped in a function so that each value can be accessed independently\n            if (makeValueAccessors) {\n                val = 'function(){return ' + val + ' }';\n            }\n            resultStrings.push(\"'\" + key + \"':\" + val);\n        }\n\n        var resultStrings = [],\n            propertyAccessorResultStrings = [],\n            makeValueAccessors = bindingOptions['valueAccessors'],\n            bindingParams = bindingOptions['bindingParams'],\n            keyValueArray = typeof bindingsStringOrKeyValueArray === \"string\" ?\n                parseObjectLiteral(bindingsStringOrKeyValueArray) : bindingsStringOrKeyValueArray;\n\n        ko.utils.arrayForEach(keyValueArray, function(keyValue) {\n            processKeyValue(keyValue.key || keyValue['unknown'], keyValue.value);\n        });\n\n        if (propertyAccessorResultStrings.length)\n            processKeyValue('_ko_property_writers', \"{\" + propertyAccessorResultStrings.join(\",\") + \" }\");\n\n        return resultStrings.join(\",\");\n    }\n\n    return {\n        bindingRewriteValidators: [],\n\n        twoWayBindings: twoWayBindings,\n\n        parseObjectLiteral: parseObjectLiteral,\n\n        preProcessBindings: preProcessBindings,\n\n        keyValueArrayContainsKey: function(keyValueArray, key) {\n            for (var i = 0; i < keyValueArray.length; i++)\n                if (keyValueArray[i]['key'] == key)\n                    return true;\n            return false;\n        },\n\n        // Internal, private KO utility for updating model properties from within bindings\n        // property:            If the property being updated is (or might be) an observable, pass it here\n        //                      If it turns out to be a writable observable, it will be written to directly\n        // allBindings:         An object with a get method to retrieve bindings in the current execution context.\n        //                      This will be searched for a '_ko_property_writers' property in case you're writing to a non-observable\n        // key:                 The key identifying the property to be written. Example: for { hasFocus: myValue }, write to 'myValue' by specifying the key 'hasFocus'\n        // value:               The value to be written\n        // checkIfDifferent:    If true, and if the property being written is a writable observable, the value will only be written if\n        //                      it is !== existing value on that writable observable\n        writeValueToProperty: function(property, allBindings, key, value, checkIfDifferent) {\n            if (!property || !ko.isObservable(property)) {\n                var propWriters = allBindings.get('_ko_property_writers');\n                if (propWriters && propWriters[key])\n                    propWriters[key](value);\n            } else if (ko.isWriteableObservable(property) && (!checkIfDifferent || property.peek() !== value)) {\n                property(value);\n            }\n        }\n    };\n})();\n\nko.exportSymbol('expressionRewriting', ko.expressionRewriting);\nko.exportSymbol('expressionRewriting.bindingRewriteValidators', ko.expressionRewriting.bindingRewriteValidators);\nko.exportSymbol('expressionRewriting.parseObjectLiteral', ko.expressionRewriting.parseObjectLiteral);\nko.exportSymbol('expressionRewriting.preProcessBindings', ko.expressionRewriting.preProcessBindings);\n\n// Making bindings explicitly declare themselves as \"two way\" isn't ideal in the long term (it would be better if\n// all bindings could use an official 'property writer' API without needing to declare that they might). However,\n// since this is not, and has never been, a public API (_ko_property_writers was never documented), it's acceptable\n// as an internal implementation detail in the short term.\n// For those developers who rely on _ko_property_writers in their custom bindings, we expose _twoWayBindings as an\n// undocumented feature that makes it relatively easy to upgrade to KO 3.0. However, this is still not an official\n// public API, and we reserve the right to remove it at any time if we create a real public property writers API.\nko.exportSymbol('expressionRewriting._twoWayBindings', ko.expressionRewriting.twoWayBindings);\n\n// For backward compatibility, define the following aliases. (Previously, these function names were misleading because\n// they referred to JSON specifically, even though they actually work with arbitrary JavaScript object literal expressions.)\nko.exportSymbol('jsonExpressionRewriting', ko.expressionRewriting);\nko.exportSymbol('jsonExpressionRewriting.insertPropertyAccessorsIntoJson', ko.expressionRewriting.preProcessBindings);\n(function() {\n    // \"Virtual elements\" is an abstraction on top of the usual DOM API which understands the notion that comment nodes\n    // may be used to represent hierarchy (in addition to the DOM's natural hierarchy).\n    // If you call the DOM-manipulating functions on ko.virtualElements, you will be able to read and write the state\n    // of that virtual hierarchy\n    //\n    // The point of all this is to support containerless templates (e.g., <!-- ko foreach:someCollection -->blah<!-- /ko -->)\n    // without having to scatter special cases all over the binding and templating code.\n\n    // IE 9 cannot reliably read the \"nodeValue\" property of a comment node (see https://github.com/SteveSanderson/knockout/issues/186)\n    // but it does give them a nonstandard alternative property called \"text\" that it can read reliably. Other browsers don't have that property.\n    // So, use node.text where available, and node.nodeValue elsewhere\n    var commentNodesHaveTextProperty = document && document.createComment(\"test\").text === \"<!--test-->\";\n\n    var startCommentRegex = commentNodesHaveTextProperty ? /^<!--\\s*ko(?:\\s+([\\s\\S]+))?\\s*-->$/ : /^\\s*ko(?:\\s+([\\s\\S]+))?\\s*$/;\n    var endCommentRegex =   commentNodesHaveTextProperty ? /^<!--\\s*\\/ko\\s*-->$/ : /^\\s*\\/ko\\s*$/;\n    var htmlTagsWithOptionallyClosingChildren = { 'ul': true, 'ol': true };\n\n    function isStartComment(node) {\n        return (node.nodeType == 8) && startCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);\n    }\n\n    function isEndComment(node) {\n        return (node.nodeType == 8) && endCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);\n    }\n\n    function getVirtualChildren(startComment, allowUnbalanced) {\n        var currentNode = startComment;\n        var depth = 1;\n        var children = [];\n        while (currentNode = currentNode.nextSibling) {\n            if (isEndComment(currentNode)) {\n                depth--;\n                if (depth === 0)\n                    return children;\n            }\n\n            children.push(currentNode);\n\n            if (isStartComment(currentNode))\n                depth++;\n        }\n        if (!allowUnbalanced)\n            throw new Error(\"Cannot find closing comment tag to match: \" + startComment.nodeValue);\n        return null;\n    }\n\n    function getMatchingEndComment(startComment, allowUnbalanced) {\n        var allVirtualChildren = getVirtualChildren(startComment, allowUnbalanced);\n        if (allVirtualChildren) {\n            if (allVirtualChildren.length > 0)\n                return allVirtualChildren[allVirtualChildren.length - 1].nextSibling;\n            return startComment.nextSibling;\n        } else\n            return null; // Must have no matching end comment, and allowUnbalanced is true\n    }\n\n    function getUnbalancedChildTags(node) {\n        // e.g., from <div>OK</div><!-- ko blah --><span>Another</span>, returns: <!-- ko blah --><span>Another</span>\n        //       from <div>OK</div><!-- /ko --><!-- /ko -->,             returns: <!-- /ko --><!-- /ko -->\n        var childNode = node.firstChild, captureRemaining = null;\n        if (childNode) {\n            do {\n                if (captureRemaining)                   // We already hit an unbalanced node and are now just scooping up all subsequent nodes\n                    captureRemaining.push(childNode);\n                else if (isStartComment(childNode)) {\n                    var matchingEndComment = getMatchingEndComment(childNode, /* allowUnbalanced: */ true);\n                    if (matchingEndComment)             // It's a balanced tag, so skip immediately to the end of this virtual set\n                        childNode = matchingEndComment;\n                    else\n                        captureRemaining = [childNode]; // It's unbalanced, so start capturing from this point\n                } else if (isEndComment(childNode)) {\n                    captureRemaining = [childNode];     // It's unbalanced (if it wasn't, we'd have skipped over it already), so start capturing\n                }\n            } while (childNode = childNode.nextSibling);\n        }\n        return captureRemaining;\n    }\n\n    ko.virtualElements = {\n        allowedBindings: {},\n\n        childNodes: function(node) {\n            return isStartComment(node) ? getVirtualChildren(node) : node.childNodes;\n        },\n\n        emptyNode: function(node) {\n            if (!isStartComment(node))\n                ko.utils.emptyDomNode(node);\n            else {\n                var virtualChildren = ko.virtualElements.childNodes(node);\n                for (var i = 0, j = virtualChildren.length; i < j; i++)\n                    ko.removeNode(virtualChildren[i]);\n            }\n        },\n\n        setDomNodeChildren: function(node, childNodes) {\n            if (!isStartComment(node))\n                ko.utils.setDomNodeChildren(node, childNodes);\n            else {\n                ko.virtualElements.emptyNode(node);\n                var endCommentNode = node.nextSibling; // Must be the next sibling, as we just emptied the children\n                for (var i = 0, j = childNodes.length; i < j; i++)\n                    endCommentNode.parentNode.insertBefore(childNodes[i], endCommentNode);\n            }\n        },\n\n        prepend: function(containerNode, nodeToPrepend) {\n            if (!isStartComment(containerNode)) {\n                if (containerNode.firstChild)\n                    containerNode.insertBefore(nodeToPrepend, containerNode.firstChild);\n                else\n                    containerNode.appendChild(nodeToPrepend);\n            } else {\n                // Start comments must always have a parent and at least one following sibling (the end comment)\n                containerNode.parentNode.insertBefore(nodeToPrepend, containerNode.nextSibling);\n            }\n        },\n\n        insertAfter: function(containerNode, nodeToInsert, insertAfterNode) {\n            if (!insertAfterNode) {\n                ko.virtualElements.prepend(containerNode, nodeToInsert);\n            } else if (!isStartComment(containerNode)) {\n                // Insert after insertion point\n                if (insertAfterNode.nextSibling)\n                    containerNode.insertBefore(nodeToInsert, insertAfterNode.nextSibling);\n                else\n                    containerNode.appendChild(nodeToInsert);\n            } else {\n                // Children of start comments must always have a parent and at least one following sibling (the end comment)\n                containerNode.parentNode.insertBefore(nodeToInsert, insertAfterNode.nextSibling);\n            }\n        },\n\n        firstChild: function(node) {\n            if (!isStartComment(node))\n                return node.firstChild;\n            if (!node.nextSibling || isEndComment(node.nextSibling))\n                return null;\n            return node.nextSibling;\n        },\n\n        nextSibling: function(node) {\n            if (isStartComment(node))\n                node = getMatchingEndComment(node);\n            if (node.nextSibling && isEndComment(node.nextSibling))\n                return null;\n            return node.nextSibling;\n        },\n\n        hasBindingValue: isStartComment,\n\n        virtualNodeBindingValue: function(node) {\n            var regexMatch = (commentNodesHaveTextProperty ? node.text : node.nodeValue).match(startCommentRegex);\n            return regexMatch ? regexMatch[1] : null;\n        },\n\n        normaliseVirtualElementDomStructure: function(elementVerified) {\n            // Workaround for https://github.com/SteveSanderson/knockout/issues/155\n            // (IE <= 8 or IE 9 quirks mode parses your HTML weirdly, treating closing </li> tags as if they don't exist, thereby moving comment nodes\n            // that are direct descendants of <ul> into the preceding <li>)\n            if (!htmlTagsWithOptionallyClosingChildren[ko.utils.tagNameLower(elementVerified)])\n                return;\n\n            // Scan immediate children to see if they contain unbalanced comment tags. If they do, those comment tags\n            // must be intended to appear *after* that child, so move them there.\n            var childNode = elementVerified.firstChild;\n            if (childNode) {\n                do {\n                    if (childNode.nodeType === 1) {\n                        var unbalancedTags = getUnbalancedChildTags(childNode);\n                        if (unbalancedTags) {\n                            // Fix up the DOM by moving the unbalanced tags to where they most likely were intended to be placed - *after* the child\n                            var nodeToInsertBefore = childNode.nextSibling;\n                            for (var i = 0; i < unbalancedTags.length; i++) {\n                                if (nodeToInsertBefore)\n                                    elementVerified.insertBefore(unbalancedTags[i], nodeToInsertBefore);\n                                else\n                                    elementVerified.appendChild(unbalancedTags[i]);\n                            }\n                        }\n                    }\n                } while (childNode = childNode.nextSibling);\n            }\n        }\n    };\n})();\nko.exportSymbol('virtualElements', ko.virtualElements);\nko.exportSymbol('virtualElements.allowedBindings', ko.virtualElements.allowedBindings);\nko.exportSymbol('virtualElements.emptyNode', ko.virtualElements.emptyNode);\n//ko.exportSymbol('virtualElements.firstChild', ko.virtualElements.firstChild);     // firstChild is not minified\nko.exportSymbol('virtualElements.insertAfter', ko.virtualElements.insertAfter);\n//ko.exportSymbol('virtualElements.nextSibling', ko.virtualElements.nextSibling);   // nextSibling is not minified\nko.exportSymbol('virtualElements.prepend', ko.virtualElements.prepend);\nko.exportSymbol('virtualElements.setDomNodeChildren', ko.virtualElements.setDomNodeChildren);\n(function() {\n    var defaultBindingAttributeName = \"data-bind\";\n\n    ko.bindingProvider = function() {\n        this.bindingCache = {};\n    };\n\n    ko.utils.extend(ko.bindingProvider.prototype, {\n        'nodeHasBindings': function(node) {\n            switch (node.nodeType) {\n                case 1: // Element\n                    return node.getAttribute(defaultBindingAttributeName) != null\n                        || ko.components['getComponentNameForNode'](node);\n                case 8: // Comment node\n                    return ko.virtualElements.hasBindingValue(node);\n                default: return false;\n            }\n        },\n\n        'getBindings': function(node, bindingContext) {\n            var bindingsString = this['getBindingsString'](node, bindingContext),\n                parsedBindings = bindingsString ? this['parseBindingsString'](bindingsString, bindingContext, node) : null;\n            return ko.components.addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ false);\n        },\n\n        'getBindingAccessors': function(node, bindingContext) {\n            var bindingsString = this['getBindingsString'](node, bindingContext),\n                parsedBindings = bindingsString ? this['parseBindingsString'](bindingsString, bindingContext, node, { 'valueAccessors': true }) : null;\n            return ko.components.addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ true);\n        },\n\n        // The following function is only used internally by this default provider.\n        // It's not part of the interface definition for a general binding provider.\n        'getBindingsString': function(node, bindingContext) {\n            switch (node.nodeType) {\n                case 1: return node.getAttribute(defaultBindingAttributeName);   // Element\n                case 8: return ko.virtualElements.virtualNodeBindingValue(node); // Comment node\n                default: return null;\n            }\n        },\n\n        // The following function is only used internally by this default provider.\n        // It's not part of the interface definition for a general binding provider.\n        'parseBindingsString': function(bindingsString, bindingContext, node, options) {\n            try {\n                var bindingFunction = createBindingsStringEvaluatorViaCache(bindingsString, this.bindingCache, options);\n                return bindingFunction(bindingContext, node);\n            } catch (ex) {\n                ex.message = \"Unable to parse bindings.\\nBindings value: \" + bindingsString + \"\\nMessage: \" + ex.message;\n                throw ex;\n            }\n        }\n    });\n\n    ko.bindingProvider['instance'] = new ko.bindingProvider();\n\n    function createBindingsStringEvaluatorViaCache(bindingsString, cache, options) {\n        var cacheKey = bindingsString + (options && options['valueAccessors'] || '');\n        return cache[cacheKey]\n            || (cache[cacheKey] = createBindingsStringEvaluator(bindingsString, options));\n    }\n\n    function createBindingsStringEvaluator(bindingsString, options) {\n        // Build the source for a function that evaluates \"expression\"\n        // For each scope variable, add an extra level of \"with\" nesting\n        // Example result: with(sc1) { with(sc0) { return (expression) } }\n        var rewrittenBindings = ko.expressionRewriting.preProcessBindings(bindingsString, options),\n            functionBody = \"with($context){with($data||{}){return{\" + rewrittenBindings + \"}}}\";\n        return new Function(\"$context\", \"$element\", functionBody);\n    }\n})();\n\nko.exportSymbol('bindingProvider', ko.bindingProvider);\n(function () {\n    ko.bindingHandlers = {};\n\n    // The following element types will not be recursed into during binding.\n    var bindingDoesNotRecurseIntoElementTypes = {\n        // Don't want bindings that operate on text nodes to mutate <script> and <textarea> contents,\n        // because it's unexpected and a potential XSS issue.\n        // Also bindings should not operate on <template> elements since this breaks in Internet Explorer\n        // and because such elements' contents are always intended to be bound in a different context\n        // from where they appear in the document.\n        'script': true,\n        'textarea': true,\n        'template': true\n    };\n\n    // Use an overridable method for retrieving binding handlers so that a plugins may support dynamically created handlers\n    ko['getBindingHandler'] = function(bindingKey) {\n        return ko.bindingHandlers[bindingKey];\n    };\n\n    // The ko.bindingContext constructor is only called directly to create the root context. For child\n    // contexts, use bindingContext.createChildContext or bindingContext.extend.\n    ko.bindingContext = function(dataItemOrAccessor, parentContext, dataItemAlias, extendCallback, options) {\n\n        // The binding context object includes static properties for the current, parent, and root view models.\n        // If a view model is actually stored in an observable, the corresponding binding context object, and\n        // any child contexts, must be updated when the view model is changed.\n        function updateContext() {\n            // Most of the time, the context will directly get a view model object, but if a function is given,\n            // we call the function to retrieve the view model. If the function accesses any observables or returns\n            // an observable, the dependency is tracked, and those observables can later cause the binding\n            // context to be updated.\n            var dataItemOrObservable = isFunc ? dataItemOrAccessor() : dataItemOrAccessor,\n                dataItem = ko.utils.unwrapObservable(dataItemOrObservable);\n\n            if (parentContext) {\n                // When a \"parent\" context is given, register a dependency on the parent context. Thus whenever the\n                // parent context is updated, this context will also be updated.\n                if (parentContext._subscribable)\n                    parentContext._subscribable();\n\n                // Copy $root and any custom properties from the parent context\n                ko.utils.extend(self, parentContext);\n\n                // Because the above copy overwrites our own properties, we need to reset them.\n                self._subscribable = subscribable;\n            } else {\n                self['$parents'] = [];\n                self['$root'] = dataItem;\n\n                // Export 'ko' in the binding context so it will be available in bindings and templates\n                // even if 'ko' isn't exported as a global, such as when using an AMD loader.\n                // See https://github.com/SteveSanderson/knockout/issues/490\n                self['ko'] = ko;\n            }\n            self['$rawData'] = dataItemOrObservable;\n            self['$data'] = dataItem;\n            if (dataItemAlias)\n                self[dataItemAlias] = dataItem;\n\n            // The extendCallback function is provided when creating a child context or extending a context.\n            // It handles the specific actions needed to finish setting up the binding context. Actions in this\n            // function could also add dependencies to this binding context.\n            if (extendCallback)\n                extendCallback(self, parentContext, dataItem);\n\n            return self['$data'];\n        }\n        function disposeWhen() {\n            return nodes && !ko.utils.anyDomNodeIsAttachedToDocument(nodes);\n        }\n\n        var self = this,\n            isFunc = typeof(dataItemOrAccessor) == \"function\" && !ko.isObservable(dataItemOrAccessor),\n            nodes,\n            subscribable;\n\n        if (options && options['exportDependencies']) {\n            // The \"exportDependencies\" option means that the calling code will track any dependencies and re-create\n            // the binding context when they change.\n            updateContext();\n        } else {\n            subscribable = ko.dependentObservable(updateContext, null, { disposeWhen: disposeWhen, disposeWhenNodeIsRemoved: true });\n\n            // At this point, the binding context has been initialized, and the \"subscribable\" computed observable is\n            // subscribed to any observables that were accessed in the process. If there is nothing to track, the\n            // computed will be inactive, and we can safely throw it away. If it's active, the computed is stored in\n            // the context object.\n            if (subscribable.isActive()) {\n                self._subscribable = subscribable;\n\n                // Always notify because even if the model ($data) hasn't changed, other context properties might have changed\n                subscribable['equalityComparer'] = null;\n\n                // We need to be able to dispose of this computed observable when it's no longer needed. This would be\n                // easy if we had a single node to watch, but binding contexts can be used by many different nodes, and\n                // we cannot assume that those nodes have any relation to each other. So instead we track any node that\n                // the context is attached to, and dispose the computed when all of those nodes have been cleaned.\n\n                // Add properties to *subscribable* instead of *self* because any properties added to *self* may be overwritten on updates\n                nodes = [];\n                subscribable._addNode = function(node) {\n                    nodes.push(node);\n                    ko.utils.domNodeDisposal.addDisposeCallback(node, function(node) {\n                        ko.utils.arrayRemoveItem(nodes, node);\n                        if (!nodes.length) {\n                            subscribable.dispose();\n                            self._subscribable = subscribable = undefined;\n                        }\n                    });\n                };\n            }\n        }\n    }\n\n    // Extend the binding context hierarchy with a new view model object. If the parent context is watching\n    // any observables, the new child context will automatically get a dependency on the parent context.\n    // But this does not mean that the $data value of the child context will also get updated. If the child\n    // view model also depends on the parent view model, you must provide a function that returns the correct\n    // view model on each update.\n    ko.bindingContext.prototype['createChildContext'] = function (dataItemOrAccessor, dataItemAlias, extendCallback, options) {\n        return new ko.bindingContext(dataItemOrAccessor, this, dataItemAlias, function(self, parentContext) {\n            // Extend the context hierarchy by setting the appropriate pointers\n            self['$parentContext'] = parentContext;\n            self['$parent'] = parentContext['$data'];\n            self['$parents'] = (parentContext['$parents'] || []).slice(0);\n            self['$parents'].unshift(self['$parent']);\n            if (extendCallback)\n                extendCallback(self);\n        }, options);\n    };\n\n    // Extend the binding context with new custom properties. This doesn't change the context hierarchy.\n    // Similarly to \"child\" contexts, provide a function here to make sure that the correct values are set\n    // when an observable view model is updated.\n    ko.bindingContext.prototype['extend'] = function(properties) {\n        // If the parent context references an observable view model, \"_subscribable\" will always be the\n        // latest view model object. If not, \"_subscribable\" isn't set, and we can use the static \"$data\" value.\n        return new ko.bindingContext(this._subscribable || this['$data'], this, null, function(self, parentContext) {\n            // This \"child\" context doesn't directly track a parent observable view model,\n            // so we need to manually set the $rawData value to match the parent.\n            self['$rawData'] = parentContext['$rawData'];\n            ko.utils.extend(self, typeof(properties) == \"function\" ? properties() : properties);\n        });\n    };\n\n    ko.bindingContext.prototype.createStaticChildContext = function (dataItemOrAccessor, dataItemAlias) {\n        return this['createChildContext'](dataItemOrAccessor, dataItemAlias, null, { \"exportDependencies\": true });\n    };\n\n    // Returns the valueAccesor function for a binding value\n    function makeValueAccessor(value) {\n        return function() {\n            return value;\n        };\n    }\n\n    // Returns the value of a valueAccessor function\n    function evaluateValueAccessor(valueAccessor) {\n        return valueAccessor();\n    }\n\n    // Given a function that returns bindings, create and return a new object that contains\n    // binding value-accessors functions. Each accessor function calls the original function\n    // so that it always gets the latest value and all dependencies are captured. This is used\n    // by ko.applyBindingsToNode and getBindingsAndMakeAccessors.\n    function makeAccessorsFromFunction(callback) {\n        return ko.utils.objectMap(ko.dependencyDetection.ignore(callback), function(value, key) {\n            return function() {\n                return callback()[key];\n            };\n        });\n    }\n\n    // Given a bindings function or object, create and return a new object that contains\n    // binding value-accessors functions. This is used by ko.applyBindingsToNode.\n    function makeBindingAccessors(bindings, context, node) {\n        if (typeof bindings === 'function') {\n            return makeAccessorsFromFunction(bindings.bind(null, context, node));\n        } else {\n            return ko.utils.objectMap(bindings, makeValueAccessor);\n        }\n    }\n\n    // This function is used if the binding provider doesn't include a getBindingAccessors function.\n    // It must be called with 'this' set to the provider instance.\n    function getBindingsAndMakeAccessors(node, context) {\n        return makeAccessorsFromFunction(this['getBindings'].bind(this, node, context));\n    }\n\n    function validateThatBindingIsAllowedForVirtualElements(bindingName) {\n        var validator = ko.virtualElements.allowedBindings[bindingName];\n        if (!validator)\n            throw new Error(\"The binding '\" + bindingName + \"' cannot be used with virtual elements\")\n    }\n\n    function applyBindingsToDescendantsInternal (bindingContext, elementOrVirtualElement, bindingContextsMayDifferFromDomParentElement) {\n        var currentChild,\n            nextInQueue = ko.virtualElements.firstChild(elementOrVirtualElement),\n            provider = ko.bindingProvider['instance'],\n            preprocessNode = provider['preprocessNode'];\n\n        // Preprocessing allows a binding provider to mutate a node before bindings are applied to it. For example it's\n        // possible to insert new siblings after it, and/or replace the node with a different one. This can be used to\n        // implement custom binding syntaxes, such as {{ value }} for string interpolation, or custom element types that\n        // trigger insertion of <template> contents at that point in the document.\n        if (preprocessNode) {\n            while (currentChild = nextInQueue) {\n                nextInQueue = ko.virtualElements.nextSibling(currentChild);\n                preprocessNode.call(provider, currentChild);\n            }\n            // Reset nextInQueue for the next loop\n            nextInQueue = ko.virtualElements.firstChild(elementOrVirtualElement);\n        }\n\n        while (currentChild = nextInQueue) {\n            // Keep a record of the next child *before* applying bindings, in case the binding removes the current child from its position\n            nextInQueue = ko.virtualElements.nextSibling(currentChild);\n            applyBindingsToNodeAndDescendantsInternal(bindingContext, currentChild, bindingContextsMayDifferFromDomParentElement);\n        }\n    }\n\n    function applyBindingsToNodeAndDescendantsInternal (bindingContext, nodeVerified, bindingContextMayDifferFromDomParentElement) {\n        var shouldBindDescendants = true;\n\n        // Perf optimisation: Apply bindings only if...\n        // (1) We need to store the binding context on this node (because it may differ from the DOM parent node's binding context)\n        //     Note that we can't store binding contexts on non-elements (e.g., text nodes), as IE doesn't allow expando properties for those\n        // (2) It might have bindings (e.g., it has a data-bind attribute, or it's a marker for a containerless template)\n        var isElement = (nodeVerified.nodeType === 1);\n        if (isElement) // Workaround IE <= 8 HTML parsing weirdness\n            ko.virtualElements.normaliseVirtualElementDomStructure(nodeVerified);\n\n        var shouldApplyBindings = (isElement && bindingContextMayDifferFromDomParentElement)             // Case (1)\n                               || ko.bindingProvider['instance']['nodeHasBindings'](nodeVerified);       // Case (2)\n        if (shouldApplyBindings)\n            shouldBindDescendants = applyBindingsToNodeInternal(nodeVerified, null, bindingContext, bindingContextMayDifferFromDomParentElement)['shouldBindDescendants'];\n\n        if (shouldBindDescendants && !bindingDoesNotRecurseIntoElementTypes[ko.utils.tagNameLower(nodeVerified)]) {\n            // We're recursing automatically into (real or virtual) child nodes without changing binding contexts. So,\n            //  * For children of a *real* element, the binding context is certainly the same as on their DOM .parentNode,\n            //    hence bindingContextsMayDifferFromDomParentElement is false\n            //  * For children of a *virtual* element, we can't be sure. Evaluating .parentNode on those children may\n            //    skip over any number of intermediate virtual elements, any of which might define a custom binding context,\n            //    hence bindingContextsMayDifferFromDomParentElement is true\n            applyBindingsToDescendantsInternal(bindingContext, nodeVerified, /* bindingContextsMayDifferFromDomParentElement: */ !isElement);\n        }\n    }\n\n    var boundElementDomDataKey = ko.utils.domData.nextKey();\n\n\n    function topologicalSortBindings(bindings) {\n        // Depth-first sort\n        var result = [],                // The list of key/handler pairs that we will return\n            bindingsConsidered = {},    // A temporary record of which bindings are already in 'result'\n            cyclicDependencyStack = []; // Keeps track of a depth-search so that, if there's a cycle, we know which bindings caused it\n        ko.utils.objectForEach(bindings, function pushBinding(bindingKey) {\n            if (!bindingsConsidered[bindingKey]) {\n                var binding = ko['getBindingHandler'](bindingKey);\n                if (binding) {\n                    // First add dependencies (if any) of the current binding\n                    if (binding['after']) {\n                        cyclicDependencyStack.push(bindingKey);\n                        ko.utils.arrayForEach(binding['after'], function(bindingDependencyKey) {\n                            if (bindings[bindingDependencyKey]) {\n                                if (ko.utils.arrayIndexOf(cyclicDependencyStack, bindingDependencyKey) !== -1) {\n                                    throw Error(\"Cannot combine the following bindings, because they have a cyclic dependency: \" + cyclicDependencyStack.join(\", \"));\n                                } else {\n                                    pushBinding(bindingDependencyKey);\n                                }\n                            }\n                        });\n                        cyclicDependencyStack.length--;\n                    }\n                    // Next add the current binding\n                    result.push({ key: bindingKey, handler: binding });\n                }\n                bindingsConsidered[bindingKey] = true;\n            }\n        });\n\n        return result;\n    }\n\n    function applyBindingsToNodeInternal(node, sourceBindings, bindingContext, bindingContextMayDifferFromDomParentElement) {\n        // Prevent multiple applyBindings calls for the same node, except when a binding value is specified\n        var alreadyBound = ko.utils.domData.get(node, boundElementDomDataKey);\n        if (!sourceBindings) {\n            if (alreadyBound) {\n                throw Error(\"You cannot apply bindings multiple times to the same element.\");\n            }\n            ko.utils.domData.set(node, boundElementDomDataKey, true);\n        }\n\n        // Optimization: Don't store the binding context on this node if it's definitely the same as on node.parentNode, because\n        // we can easily recover it just by scanning up the node's ancestors in the DOM\n        // (note: here, parent node means \"real DOM parent\" not \"virtual parent\", as there's no O(1) way to find the virtual parent)\n        if (!alreadyBound && bindingContextMayDifferFromDomParentElement)\n            ko.storedBindingContextForNode(node, bindingContext);\n\n        // Use bindings if given, otherwise fall back on asking the bindings provider to give us some bindings\n        var bindings;\n        if (sourceBindings && typeof sourceBindings !== 'function') {\n            bindings = sourceBindings;\n        } else {\n            var provider = ko.bindingProvider['instance'],\n                getBindings = provider['getBindingAccessors'] || getBindingsAndMakeAccessors;\n\n            // Get the binding from the provider within a computed observable so that we can update the bindings whenever\n            // the binding context is updated or if the binding provider accesses observables.\n            var bindingsUpdater = ko.dependentObservable(\n                function() {\n                    bindings = sourceBindings ? sourceBindings(bindingContext, node) : getBindings.call(provider, node, bindingContext);\n                    // Register a dependency on the binding context to support observable view models.\n                    if (bindings && bindingContext._subscribable)\n                        bindingContext._subscribable();\n                    return bindings;\n                },\n                null, { disposeWhenNodeIsRemoved: node }\n            );\n\n            if (!bindings || !bindingsUpdater.isActive())\n                bindingsUpdater = null;\n        }\n\n        var bindingHandlerThatControlsDescendantBindings;\n        if (bindings) {\n            // Return the value accessor for a given binding. When bindings are static (won't be updated because of a binding\n            // context update), just return the value accessor from the binding. Otherwise, return a function that always gets\n            // the latest binding value and registers a dependency on the binding updater.\n            var getValueAccessor = bindingsUpdater\n                ? function(bindingKey) {\n                    return function() {\n                        return evaluateValueAccessor(bindingsUpdater()[bindingKey]);\n                    };\n                } : function(bindingKey) {\n                    return bindings[bindingKey];\n                };\n\n            // Use of allBindings as a function is maintained for backwards compatibility, but its use is deprecated\n            function allBindings() {\n                return ko.utils.objectMap(bindingsUpdater ? bindingsUpdater() : bindings, evaluateValueAccessor);\n            }\n            // The following is the 3.x allBindings API\n            allBindings['get'] = function(key) {\n                return bindings[key] && evaluateValueAccessor(getValueAccessor(key));\n            };\n            allBindings['has'] = function(key) {\n                return key in bindings;\n            };\n\n            // First put the bindings into the right order\n            var orderedBindings = topologicalSortBindings(bindings);\n\n            // Go through the sorted bindings, calling init and update for each\n            ko.utils.arrayForEach(orderedBindings, function(bindingKeyAndHandler) {\n                // Note that topologicalSortBindings has already filtered out any nonexistent binding handlers,\n                // so bindingKeyAndHandler.handler will always be nonnull.\n                var handlerInitFn = bindingKeyAndHandler.handler[\"init\"],\n                    handlerUpdateFn = bindingKeyAndHandler.handler[\"update\"],\n                    bindingKey = bindingKeyAndHandler.key;\n\n                if (node.nodeType === 8) {\n                    validateThatBindingIsAllowedForVirtualElements(bindingKey);\n                }\n\n                try {\n                    // Run init, ignoring any dependencies\n                    if (typeof handlerInitFn == \"function\") {\n                        ko.dependencyDetection.ignore(function() {\n                            var initResult = handlerInitFn(node, getValueAccessor(bindingKey), allBindings, bindingContext['$data'], bindingContext);\n\n                            // If this binding handler claims to control descendant bindings, make a note of this\n                            if (initResult && initResult['controlsDescendantBindings']) {\n                                if (bindingHandlerThatControlsDescendantBindings !== undefined)\n                                    throw new Error(\"Multiple bindings (\" + bindingHandlerThatControlsDescendantBindings + \" and \" + bindingKey + \") are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element.\");\n                                bindingHandlerThatControlsDescendantBindings = bindingKey;\n                            }\n                        });\n                    }\n\n                    // Run update in its own computed wrapper\n                    if (typeof handlerUpdateFn == \"function\") {\n                        ko.dependentObservable(\n                            function() {\n                                handlerUpdateFn(node, getValueAccessor(bindingKey), allBindings, bindingContext['$data'], bindingContext);\n                            },\n                            null,\n                            { disposeWhenNodeIsRemoved: node }\n                        );\n                    }\n                } catch (ex) {\n                    ex.message = \"Unable to process binding \\\"\" + bindingKey + \": \" + bindings[bindingKey] + \"\\\"\\nMessage: \" + ex.message;\n                    throw ex;\n                }\n            });\n        }\n\n        return {\n            'shouldBindDescendants': bindingHandlerThatControlsDescendantBindings === undefined\n        };\n    };\n\n    var storedBindingContextDomDataKey = ko.utils.domData.nextKey();\n    ko.storedBindingContextForNode = function (node, bindingContext) {\n        if (arguments.length == 2) {\n            ko.utils.domData.set(node, storedBindingContextDomDataKey, bindingContext);\n            if (bindingContext._subscribable)\n                bindingContext._subscribable._addNode(node);\n        } else {\n            return ko.utils.domData.get(node, storedBindingContextDomDataKey);\n        }\n    }\n\n    function getBindingContext(viewModelOrBindingContext) {\n        return viewModelOrBindingContext && (viewModelOrBindingContext instanceof ko.bindingContext)\n            ? viewModelOrBindingContext\n            : new ko.bindingContext(viewModelOrBindingContext);\n    }\n\n    ko.applyBindingAccessorsToNode = function (node, bindings, viewModelOrBindingContext) {\n        if (node.nodeType === 1) // If it's an element, workaround IE <= 8 HTML parsing weirdness\n            ko.virtualElements.normaliseVirtualElementDomStructure(node);\n        return applyBindingsToNodeInternal(node, bindings, getBindingContext(viewModelOrBindingContext), true);\n    };\n\n    ko.applyBindingsToNode = function (node, bindings, viewModelOrBindingContext) {\n        var context = getBindingContext(viewModelOrBindingContext);\n        return ko.applyBindingAccessorsToNode(node, makeBindingAccessors(bindings, context, node), context);\n    };\n\n    ko.applyBindingsToDescendants = function(viewModelOrBindingContext, rootNode) {\n        if (rootNode.nodeType === 1 || rootNode.nodeType === 8)\n            applyBindingsToDescendantsInternal(getBindingContext(viewModelOrBindingContext), rootNode, true);\n    };\n\n    ko.applyBindings = function (viewModelOrBindingContext, rootNode) {\n        // If jQuery is loaded after Knockout, we won't initially have access to it. So save it here.\n        if (!jQueryInstance && window['jQuery']) {\n            jQueryInstance = window['jQuery'];\n        }\n\n        if (rootNode && (rootNode.nodeType !== 1) && (rootNode.nodeType !== 8))\n            throw new Error(\"ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node\");\n        rootNode = rootNode || window.document.body; // Make \"rootNode\" parameter optional\n\n        applyBindingsToNodeAndDescendantsInternal(getBindingContext(viewModelOrBindingContext), rootNode, true);\n    };\n\n    // Retrieving binding context from arbitrary nodes\n    ko.contextFor = function(node) {\n        // We can only do something meaningful for elements and comment nodes (in particular, not text nodes, as IE can't store domdata for them)\n        switch (node.nodeType) {\n            case 1:\n            case 8:\n                var context = ko.storedBindingContextForNode(node);\n                if (context) return context;\n                if (node.parentNode) return ko.contextFor(node.parentNode);\n                break;\n        }\n        return undefined;\n    };\n    ko.dataFor = function(node) {\n        var context = ko.contextFor(node);\n        return context ? context['$data'] : undefined;\n    };\n\n    ko.exportSymbol('bindingHandlers', ko.bindingHandlers);\n    ko.exportSymbol('applyBindings', ko.applyBindings);\n    ko.exportSymbol('applyBindingsToDescendants', ko.applyBindingsToDescendants);\n    ko.exportSymbol('applyBindingAccessorsToNode', ko.applyBindingAccessorsToNode);\n    ko.exportSymbol('applyBindingsToNode', ko.applyBindingsToNode);\n    ko.exportSymbol('contextFor', ko.contextFor);\n    ko.exportSymbol('dataFor', ko.dataFor);\n})();\n(function(undefined) {\n    var loadingSubscribablesCache = {}, // Tracks component loads that are currently in flight\n        loadedDefinitionsCache = {};    // Tracks component loads that have already completed\n\n    ko.components = {\n        get: function(componentName, callback) {\n            var cachedDefinition = getObjectOwnProperty(loadedDefinitionsCache, componentName);\n            if (cachedDefinition) {\n                // It's already loaded and cached. Reuse the same definition object.\n                // Note that for API consistency, even cache hits complete asynchronously by default.\n                // You can bypass this by putting synchronous:true on your component config.\n                if (cachedDefinition.isSynchronousComponent) {\n                    ko.dependencyDetection.ignore(function() { // See comment in loaderRegistryBehaviors.js for reasoning\n                        callback(cachedDefinition.definition);\n                    });\n                } else {\n                    ko.tasks.schedule(function() { callback(cachedDefinition.definition); });\n                }\n            } else {\n                // Join the loading process that is already underway, or start a new one.\n                loadComponentAndNotify(componentName, callback);\n            }\n        },\n\n        clearCachedDefinition: function(componentName) {\n            delete loadedDefinitionsCache[componentName];\n        },\n\n        _getFirstResultFromLoaders: getFirstResultFromLoaders\n    };\n\n    function getObjectOwnProperty(obj, propName) {\n        return obj.hasOwnProperty(propName) ? obj[propName] : undefined;\n    }\n\n    function loadComponentAndNotify(componentName, callback) {\n        var subscribable = getObjectOwnProperty(loadingSubscribablesCache, componentName),\n            completedAsync;\n        if (!subscribable) {\n            // It's not started loading yet. Start loading, and when it's done, move it to loadedDefinitionsCache.\n            subscribable = loadingSubscribablesCache[componentName] = new ko.subscribable();\n            subscribable.subscribe(callback);\n\n            beginLoadingComponent(componentName, function(definition, config) {\n                var isSynchronousComponent = !!(config && config['synchronous']);\n                loadedDefinitionsCache[componentName] = { definition: definition, isSynchronousComponent: isSynchronousComponent };\n                delete loadingSubscribablesCache[componentName];\n\n                // For API consistency, all loads complete asynchronously. However we want to avoid\n                // adding an extra task schedule if it's unnecessary (i.e., the completion is already\n                // async).\n                //\n                // You can bypass the 'always asynchronous' feature by putting the synchronous:true\n                // flag on your component configuration when you register it.\n                if (completedAsync || isSynchronousComponent) {\n                    // Note that notifySubscribers ignores any dependencies read within the callback.\n                    // See comment in loaderRegistryBehaviors.js for reasoning\n                    subscribable['notifySubscribers'](definition);\n                } else {\n                    ko.tasks.schedule(function() {\n                        subscribable['notifySubscribers'](definition);\n                    });\n                }\n            });\n            completedAsync = true;\n        } else {\n            subscribable.subscribe(callback);\n        }\n    }\n\n    function beginLoadingComponent(componentName, callback) {\n        getFirstResultFromLoaders('getConfig', [componentName], function(config) {\n            if (config) {\n                // We have a config, so now load its definition\n                getFirstResultFromLoaders('loadComponent', [componentName, config], function(definition) {\n                    callback(definition, config);\n                });\n            } else {\n                // The component has no config - it's unknown to all the loaders.\n                // Note that this is not an error (e.g., a module loading error) - that would abort the\n                // process and this callback would not run. For this callback to run, all loaders must\n                // have confirmed they don't know about this component.\n                callback(null, null);\n            }\n        });\n    }\n\n    function getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders) {\n        // On the first call in the stack, start with the full set of loaders\n        if (!candidateLoaders) {\n            candidateLoaders = ko.components['loaders'].slice(0); // Use a copy, because we'll be mutating this array\n        }\n\n        // Try the next candidate\n        var currentCandidateLoader = candidateLoaders.shift();\n        if (currentCandidateLoader) {\n            var methodInstance = currentCandidateLoader[methodName];\n            if (methodInstance) {\n                var wasAborted = false,\n                    synchronousReturnValue = methodInstance.apply(currentCandidateLoader, argsExceptCallback.concat(function(result) {\n                        if (wasAborted) {\n                            callback(null);\n                        } else if (result !== null) {\n                            // This candidate returned a value. Use it.\n                            callback(result);\n                        } else {\n                            // Try the next candidate\n                            getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\n                        }\n                    }));\n\n                // Currently, loaders may not return anything synchronously. This leaves open the possibility\n                // that we'll extend the API to support synchronous return values in the future. It won't be\n                // a breaking change, because currently no loader is allowed to return anything except undefined.\n                if (synchronousReturnValue !== undefined) {\n                    wasAborted = true;\n\n                    // Method to suppress exceptions will remain undocumented. This is only to keep\n                    // KO's specs running tidily, since we can observe the loading got aborted without\n                    // having exceptions cluttering up the console too.\n                    if (!currentCandidateLoader['suppressLoaderExceptions']) {\n                        throw new Error('Component loaders must supply values by invoking the callback, not by returning values synchronously.');\n                    }\n                }\n            } else {\n                // This candidate doesn't have the relevant handler. Synchronously move on to the next one.\n                getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\n            }\n        } else {\n            // No candidates returned a value\n            callback(null);\n        }\n    }\n\n    // Reference the loaders via string name so it's possible for developers\n    // to replace the whole array by assigning to ko.components.loaders\n    ko.components['loaders'] = [];\n\n    ko.exportSymbol('components', ko.components);\n    ko.exportSymbol('components.get', ko.components.get);\n    ko.exportSymbol('components.clearCachedDefinition', ko.components.clearCachedDefinition);\n})();\n(function(undefined) {\n\n    // The default loader is responsible for two things:\n    // 1. Maintaining the default in-memory registry of component configuration objects\n    //    (i.e., the thing you're writing to when you call ko.components.register(someName, ...))\n    // 2. Answering requests for components by fetching configuration objects\n    //    from that default in-memory registry and resolving them into standard\n    //    component definition objects (of the form { createViewModel: ..., template: ... })\n    // Custom loaders may override either of these facilities, i.e.,\n    // 1. To supply configuration objects from some other source (e.g., conventions)\n    // 2. Or, to resolve configuration objects by loading viewmodels/templates via arbitrary logic.\n\n    var defaultConfigRegistry = {};\n\n    ko.components.register = function(componentName, config) {\n        if (!config) {\n            throw new Error('Invalid configuration for ' + componentName);\n        }\n\n        if (ko.components.isRegistered(componentName)) {\n            throw new Error('Component ' + componentName + ' is already registered');\n        }\n\n        defaultConfigRegistry[componentName] = config;\n    };\n\n    ko.components.isRegistered = function(componentName) {\n        return defaultConfigRegistry.hasOwnProperty(componentName);\n    };\n\n    ko.components.unregister = function(componentName) {\n        delete defaultConfigRegistry[componentName];\n        ko.components.clearCachedDefinition(componentName);\n    };\n\n    ko.components.defaultLoader = {\n        'getConfig': function(componentName, callback) {\n            var result = defaultConfigRegistry.hasOwnProperty(componentName)\n                ? defaultConfigRegistry[componentName]\n                : null;\n            callback(result);\n        },\n\n        'loadComponent': function(componentName, config, callback) {\n            var errorCallback = makeErrorCallback(componentName);\n            possiblyGetConfigFromAmd(errorCallback, config, function(loadedConfig) {\n                resolveConfig(componentName, errorCallback, loadedConfig, callback);\n            });\n        },\n\n        'loadTemplate': function(componentName, templateConfig, callback) {\n            resolveTemplate(makeErrorCallback(componentName), templateConfig, callback);\n        },\n\n        'loadViewModel': function(componentName, viewModelConfig, callback) {\n            resolveViewModel(makeErrorCallback(componentName), viewModelConfig, callback);\n        }\n    };\n\n    var createViewModelKey = 'createViewModel';\n\n    // Takes a config object of the form { template: ..., viewModel: ... }, and asynchronously convert it\n    // into the standard component definition format:\n    //    { template: <ArrayOfDomNodes>, createViewModel: function(params, componentInfo) { ... } }.\n    // Since both template and viewModel may need to be resolved asynchronously, both tasks are performed\n    // in parallel, and the results joined when both are ready. We don't depend on any promises infrastructure,\n    // so this is implemented manually below.\n    function resolveConfig(componentName, errorCallback, config, callback) {\n        var result = {},\n            makeCallBackWhenZero = 2,\n            tryIssueCallback = function() {\n                if (--makeCallBackWhenZero === 0) {\n                    callback(result);\n                }\n            },\n            templateConfig = config['template'],\n            viewModelConfig = config['viewModel'];\n\n        if (templateConfig) {\n            possiblyGetConfigFromAmd(errorCallback, templateConfig, function(loadedConfig) {\n                ko.components._getFirstResultFromLoaders('loadTemplate', [componentName, loadedConfig], function(resolvedTemplate) {\n                    result['template'] = resolvedTemplate;\n                    tryIssueCallback();\n                });\n            });\n        } else {\n            tryIssueCallback();\n        }\n\n        if (viewModelConfig) {\n            possiblyGetConfigFromAmd(errorCallback, viewModelConfig, function(loadedConfig) {\n                ko.components._getFirstResultFromLoaders('loadViewModel', [componentName, loadedConfig], function(resolvedViewModel) {\n                    result[createViewModelKey] = resolvedViewModel;\n                    tryIssueCallback();\n                });\n            });\n        } else {\n            tryIssueCallback();\n        }\n    }\n\n    function resolveTemplate(errorCallback, templateConfig, callback) {\n        if (typeof templateConfig === 'string') {\n            // Markup - parse it\n            callback(ko.utils.parseHtmlFragment(templateConfig));\n        } else if (templateConfig instanceof Array) {\n            // Assume already an array of DOM nodes - pass through unchanged\n            callback(templateConfig);\n        } else if (isDocumentFragment(templateConfig)) {\n            // Document fragment - use its child nodes\n            callback(ko.utils.makeArray(templateConfig.childNodes));\n        } else if (templateConfig['element']) {\n            var element = templateConfig['element'];\n            if (isDomElement(element)) {\n                // Element instance - copy its child nodes\n                callback(cloneNodesFromTemplateSourceElement(element));\n            } else if (typeof element === 'string') {\n                // Element ID - find it, then copy its child nodes\n                var elemInstance = document.getElementById(element);\n                if (elemInstance) {\n                    callback(cloneNodesFromTemplateSourceElement(elemInstance));\n                } else {\n                    errorCallback('Cannot find element with ID ' + element);\n                }\n            } else {\n                errorCallback('Unknown element type: ' + element);\n            }\n        } else {\n            errorCallback('Unknown template value: ' + templateConfig);\n        }\n    }\n\n    function resolveViewModel(errorCallback, viewModelConfig, callback) {\n        if (typeof viewModelConfig === 'function') {\n            // Constructor - convert to standard factory function format\n            // By design, this does *not* supply componentInfo to the constructor, as the intent is that\n            // componentInfo contains non-viewmodel data (e.g., the component's element) that should only\n            // be used in factory functions, not viewmodel constructors.\n            callback(function (params /*, componentInfo */) {\n                return new viewModelConfig(params);\n            });\n        } else if (typeof viewModelConfig[createViewModelKey] === 'function') {\n            // Already a factory function - use it as-is\n            callback(viewModelConfig[createViewModelKey]);\n        } else if ('instance' in viewModelConfig) {\n            // Fixed object instance - promote to createViewModel format for API consistency\n            var fixedInstance = viewModelConfig['instance'];\n            callback(function (params, componentInfo) {\n                return fixedInstance;\n            });\n        } else if ('viewModel' in viewModelConfig) {\n            // Resolved AMD module whose value is of the form { viewModel: ... }\n            resolveViewModel(errorCallback, viewModelConfig['viewModel'], callback);\n        } else {\n            errorCallback('Unknown viewModel value: ' + viewModelConfig);\n        }\n    }\n\n    function cloneNodesFromTemplateSourceElement(elemInstance) {\n        switch (ko.utils.tagNameLower(elemInstance)) {\n            case 'script':\n                return ko.utils.parseHtmlFragment(elemInstance.text);\n            case 'textarea':\n                return ko.utils.parseHtmlFragment(elemInstance.value);\n            case 'template':\n                // For browsers with proper <template> element support (i.e., where the .content property\n                // gives a document fragment), use that document fragment.\n                if (isDocumentFragment(elemInstance.content)) {\n                    return ko.utils.cloneNodes(elemInstance.content.childNodes);\n                }\n        }\n\n        // Regular elements such as <div>, and <template> elements on old browsers that don't really\n        // understand <template> and just treat it as a regular container\n        return ko.utils.cloneNodes(elemInstance.childNodes);\n    }\n\n    function isDomElement(obj) {\n        if (window['HTMLElement']) {\n            return obj instanceof HTMLElement;\n        } else {\n            return obj && obj.tagName && obj.nodeType === 1;\n        }\n    }\n\n    function isDocumentFragment(obj) {\n        if (window['DocumentFragment']) {\n            return obj instanceof DocumentFragment;\n        } else {\n            return obj && obj.nodeType === 11;\n        }\n    }\n\n    function possiblyGetConfigFromAmd(errorCallback, config, callback) {\n        if (typeof config['require'] === 'string') {\n            // The config is the value of an AMD module\n            if (amdRequire || window['require']) {\n                (amdRequire || window['require'])([config['require']], callback);\n            } else {\n                errorCallback('Uses require, but no AMD loader is present');\n            }\n        } else {\n            callback(config);\n        }\n    }\n\n    function makeErrorCallback(componentName) {\n        return function (message) {\n            throw new Error('Component \\'' + componentName + '\\': ' + message);\n        };\n    }\n\n    ko.exportSymbol('components.register', ko.components.register);\n    ko.exportSymbol('components.isRegistered', ko.components.isRegistered);\n    ko.exportSymbol('components.unregister', ko.components.unregister);\n\n    // Expose the default loader so that developers can directly ask it for configuration\n    // or to resolve configuration\n    ko.exportSymbol('components.defaultLoader', ko.components.defaultLoader);\n\n    // By default, the default loader is the only registered component loader\n    ko.components['loaders'].push(ko.components.defaultLoader);\n\n    // Privately expose the underlying config registry for use in old-IE shim\n    ko.components._allRegisteredComponents = defaultConfigRegistry;\n})();\n(function (undefined) {\n    // Overridable API for determining which component name applies to a given node. By overriding this,\n    // you can for example map specific tagNames to components that are not preregistered.\n    ko.components['getComponentNameForNode'] = function(node) {\n        var tagNameLower = ko.utils.tagNameLower(node);\n        if (ko.components.isRegistered(tagNameLower)) {\n            // Try to determine that this node can be considered a *custom* element; see https://github.com/knockout/knockout/issues/1603\n            if (tagNameLower.indexOf('-') != -1 || ('' + node) == \"[object HTMLUnknownElement]\" || (ko.utils.ieVersion <= 8 && node.tagName === tagNameLower)) {\n                return tagNameLower;\n            }\n        }\n    };\n\n    ko.components.addBindingsForCustomElement = function(allBindings, node, bindingContext, valueAccessors) {\n        // Determine if it's really a custom element matching a component\n        if (node.nodeType === 1) {\n            var componentName = ko.components['getComponentNameForNode'](node);\n            if (componentName) {\n                // It does represent a component, so add a component binding for it\n                allBindings = allBindings || {};\n\n                if (allBindings['component']) {\n                    // Avoid silently overwriting some other 'component' binding that may already be on the element\n                    throw new Error('Cannot use the \"component\" binding on a custom element matching a component');\n                }\n\n                var componentBindingValue = { 'name': componentName, 'params': getComponentParamsFromCustomElement(node, bindingContext) };\n\n                allBindings['component'] = valueAccessors\n                    ? function() { return componentBindingValue; }\n                    : componentBindingValue;\n            }\n        }\n\n        return allBindings;\n    }\n\n    var nativeBindingProviderInstance = new ko.bindingProvider();\n\n    function getComponentParamsFromCustomElement(elem, bindingContext) {\n        var paramsAttribute = elem.getAttribute('params');\n\n        if (paramsAttribute) {\n            var params = nativeBindingProviderInstance['parseBindingsString'](paramsAttribute, bindingContext, elem, { 'valueAccessors': true, 'bindingParams': true }),\n                rawParamComputedValues = ko.utils.objectMap(params, function(paramValue, paramName) {\n                    return ko.computed(paramValue, null, { disposeWhenNodeIsRemoved: elem });\n                }),\n                result = ko.utils.objectMap(rawParamComputedValues, function(paramValueComputed, paramName) {\n                    var paramValue = paramValueComputed.peek();\n                    // Does the evaluation of the parameter value unwrap any observables?\n                    if (!paramValueComputed.isActive()) {\n                        // No it doesn't, so there's no need for any computed wrapper. Just pass through the supplied value directly.\n                        // Example: \"someVal: firstName, age: 123\" (whether or not firstName is an observable/computed)\n                        return paramValue;\n                    } else {\n                        // Yes it does. Supply a computed property that unwraps both the outer (binding expression)\n                        // level of observability, and any inner (resulting model value) level of observability.\n                        // This means the component doesn't have to worry about multiple unwrapping. If the value is a\n                        // writable observable, the computed will also be writable and pass the value on to the observable.\n                        return ko.computed({\n                            'read': function() {\n                                return ko.utils.unwrapObservable(paramValueComputed());\n                            },\n                            'write': ko.isWriteableObservable(paramValue) && function(value) {\n                                paramValueComputed()(value);\n                            },\n                            disposeWhenNodeIsRemoved: elem\n                        });\n                    }\n                });\n\n            // Give access to the raw computeds, as long as that wouldn't overwrite any custom param also called '$raw'\n            // This is in case the developer wants to react to outer (binding) observability separately from inner\n            // (model value) observability, or in case the model value observable has subobservables.\n            if (!result.hasOwnProperty('$raw')) {\n                result['$raw'] = rawParamComputedValues;\n            }\n\n            return result;\n        } else {\n            // For consistency, absence of a \"params\" attribute is treated the same as the presence of\n            // any empty one. Otherwise component viewmodels need special code to check whether or not\n            // 'params' or 'params.$raw' is null/undefined before reading subproperties, which is annoying.\n            return { '$raw': {} };\n        }\n    }\n\n    // --------------------------------------------------------------------------------\n    // Compatibility code for older (pre-HTML5) IE browsers\n\n    if (ko.utils.ieVersion < 9) {\n        // Whenever you preregister a component, enable it as a custom element in the current document\n        ko.components['register'] = (function(originalFunction) {\n            return function(componentName) {\n                document.createElement(componentName); // Allows IE<9 to parse markup containing the custom element\n                return originalFunction.apply(this, arguments);\n            }\n        })(ko.components['register']);\n\n        // Whenever you create a document fragment, enable all preregistered component names as custom elements\n        // This is needed to make innerShiv/jQuery HTML parsing correctly handle the custom elements\n        document.createDocumentFragment = (function(originalFunction) {\n            return function() {\n                var newDocFrag = originalFunction(),\n                    allComponents = ko.components._allRegisteredComponents;\n                for (var componentName in allComponents) {\n                    if (allComponents.hasOwnProperty(componentName)) {\n                        newDocFrag.createElement(componentName);\n                    }\n                }\n                return newDocFrag;\n            };\n        })(document.createDocumentFragment);\n    }\n})();(function(undefined) {\n\n    var componentLoadingOperationUniqueId = 0;\n\n    ko.bindingHandlers['component'] = {\n        'init': function(element, valueAccessor, ignored1, ignored2, bindingContext) {\n            var currentViewModel,\n                currentLoadingOperationId,\n                disposeAssociatedComponentViewModel = function () {\n                    var currentViewModelDispose = currentViewModel && currentViewModel['dispose'];\n                    if (typeof currentViewModelDispose === 'function') {\n                        currentViewModelDispose.call(currentViewModel);\n                    }\n                    currentViewModel = null;\n                    // Any in-flight loading operation is no longer relevant, so make sure we ignore its completion\n                    currentLoadingOperationId = null;\n                },\n                originalChildNodes = ko.utils.makeArray(ko.virtualElements.childNodes(element));\n\n            ko.utils.domNodeDisposal.addDisposeCallback(element, disposeAssociatedComponentViewModel);\n\n            ko.computed(function () {\n                var value = ko.utils.unwrapObservable(valueAccessor()),\n                    componentName, componentParams;\n\n                if (typeof value === 'string') {\n                    componentName = value;\n                } else {\n                    componentName = ko.utils.unwrapObservable(value['name']);\n                    componentParams = ko.utils.unwrapObservable(value['params']);\n                }\n\n                if (!componentName) {\n                    throw new Error('No component name specified');\n                }\n\n                var loadingOperationId = currentLoadingOperationId = ++componentLoadingOperationUniqueId;\n                ko.components.get(componentName, function(componentDefinition) {\n                    // If this is not the current load operation for this element, ignore it.\n                    if (currentLoadingOperationId !== loadingOperationId) {\n                        return;\n                    }\n\n                    // Clean up previous state\n                    disposeAssociatedComponentViewModel();\n\n                    // Instantiate and bind new component. Implicitly this cleans any old DOM nodes.\n                    if (!componentDefinition) {\n                        throw new Error('Unknown component \\'' + componentName + '\\'');\n                    }\n                    cloneTemplateIntoElement(componentName, componentDefinition, element);\n                    var componentViewModel = createViewModel(componentDefinition, element, originalChildNodes, componentParams),\n                        childBindingContext = bindingContext['createChildContext'](componentViewModel, /* dataItemAlias */ undefined, function(ctx) {\n                            ctx['$component'] = componentViewModel;\n                            ctx['$componentTemplateNodes'] = originalChildNodes;\n                        });\n                    currentViewModel = componentViewModel;\n                    ko.applyBindingsToDescendants(childBindingContext, element);\n                });\n            }, null, { disposeWhenNodeIsRemoved: element });\n\n            return { 'controlsDescendantBindings': true };\n        }\n    };\n\n    ko.virtualElements.allowedBindings['component'] = true;\n\n    function cloneTemplateIntoElement(componentName, componentDefinition, element) {\n        var template = componentDefinition['template'];\n        if (!template) {\n            throw new Error('Component \\'' + componentName + '\\' has no template');\n        }\n\n        var clonedNodesArray = ko.utils.cloneNodes(template);\n        ko.virtualElements.setDomNodeChildren(element, clonedNodesArray);\n    }\n\n    function createViewModel(componentDefinition, element, originalChildNodes, componentParams) {\n        var componentViewModelFactory = componentDefinition['createViewModel'];\n        return componentViewModelFactory\n            ? componentViewModelFactory.call(componentDefinition, componentParams, { 'element': element, 'templateNodes': originalChildNodes })\n            : componentParams; // Template-only component\n    }\n\n})();\nvar attrHtmlToJavascriptMap = { 'class': 'className', 'for': 'htmlFor' };\nko.bindingHandlers['attr'] = {\n    'update': function(element, valueAccessor, allBindings) {\n        var value = ko.utils.unwrapObservable(valueAccessor()) || {};\n        ko.utils.objectForEach(value, function(attrName, attrValue) {\n            attrValue = ko.utils.unwrapObservable(attrValue);\n\n            // To cover cases like \"attr: { checked:someProp }\", we want to remove the attribute entirely\n            // when someProp is a \"no value\"-like value (strictly null, false, or undefined)\n            // (because the absence of the \"checked\" attr is how to mark an element as not checked, etc.)\n            var toRemove = (attrValue === false) || (attrValue === null) || (attrValue === undefined);\n            if (toRemove)\n                element.removeAttribute(attrName);\n\n            // In IE <= 7 and IE8 Quirks Mode, you have to use the Javascript property name instead of the\n            // HTML attribute name for certain attributes. IE8 Standards Mode supports the correct behavior,\n            // but instead of figuring out the mode, we'll just set the attribute through the Javascript\n            // property for IE <= 8.\n            if (ko.utils.ieVersion <= 8 && attrName in attrHtmlToJavascriptMap) {\n                attrName = attrHtmlToJavascriptMap[attrName];\n                if (toRemove)\n                    element.removeAttribute(attrName);\n                else\n                    element[attrName] = attrValue;\n            } else if (!toRemove) {\n                element.setAttribute(attrName, attrValue.toString());\n            }\n\n            // Treat \"name\" specially - although you can think of it as an attribute, it also needs\n            // special handling on older versions of IE (https://github.com/SteveSanderson/knockout/pull/333)\n            // Deliberately being case-sensitive here because XHTML would regard \"Name\" as a different thing\n            // entirely, and there's no strong reason to allow for such casing in HTML.\n            if (attrName === \"name\") {\n                ko.utils.setElementName(element, toRemove ? \"\" : attrValue.toString());\n            }\n        });\n    }\n};\n(function() {\n\nko.bindingHandlers['checked'] = {\n    'after': ['value', 'attr'],\n    'init': function (element, valueAccessor, allBindings) {\n        var checkedValue = ko.pureComputed(function() {\n            // Treat \"value\" like \"checkedValue\" when it is included with \"checked\" binding\n            if (allBindings['has']('checkedValue')) {\n                return ko.utils.unwrapObservable(allBindings.get('checkedValue'));\n            } else if (allBindings['has']('value')) {\n                return ko.utils.unwrapObservable(allBindings.get('value'));\n            }\n\n            return element.value;\n        });\n\n        function updateModel() {\n            // This updates the model value from the view value.\n            // It runs in response to DOM events (click) and changes in checkedValue.\n            var isChecked = element.checked,\n                elemValue = useCheckedValue ? checkedValue() : isChecked;\n\n            // When we're first setting up this computed, don't change any model state.\n            if (ko.computedContext.isInitial()) {\n                return;\n            }\n\n            // We can ignore unchecked radio buttons, because some other radio\n            // button will be getting checked, and that one can take care of updating state.\n            if (isRadio && !isChecked) {\n                return;\n            }\n\n            var modelValue = ko.dependencyDetection.ignore(valueAccessor);\n            if (valueIsArray) {\n                var writableValue = rawValueIsNonArrayObservable ? modelValue.peek() : modelValue;\n                if (oldElemValue !== elemValue) {\n                    // When we're responding to the checkedValue changing, and the element is\n                    // currently checked, replace the old elem value with the new elem value\n                    // in the model array.\n                    if (isChecked) {\n                        ko.utils.addOrRemoveItem(writableValue, elemValue, true);\n                        ko.utils.addOrRemoveItem(writableValue, oldElemValue, false);\n                    }\n\n                    oldElemValue = elemValue;\n                } else {\n                    // When we're responding to the user having checked/unchecked a checkbox,\n                    // add/remove the element value to the model array.\n                    ko.utils.addOrRemoveItem(writableValue, elemValue, isChecked);\n                }\n                if (rawValueIsNonArrayObservable && ko.isWriteableObservable(modelValue)) {\n                    modelValue(writableValue);\n                }\n            } else {\n                ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'checked', elemValue, true);\n            }\n        };\n\n        function updateView() {\n            // This updates the view value from the model value.\n            // It runs in response to changes in the bound (checked) value.\n            var modelValue = ko.utils.unwrapObservable(valueAccessor());\n\n            if (valueIsArray) {\n                // When a checkbox is bound to an array, being checked represents its value being present in that array\n                element.checked = ko.utils.arrayIndexOf(modelValue, checkedValue()) >= 0;\n            } else if (isCheckbox) {\n                // When a checkbox is bound to any other value (not an array), being checked represents the value being trueish\n                element.checked = modelValue;\n            } else {\n                // For radio buttons, being checked means that the radio button's value corresponds to the model value\n                element.checked = (checkedValue() === modelValue);\n            }\n        };\n\n        var isCheckbox = element.type == \"checkbox\",\n            isRadio = element.type == \"radio\";\n\n        // Only bind to check boxes and radio buttons\n        if (!isCheckbox && !isRadio) {\n            return;\n        }\n\n        var rawValue = valueAccessor(),\n            valueIsArray = isCheckbox && (ko.utils.unwrapObservable(rawValue) instanceof Array),\n            rawValueIsNonArrayObservable = !(valueIsArray && rawValue.push && rawValue.splice),\n            oldElemValue = valueIsArray ? checkedValue() : undefined,\n            useCheckedValue = isRadio || valueIsArray;\n\n        // IE 6 won't allow radio buttons to be selected unless they have a name\n        if (isRadio && !element.name)\n            ko.bindingHandlers['uniqueName']['init'](element, function() { return true });\n\n        // Set up two computeds to update the binding:\n\n        // The first responds to changes in the checkedValue value and to element clicks\n        ko.computed(updateModel, null, { disposeWhenNodeIsRemoved: element });\n        ko.utils.registerEventHandler(element, \"click\", updateModel);\n\n        // The second responds to changes in the model value (the one associated with the checked binding)\n        ko.computed(updateView, null, { disposeWhenNodeIsRemoved: element });\n\n        rawValue = undefined;\n    }\n};\nko.expressionRewriting.twoWayBindings['checked'] = true;\n\nko.bindingHandlers['checkedValue'] = {\n    'update': function (element, valueAccessor) {\n        element.value = ko.utils.unwrapObservable(valueAccessor());\n    }\n};\n\n})();var classesWrittenByBindingKey = '__ko__cssValue';\nko.bindingHandlers['css'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        if (value !== null && typeof value == \"object\") {\n            ko.utils.objectForEach(value, function(className, shouldHaveClass) {\n                shouldHaveClass = ko.utils.unwrapObservable(shouldHaveClass);\n                ko.utils.toggleDomNodeCssClass(element, className, shouldHaveClass);\n            });\n        } else {\n            value = ko.utils.stringTrim(String(value || '')); // Make sure we don't try to store or set a non-string value\n            ko.utils.toggleDomNodeCssClass(element, element[classesWrittenByBindingKey], false);\n            element[classesWrittenByBindingKey] = value;\n            ko.utils.toggleDomNodeCssClass(element, value, true);\n        }\n    }\n};\nko.bindingHandlers['enable'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        if (value && element.disabled)\n            element.removeAttribute(\"disabled\");\n        else if ((!value) && (!element.disabled))\n            element.disabled = true;\n    }\n};\n\nko.bindingHandlers['disable'] = {\n    'update': function (element, valueAccessor) {\n        ko.bindingHandlers['enable']['update'](element, function() { return !ko.utils.unwrapObservable(valueAccessor()) });\n    }\n};\n// For certain common events (currently just 'click'), allow a simplified data-binding syntax\n// e.g. click:handler instead of the usual full-length event:{click:handler}\nfunction makeEventHandlerShortcut(eventName) {\n    ko.bindingHandlers[eventName] = {\n        'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n            var newValueAccessor = function () {\n                var result = {};\n                result[eventName] = valueAccessor();\n                return result;\n            };\n            return ko.bindingHandlers['event']['init'].call(this, element, newValueAccessor, allBindings, viewModel, bindingContext);\n        }\n    }\n}\n\nko.bindingHandlers['event'] = {\n    'init' : function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        var eventsToHandle = valueAccessor() || {};\n        ko.utils.objectForEach(eventsToHandle, function(eventName) {\n            if (typeof eventName == \"string\") {\n                ko.utils.registerEventHandler(element, eventName, function (event) {\n                    var handlerReturnValue;\n                    var handlerFunction = valueAccessor()[eventName];\n                    if (!handlerFunction)\n                        return;\n\n                    try {\n                        // Take all the event args, and prefix with the viewmodel\n                        var argsForHandler = ko.utils.makeArray(arguments);\n                        viewModel = bindingContext['$data'];\n                        argsForHandler.unshift(viewModel);\n                        handlerReturnValue = handlerFunction.apply(viewModel, argsForHandler);\n                    } finally {\n                        if (handlerReturnValue !== true) { // Normally we want to prevent default action. Developer can override this be explicitly returning true.\n                            if (event.preventDefault)\n                                event.preventDefault();\n                            else\n                                event.returnValue = false;\n                        }\n                    }\n\n                    var bubble = allBindings.get(eventName + 'Bubble') !== false;\n                    if (!bubble) {\n                        event.cancelBubble = true;\n                        if (event.stopPropagation)\n                            event.stopPropagation();\n                    }\n                });\n            }\n        });\n    }\n};\n// \"foreach: someExpression\" is equivalent to \"template: { foreach: someExpression }\"\n// \"foreach: { data: someExpression, afterAdd: myfn }\" is equivalent to \"template: { foreach: someExpression, afterAdd: myfn }\"\nko.bindingHandlers['foreach'] = {\n    makeTemplateValueAccessor: function(valueAccessor) {\n        return function() {\n            var modelValue = valueAccessor(),\n                unwrappedValue = ko.utils.peekObservable(modelValue);    // Unwrap without setting a dependency here\n\n            // If unwrappedValue is the array, pass in the wrapped value on its own\n            // The value will be unwrapped and tracked within the template binding\n            // (See https://github.com/SteveSanderson/knockout/issues/523)\n            if ((!unwrappedValue) || typeof unwrappedValue.length == \"number\")\n                return { 'foreach': modelValue, 'templateEngine': ko.nativeTemplateEngine.instance };\n\n            // If unwrappedValue.data is the array, preserve all relevant options and unwrap again value so we get updates\n            ko.utils.unwrapObservable(modelValue);\n            return {\n                'foreach': unwrappedValue['data'],\n                'as': unwrappedValue['as'],\n                'includeDestroyed': unwrappedValue['includeDestroyed'],\n                'afterAdd': unwrappedValue['afterAdd'],\n                'beforeRemove': unwrappedValue['beforeRemove'],\n                'afterRender': unwrappedValue['afterRender'],\n                'beforeMove': unwrappedValue['beforeMove'],\n                'afterMove': unwrappedValue['afterMove'],\n                'templateEngine': ko.nativeTemplateEngine.instance\n            };\n        };\n    },\n    'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n        return ko.bindingHandlers['template']['init'](element, ko.bindingHandlers['foreach'].makeTemplateValueAccessor(valueAccessor));\n    },\n    'update': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n        return ko.bindingHandlers['template']['update'](element, ko.bindingHandlers['foreach'].makeTemplateValueAccessor(valueAccessor), allBindings, viewModel, bindingContext);\n    }\n};\nko.expressionRewriting.bindingRewriteValidators['foreach'] = false; // Can't rewrite control flow bindings\nko.virtualElements.allowedBindings['foreach'] = true;\nvar hasfocusUpdatingProperty = '__ko_hasfocusUpdating';\nvar hasfocusLastValue = '__ko_hasfocusLastValue';\nko.bindingHandlers['hasfocus'] = {\n    'init': function(element, valueAccessor, allBindings) {\n        var handleElementFocusChange = function(isFocused) {\n            // Where possible, ignore which event was raised and determine focus state using activeElement,\n            // as this avoids phantom focus/blur events raised when changing tabs in modern browsers.\n            // However, not all KO-targeted browsers (Firefox 2) support activeElement. For those browsers,\n            // prevent a loss of focus when changing tabs/windows by setting a flag that prevents hasfocus\n            // from calling 'blur()' on the element when it loses focus.\n            // Discussion at https://github.com/SteveSanderson/knockout/pull/352\n            element[hasfocusUpdatingProperty] = true;\n            var ownerDoc = element.ownerDocument;\n            if (\"activeElement\" in ownerDoc) {\n                var active;\n                try {\n                    active = ownerDoc.activeElement;\n                } catch(e) {\n                    // IE9 throws if you access activeElement during page load (see issue #703)\n                    active = ownerDoc.body;\n                }\n                isFocused = (active === element);\n            }\n            var modelValue = valueAccessor();\n            ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'hasfocus', isFocused, true);\n\n            //cache the latest value, so we can avoid unnecessarily calling focus/blur in the update function\n            element[hasfocusLastValue] = isFocused;\n            element[hasfocusUpdatingProperty] = false;\n        };\n        var handleElementFocusIn = handleElementFocusChange.bind(null, true);\n        var handleElementFocusOut = handleElementFocusChange.bind(null, false);\n\n        ko.utils.registerEventHandler(element, \"focus\", handleElementFocusIn);\n        ko.utils.registerEventHandler(element, \"focusin\", handleElementFocusIn); // For IE\n        ko.utils.registerEventHandler(element, \"blur\",  handleElementFocusOut);\n        ko.utils.registerEventHandler(element, \"focusout\",  handleElementFocusOut); // For IE\n    },\n    'update': function(element, valueAccessor) {\n        var value = !!ko.utils.unwrapObservable(valueAccessor());\n\n        if (!element[hasfocusUpdatingProperty] && element[hasfocusLastValue] !== value) {\n            value ? element.focus() : element.blur();\n\n            // In IE, the blur method doesn't always cause the element to lose focus (for example, if the window is not in focus).\n            // Setting focus to the body element does seem to be reliable in IE, but should only be used if we know that the current\n            // element was focused already.\n            if (!value && element[hasfocusLastValue]) {\n                element.ownerDocument.body.focus();\n            }\n\n            // For IE, which doesn't reliably fire \"focus\" or \"blur\" events synchronously\n            ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, value ? \"focusin\" : \"focusout\"]);\n        }\n    }\n};\nko.expressionRewriting.twoWayBindings['hasfocus'] = true;\n\nko.bindingHandlers['hasFocus'] = ko.bindingHandlers['hasfocus']; // Make \"hasFocus\" an alias\nko.expressionRewriting.twoWayBindings['hasFocus'] = true;\nko.bindingHandlers['html'] = {\n    'init': function() {\n        // Prevent binding on the dynamically-injected HTML (as developers are unlikely to expect that, and it has security implications)\n        return { 'controlsDescendantBindings': true };\n    },\n    'update': function (element, valueAccessor) {\n        // setHtml will unwrap the value if needed\n        ko.utils.setHtml(element, valueAccessor());\n    }\n};\n// Makes a binding like with or if\nfunction makeWithIfBinding(bindingKey, isWith, isNot, makeContextCallback) {\n    ko.bindingHandlers[bindingKey] = {\n        'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n            var didDisplayOnLastUpdate,\n                savedNodes;\n            ko.computed(function() {\n                var rawValue = valueAccessor(),\n                    dataValue = ko.utils.unwrapObservable(rawValue),\n                    shouldDisplay = !isNot !== !dataValue, // equivalent to isNot ? !dataValue : !!dataValue\n                    isFirstRender = !savedNodes,\n                    needsRefresh = isFirstRender || isWith || (shouldDisplay !== didDisplayOnLastUpdate);\n\n                if (needsRefresh) {\n                    // Save a copy of the inner nodes on the initial update, but only if we have dependencies.\n                    if (isFirstRender && ko.computedContext.getDependenciesCount()) {\n                        savedNodes = ko.utils.cloneNodes(ko.virtualElements.childNodes(element), true /* shouldCleanNodes */);\n                    }\n\n                    if (shouldDisplay) {\n                        if (!isFirstRender) {\n                            ko.virtualElements.setDomNodeChildren(element, ko.utils.cloneNodes(savedNodes));\n                        }\n                        ko.applyBindingsToDescendants(makeContextCallback ? makeContextCallback(bindingContext, rawValue) : bindingContext, element);\n                    } else {\n                        ko.virtualElements.emptyNode(element);\n                    }\n\n                    didDisplayOnLastUpdate = shouldDisplay;\n                }\n            }, null, { disposeWhenNodeIsRemoved: element });\n            return { 'controlsDescendantBindings': true };\n        }\n    };\n    ko.expressionRewriting.bindingRewriteValidators[bindingKey] = false; // Can't rewrite control flow bindings\n    ko.virtualElements.allowedBindings[bindingKey] = true;\n}\n\n// Construct the actual binding handlers\nmakeWithIfBinding('if');\nmakeWithIfBinding('ifnot', false /* isWith */, true /* isNot */);\nmakeWithIfBinding('with', true /* isWith */, false /* isNot */,\n    function(bindingContext, dataValue) {\n        return bindingContext.createStaticChildContext(dataValue);\n    }\n);\nvar captionPlaceholder = {};\nko.bindingHandlers['options'] = {\n    'init': function(element) {\n        if (ko.utils.tagNameLower(element) !== \"select\")\n            throw new Error(\"options binding applies only to SELECT elements\");\n\n        // Remove all existing <option>s.\n        while (element.length > 0) {\n            element.remove(0);\n        }\n\n        // Ensures that the binding processor doesn't try to bind the options\n        return { 'controlsDescendantBindings': true };\n    },\n    'update': function (element, valueAccessor, allBindings) {\n        function selectedOptions() {\n            return ko.utils.arrayFilter(element.options, function (node) { return node.selected; });\n        }\n\n        var selectWasPreviouslyEmpty = element.length == 0,\n            multiple = element.multiple,\n            previousScrollTop = (!selectWasPreviouslyEmpty && multiple) ? element.scrollTop : null,\n            unwrappedArray = ko.utils.unwrapObservable(valueAccessor()),\n            valueAllowUnset = allBindings.get('valueAllowUnset') && allBindings['has']('value'),\n            includeDestroyed = allBindings.get('optionsIncludeDestroyed'),\n            arrayToDomNodeChildrenOptions = {},\n            captionValue,\n            filteredArray,\n            previousSelectedValues = [];\n\n        if (!valueAllowUnset) {\n            if (multiple) {\n                previousSelectedValues = ko.utils.arrayMap(selectedOptions(), ko.selectExtensions.readValue);\n            } else if (element.selectedIndex >= 0) {\n                previousSelectedValues.push(ko.selectExtensions.readValue(element.options[element.selectedIndex]));\n            }\n        }\n\n        if (unwrappedArray) {\n            if (typeof unwrappedArray.length == \"undefined\") // Coerce single value into array\n                unwrappedArray = [unwrappedArray];\n\n            // Filter out any entries marked as destroyed\n            filteredArray = ko.utils.arrayFilter(unwrappedArray, function(item) {\n                return includeDestroyed || item === undefined || item === null || !ko.utils.unwrapObservable(item['_destroy']);\n            });\n\n            // If caption is included, add it to the array\n            if (allBindings['has']('optionsCaption')) {\n                captionValue = ko.utils.unwrapObservable(allBindings.get('optionsCaption'));\n                // If caption value is null or undefined, don't show a caption\n                if (captionValue !== null && captionValue !== undefined) {\n                    filteredArray.unshift(captionPlaceholder);\n                }\n            }\n        } else {\n            // If a falsy value is provided (e.g. null), we'll simply empty the select element\n        }\n\n        function applyToObject(object, predicate, defaultValue) {\n            var predicateType = typeof predicate;\n            if (predicateType == \"function\")    // Given a function; run it against the data value\n                return predicate(object);\n            else if (predicateType == \"string\") // Given a string; treat it as a property name on the data value\n                return object[predicate];\n            else                                // Given no optionsText arg; use the data value itself\n                return defaultValue;\n        }\n\n        // The following functions can run at two different times:\n        // The first is when the whole array is being updated directly from this binding handler.\n        // The second is when an observable value for a specific array entry is updated.\n        // oldOptions will be empty in the first case, but will be filled with the previously generated option in the second.\n        var itemUpdate = false;\n        function optionForArrayItem(arrayEntry, index, oldOptions) {\n            if (oldOptions.length) {\n                previousSelectedValues = !valueAllowUnset && oldOptions[0].selected ? [ ko.selectExtensions.readValue(oldOptions[0]) ] : [];\n                itemUpdate = true;\n            }\n            var option = element.ownerDocument.createElement(\"option\");\n            if (arrayEntry === captionPlaceholder) {\n                ko.utils.setTextContent(option, allBindings.get('optionsCaption'));\n                ko.selectExtensions.writeValue(option, undefined);\n            } else {\n                // Apply a value to the option element\n                var optionValue = applyToObject(arrayEntry, allBindings.get('optionsValue'), arrayEntry);\n                ko.selectExtensions.writeValue(option, ko.utils.unwrapObservable(optionValue));\n\n                // Apply some text to the option element\n                var optionText = applyToObject(arrayEntry, allBindings.get('optionsText'), optionValue);\n                ko.utils.setTextContent(option, optionText);\n            }\n            return [option];\n        }\n\n        // By using a beforeRemove callback, we delay the removal until after new items are added. This fixes a selection\n        // problem in IE<=8 and Firefox. See https://github.com/knockout/knockout/issues/1208\n        arrayToDomNodeChildrenOptions['beforeRemove'] =\n            function (option) {\n                element.removeChild(option);\n            };\n\n        function setSelectionCallback(arrayEntry, newOptions) {\n            if (itemUpdate && valueAllowUnset) {\n                // The model value is authoritative, so make sure its value is the one selected\n                // There is no need to use dependencyDetection.ignore since setDomNodeChildrenFromArrayMapping does so already.\n                ko.selectExtensions.writeValue(element, ko.utils.unwrapObservable(allBindings.get('value')), true /* allowUnset */);\n            } else if (previousSelectedValues.length) {\n                // IE6 doesn't like us to assign selection to OPTION nodes before they're added to the document.\n                // That's why we first added them without selection. Now it's time to set the selection.\n                var isSelected = ko.utils.arrayIndexOf(previousSelectedValues, ko.selectExtensions.readValue(newOptions[0])) >= 0;\n                ko.utils.setOptionNodeSelectionState(newOptions[0], isSelected);\n\n                // If this option was changed from being selected during a single-item update, notify the change\n                if (itemUpdate && !isSelected) {\n                    ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, \"change\"]);\n                }\n            }\n        }\n\n        var callback = setSelectionCallback;\n        if (allBindings['has']('optionsAfterRender') && typeof allBindings.get('optionsAfterRender') == \"function\") {\n            callback = function(arrayEntry, newOptions) {\n                setSelectionCallback(arrayEntry, newOptions);\n                ko.dependencyDetection.ignore(allBindings.get('optionsAfterRender'), null, [newOptions[0], arrayEntry !== captionPlaceholder ? arrayEntry : undefined]);\n            }\n        }\n\n        ko.utils.setDomNodeChildrenFromArrayMapping(element, filteredArray, optionForArrayItem, arrayToDomNodeChildrenOptions, callback);\n\n        ko.dependencyDetection.ignore(function () {\n            if (valueAllowUnset) {\n                // The model value is authoritative, so make sure its value is the one selected\n                ko.selectExtensions.writeValue(element, ko.utils.unwrapObservable(allBindings.get('value')), true /* allowUnset */);\n            } else {\n                // Determine if the selection has changed as a result of updating the options list\n                var selectionChanged;\n                if (multiple) {\n                    // For a multiple-select box, compare the new selection count to the previous one\n                    // But if nothing was selected before, the selection can't have changed\n                    selectionChanged = previousSelectedValues.length && selectedOptions().length < previousSelectedValues.length;\n                } else {\n                    // For a single-select box, compare the current value to the previous value\n                    // But if nothing was selected before or nothing is selected now, just look for a change in selection\n                    selectionChanged = (previousSelectedValues.length && element.selectedIndex >= 0)\n                        ? (ko.selectExtensions.readValue(element.options[element.selectedIndex]) !== previousSelectedValues[0])\n                        : (previousSelectedValues.length || element.selectedIndex >= 0);\n                }\n\n                // Ensure consistency between model value and selected option.\n                // If the dropdown was changed so that selection is no longer the same,\n                // notify the value or selectedOptions binding.\n                if (selectionChanged) {\n                    ko.utils.triggerEvent(element, \"change\");\n                }\n            }\n        });\n\n        // Workaround for IE bug\n        ko.utils.ensureSelectElementIsRenderedCorrectly(element);\n\n        if (previousScrollTop && Math.abs(previousScrollTop - element.scrollTop) > 20)\n            element.scrollTop = previousScrollTop;\n    }\n};\nko.bindingHandlers['options'].optionValueDomDataKey = ko.utils.domData.nextKey();\nko.bindingHandlers['selectedOptions'] = {\n    'after': ['options', 'foreach'],\n    'init': function (element, valueAccessor, allBindings) {\n        ko.utils.registerEventHandler(element, \"change\", function () {\n            var value = valueAccessor(), valueToWrite = [];\n            ko.utils.arrayForEach(element.getElementsByTagName(\"option\"), function(node) {\n                if (node.selected)\n                    valueToWrite.push(ko.selectExtensions.readValue(node));\n            });\n            ko.expressionRewriting.writeValueToProperty(value, allBindings, 'selectedOptions', valueToWrite);\n        });\n    },\n    'update': function (element, valueAccessor) {\n        if (ko.utils.tagNameLower(element) != \"select\")\n            throw new Error(\"values binding applies only to SELECT elements\");\n\n        var newValue = ko.utils.unwrapObservable(valueAccessor()),\n            previousScrollTop = element.scrollTop;\n\n        if (newValue && typeof newValue.length == \"number\") {\n            ko.utils.arrayForEach(element.getElementsByTagName(\"option\"), function(node) {\n                var isSelected = ko.utils.arrayIndexOf(newValue, ko.selectExtensions.readValue(node)) >= 0;\n                if (node.selected != isSelected) {      // This check prevents flashing of the select element in IE\n                    ko.utils.setOptionNodeSelectionState(node, isSelected);\n                }\n            });\n        }\n\n        element.scrollTop = previousScrollTop;\n    }\n};\nko.expressionRewriting.twoWayBindings['selectedOptions'] = true;\nko.bindingHandlers['style'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor() || {});\n        ko.utils.objectForEach(value, function(styleName, styleValue) {\n            styleValue = ko.utils.unwrapObservable(styleValue);\n\n            if (styleValue === null || styleValue === undefined || styleValue === false) {\n                // Empty string removes the value, whereas null/undefined have no effect\n                styleValue = \"\";\n            }\n\n            element.style[styleName] = styleValue;\n        });\n    }\n};\nko.bindingHandlers['submit'] = {\n    'init': function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        if (typeof valueAccessor() != \"function\")\n            throw new Error(\"The value for a submit binding must be a function\");\n        ko.utils.registerEventHandler(element, \"submit\", function (event) {\n            var handlerReturnValue;\n            var value = valueAccessor();\n            try { handlerReturnValue = value.call(bindingContext['$data'], element); }\n            finally {\n                if (handlerReturnValue !== true) { // Normally we want to prevent default action. Developer can override this be explicitly returning true.\n                    if (event.preventDefault)\n                        event.preventDefault();\n                    else\n                        event.returnValue = false;\n                }\n            }\n        });\n    }\n};\nko.bindingHandlers['text'] = {\n    'init': function() {\n        // Prevent binding on the dynamically-injected text node (as developers are unlikely to expect that, and it has security implications).\n        // It should also make things faster, as we no longer have to consider whether the text node might be bindable.\n        return { 'controlsDescendantBindings': true };\n    },\n    'update': function (element, valueAccessor) {\n        ko.utils.setTextContent(element, valueAccessor());\n    }\n};\nko.virtualElements.allowedBindings['text'] = true;\n(function () {\n\nif (window && window.navigator) {\n    var parseVersion = function (matches) {\n        if (matches) {\n            return parseFloat(matches[1]);\n        }\n    };\n\n    // Detect various browser versions because some old versions don't fully support the 'input' event\n    var operaVersion = window.opera && window.opera.version && parseInt(window.opera.version()),\n        userAgent = window.navigator.userAgent,\n        safariVersion = parseVersion(userAgent.match(/^(?:(?!chrome).)*version\\/([^ ]*) safari/i)),\n        firefoxVersion = parseVersion(userAgent.match(/Firefox\\/([^ ]*)/));\n}\n\n// IE 8 and 9 have bugs that prevent the normal events from firing when the value changes.\n// But it does fire the 'selectionchange' event on many of those, presumably because the\n// cursor is moving and that counts as the selection changing. The 'selectionchange' event is\n// fired at the document level only and doesn't directly indicate which element changed. We\n// set up just one event handler for the document and use 'activeElement' to determine which\n// element was changed.\nif (ko.utils.ieVersion < 10) {\n    var selectionChangeRegisteredName = ko.utils.domData.nextKey(),\n        selectionChangeHandlerName = ko.utils.domData.nextKey();\n    var selectionChangeHandler = function(event) {\n        var target = this.activeElement,\n            handler = target && ko.utils.domData.get(target, selectionChangeHandlerName);\n        if (handler) {\n            handler(event);\n        }\n    };\n    var registerForSelectionChangeEvent = function (element, handler) {\n        var ownerDoc = element.ownerDocument;\n        if (!ko.utils.domData.get(ownerDoc, selectionChangeRegisteredName)) {\n            ko.utils.domData.set(ownerDoc, selectionChangeRegisteredName, true);\n            ko.utils.registerEventHandler(ownerDoc, 'selectionchange', selectionChangeHandler);\n        }\n        ko.utils.domData.set(element, selectionChangeHandlerName, handler);\n    };\n}\n\nko.bindingHandlers['textInput'] = {\n    'init': function (element, valueAccessor, allBindings) {\n\n        var previousElementValue = element.value,\n            timeoutHandle,\n            elementValueBeforeEvent;\n\n        var updateModel = function (event) {\n            clearTimeout(timeoutHandle);\n            elementValueBeforeEvent = timeoutHandle = undefined;\n\n            var elementValue = element.value;\n            if (previousElementValue !== elementValue) {\n                // Provide a way for tests to know exactly which event was processed\n                if (DEBUG && event) element['_ko_textInputProcessedEvent'] = event.type;\n                previousElementValue = elementValue;\n                ko.expressionRewriting.writeValueToProperty(valueAccessor(), allBindings, 'textInput', elementValue);\n            }\n        };\n\n        var deferUpdateModel = function (event) {\n            if (!timeoutHandle) {\n                // The elementValueBeforeEvent variable is set *only* during the brief gap between an\n                // event firing and the updateModel function running. This allows us to ignore model\n                // updates that are from the previous state of the element, usually due to techniques\n                // such as rateLimit. Such updates, if not ignored, can cause keystrokes to be lost.\n                elementValueBeforeEvent = element.value;\n                var handler = DEBUG ? updateModel.bind(element, {type: event.type}) : updateModel;\n                timeoutHandle = ko.utils.setTimeout(handler, 4);\n            }\n        };\n\n        // IE9 will mess up the DOM if you handle events synchronously which results in DOM changes (such as other bindings);\n        // so we'll make sure all updates are asynchronous\n        var ieUpdateModel = ko.utils.ieVersion == 9 ? deferUpdateModel : updateModel;\n\n        var updateView = function () {\n            var modelValue = ko.utils.unwrapObservable(valueAccessor());\n\n            if (modelValue === null || modelValue === undefined) {\n                modelValue = '';\n            }\n\n            if (elementValueBeforeEvent !== undefined && modelValue === elementValueBeforeEvent) {\n                ko.utils.setTimeout(updateView, 4);\n                return;\n            }\n\n            // Update the element only if the element and model are different. On some browsers, updating the value\n            // will move the cursor to the end of the input, which would be bad while the user is typing.\n            if (element.value !== modelValue) {\n                previousElementValue = modelValue;  // Make sure we ignore events (propertychange) that result from updating the value\n                element.value = modelValue;\n            }\n        };\n\n        var onEvent = function (event, handler) {\n            ko.utils.registerEventHandler(element, event, handler);\n        };\n\n        if (DEBUG && ko.bindingHandlers['textInput']['_forceUpdateOn']) {\n            // Provide a way for tests to specify exactly which events are bound\n            ko.utils.arrayForEach(ko.bindingHandlers['textInput']['_forceUpdateOn'], function(eventName) {\n                if (eventName.slice(0,5) == 'after') {\n                    onEvent(eventName.slice(5), deferUpdateModel);\n                } else {\n                    onEvent(eventName, updateModel);\n                }\n            });\n        } else {\n            if (ko.utils.ieVersion < 10) {\n                // Internet Explorer <= 8 doesn't support the 'input' event, but does include 'propertychange' that fires whenever\n                // any property of an element changes. Unlike 'input', it also fires if a property is changed from JavaScript code,\n                // but that's an acceptable compromise for this binding. IE 9 does support 'input', but since it doesn't fire it\n                // when using autocomplete, we'll use 'propertychange' for it also.\n                onEvent('propertychange', function(event) {\n                    if (event.propertyName === 'value') {\n                        ieUpdateModel(event);\n                    }\n                });\n\n                if (ko.utils.ieVersion == 8) {\n                    // IE 8 has a bug where it fails to fire 'propertychange' on the first update following a value change from\n                    // JavaScript code. It also doesn't fire if you clear the entire value. To fix this, we bind to the following\n                    // events too.\n                    onEvent('keyup', updateModel);      // A single keystoke\n                    onEvent('keydown', updateModel);    // The first character when a key is held down\n                }\n                if (ko.utils.ieVersion >= 8) {\n                    // Internet Explorer 9 doesn't fire the 'input' event when deleting text, including using\n                    // the backspace, delete, or ctrl-x keys, clicking the 'x' to clear the input, dragging text\n                    // out of the field, and cutting or deleting text using the context menu. 'selectionchange'\n                    // can detect all of those except dragging text out of the field, for which we use 'dragend'.\n                    // These are also needed in IE8 because of the bug described above.\n                    registerForSelectionChangeEvent(element, ieUpdateModel);  // 'selectionchange' covers cut, paste, drop, delete, etc.\n                    onEvent('dragend', deferUpdateModel);\n                }\n            } else {\n                // All other supported browsers support the 'input' event, which fires whenever the content of the element is changed\n                // through the user interface.\n                onEvent('input', updateModel);\n\n                if (safariVersion < 5 && ko.utils.tagNameLower(element) === \"textarea\") {\n                    // Safari <5 doesn't fire the 'input' event for <textarea> elements (it does fire 'textInput'\n                    // but only when typing). So we'll just catch as much as we can with keydown, cut, and paste.\n                    onEvent('keydown', deferUpdateModel);\n                    onEvent('paste', deferUpdateModel);\n                    onEvent('cut', deferUpdateModel);\n                } else if (operaVersion < 11) {\n                    // Opera 10 doesn't always fire the 'input' event for cut, paste, undo & drop operations.\n                    // We can try to catch some of those using 'keydown'.\n                    onEvent('keydown', deferUpdateModel);\n                } else if (firefoxVersion < 4.0) {\n                    // Firefox <= 3.6 doesn't fire the 'input' event when text is filled in through autocomplete\n                    onEvent('DOMAutoComplete', updateModel);\n\n                    // Firefox <=3.5 doesn't fire the 'input' event when text is dropped into the input.\n                    onEvent('dragdrop', updateModel);       // <3.5\n                    onEvent('drop', updateModel);           // 3.5\n                }\n            }\n        }\n\n        // Bind to the change event so that we can catch programmatic updates of the value that fire this event.\n        onEvent('change', updateModel);\n\n        ko.computed(updateView, null, { disposeWhenNodeIsRemoved: element });\n    }\n};\nko.expressionRewriting.twoWayBindings['textInput'] = true;\n\n// textinput is an alias for textInput\nko.bindingHandlers['textinput'] = {\n    // preprocess is the only way to set up a full alias\n    'preprocess': function (value, name, addBinding) {\n        addBinding('textInput', value);\n    }\n};\n\n})();ko.bindingHandlers['uniqueName'] = {\n    'init': function (element, valueAccessor) {\n        if (valueAccessor()) {\n            var name = \"ko_unique_\" + (++ko.bindingHandlers['uniqueName'].currentIndex);\n            ko.utils.setElementName(element, name);\n        }\n    }\n};\nko.bindingHandlers['uniqueName'].currentIndex = 0;\nko.bindingHandlers['value'] = {\n    'after': ['options', 'foreach'],\n    'init': function (element, valueAccessor, allBindings) {\n        // If the value binding is placed on a radio/checkbox, then just pass through to checkedValue and quit\n        if (element.tagName.toLowerCase() == \"input\" && (element.type == \"checkbox\" || element.type == \"radio\")) {\n            ko.applyBindingAccessorsToNode(element, { 'checkedValue': valueAccessor });\n            return;\n        }\n\n        // Always catch \"change\" event; possibly other events too if asked\n        var eventsToCatch = [\"change\"];\n        var requestedEventsToCatch = allBindings.get(\"valueUpdate\");\n        var propertyChangedFired = false;\n        var elementValueBeforeEvent = null;\n\n        if (requestedEventsToCatch) {\n            if (typeof requestedEventsToCatch == \"string\") // Allow both individual event names, and arrays of event names\n                requestedEventsToCatch = [requestedEventsToCatch];\n            ko.utils.arrayPushAll(eventsToCatch, requestedEventsToCatch);\n            eventsToCatch = ko.utils.arrayGetDistinctValues(eventsToCatch);\n        }\n\n        var valueUpdateHandler = function() {\n            elementValueBeforeEvent = null;\n            propertyChangedFired = false;\n            var modelValue = valueAccessor();\n            var elementValue = ko.selectExtensions.readValue(element);\n            ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'value', elementValue);\n        }\n\n        // Workaround for https://github.com/SteveSanderson/knockout/issues/122\n        // IE doesn't fire \"change\" events on textboxes if the user selects a value from its autocomplete list\n        var ieAutoCompleteHackNeeded = ko.utils.ieVersion && element.tagName.toLowerCase() == \"input\" && element.type == \"text\"\n                                       && element.autocomplete != \"off\" && (!element.form || element.form.autocomplete != \"off\");\n        if (ieAutoCompleteHackNeeded && ko.utils.arrayIndexOf(eventsToCatch, \"propertychange\") == -1) {\n            ko.utils.registerEventHandler(element, \"propertychange\", function () { propertyChangedFired = true });\n            ko.utils.registerEventHandler(element, \"focus\", function () { propertyChangedFired = false });\n            ko.utils.registerEventHandler(element, \"blur\", function() {\n                if (propertyChangedFired) {\n                    valueUpdateHandler();\n                }\n            });\n        }\n\n        ko.utils.arrayForEach(eventsToCatch, function(eventName) {\n            // The syntax \"after<eventname>\" means \"run the handler asynchronously after the event\"\n            // This is useful, for example, to catch \"keydown\" events after the browser has updated the control\n            // (otherwise, ko.selectExtensions.readValue(this) will receive the control's value *before* the key event)\n            var handler = valueUpdateHandler;\n            if (ko.utils.stringStartsWith(eventName, \"after\")) {\n                handler = function() {\n                    // The elementValueBeforeEvent variable is non-null *only* during the brief gap between\n                    // a keyX event firing and the valueUpdateHandler running, which is scheduled to happen\n                    // at the earliest asynchronous opportunity. We store this temporary information so that\n                    // if, between keyX and valueUpdateHandler, the underlying model value changes separately,\n                    // we can overwrite that model value change with the value the user just typed. Otherwise,\n                    // techniques like rateLimit can trigger model changes at critical moments that will\n                    // override the user's inputs, causing keystrokes to be lost.\n                    elementValueBeforeEvent = ko.selectExtensions.readValue(element);\n                    ko.utils.setTimeout(valueUpdateHandler, 0);\n                };\n                eventName = eventName.substring(\"after\".length);\n            }\n            ko.utils.registerEventHandler(element, eventName, handler);\n        });\n\n        var updateFromModel = function () {\n            var newValue = ko.utils.unwrapObservable(valueAccessor());\n            var elementValue = ko.selectExtensions.readValue(element);\n\n            if (elementValueBeforeEvent !== null && newValue === elementValueBeforeEvent) {\n                ko.utils.setTimeout(updateFromModel, 0);\n                return;\n            }\n\n            var valueHasChanged = (newValue !== elementValue);\n\n            if (valueHasChanged) {\n                if (ko.utils.tagNameLower(element) === \"select\") {\n                    var allowUnset = allBindings.get('valueAllowUnset');\n                    var applyValueAction = function () {\n                        ko.selectExtensions.writeValue(element, newValue, allowUnset);\n                    };\n                    applyValueAction();\n\n                    if (!allowUnset && newValue !== ko.selectExtensions.readValue(element)) {\n                        // If you try to set a model value that can't be represented in an already-populated dropdown, reject that change,\n                        // because you're not allowed to have a model value that disagrees with a visible UI selection.\n                        ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, \"change\"]);\n                    } else {\n                        // Workaround for IE6 bug: It won't reliably apply values to SELECT nodes during the same execution thread\n                        // right after you've changed the set of OPTION nodes on it. So for that node type, we'll schedule a second thread\n                        // to apply the value as well.\n                        ko.utils.setTimeout(applyValueAction, 0);\n                    }\n                } else {\n                    ko.selectExtensions.writeValue(element, newValue);\n                }\n            }\n        };\n\n        ko.computed(updateFromModel, null, { disposeWhenNodeIsRemoved: element });\n    },\n    'update': function() {} // Keep for backwards compatibility with code that may have wrapped value binding\n};\nko.expressionRewriting.twoWayBindings['value'] = true;\nko.bindingHandlers['visible'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        var isCurrentlyVisible = !(element.style.display == \"none\");\n        if (value && !isCurrentlyVisible)\n            element.style.display = \"\";\n        else if ((!value) && isCurrentlyVisible)\n            element.style.display = \"none\";\n    }\n};\n// 'click' is just a shorthand for the usual full-length event:{click:handler}\nmakeEventHandlerShortcut('click');\n// If you want to make a custom template engine,\n//\n// [1] Inherit from this class (like ko.nativeTemplateEngine does)\n// [2] Override 'renderTemplateSource', supplying a function with this signature:\n//\n//        function (templateSource, bindingContext, options) {\n//            // - templateSource.text() is the text of the template you should render\n//            // - bindingContext.$data is the data you should pass into the template\n//            //   - you might also want to make bindingContext.$parent, bindingContext.$parents,\n//            //     and bindingContext.$root available in the template too\n//            // - options gives you access to any other properties set on \"data-bind: { template: options }\"\n//            // - templateDocument is the document object of the template\n//            //\n//            // Return value: an array of DOM nodes\n//        }\n//\n// [3] Override 'createJavaScriptEvaluatorBlock', supplying a function with this signature:\n//\n//        function (script) {\n//            // Return value: Whatever syntax means \"Evaluate the JavaScript statement 'script' and output the result\"\n//            //               For example, the jquery.tmpl template engine converts 'someScript' to '${ someScript }'\n//        }\n//\n//     This is only necessary if you want to allow data-bind attributes to reference arbitrary template variables.\n//     If you don't want to allow that, you can set the property 'allowTemplateRewriting' to false (like ko.nativeTemplateEngine does)\n//     and then you don't need to override 'createJavaScriptEvaluatorBlock'.\n\nko.templateEngine = function () { };\n\nko.templateEngine.prototype['renderTemplateSource'] = function (templateSource, bindingContext, options, templateDocument) {\n    throw new Error(\"Override renderTemplateSource\");\n};\n\nko.templateEngine.prototype['createJavaScriptEvaluatorBlock'] = function (script) {\n    throw new Error(\"Override createJavaScriptEvaluatorBlock\");\n};\n\nko.templateEngine.prototype['makeTemplateSource'] = function(template, templateDocument) {\n    // Named template\n    if (typeof template == \"string\") {\n        templateDocument = templateDocument || document;\n        var elem = templateDocument.getElementById(template);\n        if (!elem)\n            throw new Error(\"Cannot find template with ID \" + template);\n        return new ko.templateSources.domElement(elem);\n    } else if ((template.nodeType == 1) || (template.nodeType == 8)) {\n        // Anonymous template\n        return new ko.templateSources.anonymousTemplate(template);\n    } else\n        throw new Error(\"Unknown template type: \" + template);\n};\n\nko.templateEngine.prototype['renderTemplate'] = function (template, bindingContext, options, templateDocument) {\n    var templateSource = this['makeTemplateSource'](template, templateDocument);\n    return this['renderTemplateSource'](templateSource, bindingContext, options, templateDocument);\n};\n\nko.templateEngine.prototype['isTemplateRewritten'] = function (template, templateDocument) {\n    // Skip rewriting if requested\n    if (this['allowTemplateRewriting'] === false)\n        return true;\n    return this['makeTemplateSource'](template, templateDocument)['data'](\"isRewritten\");\n};\n\nko.templateEngine.prototype['rewriteTemplate'] = function (template, rewriterCallback, templateDocument) {\n    var templateSource = this['makeTemplateSource'](template, templateDocument);\n    var rewritten = rewriterCallback(templateSource['text']());\n    templateSource['text'](rewritten);\n    templateSource['data'](\"isRewritten\", true);\n};\n\nko.exportSymbol('templateEngine', ko.templateEngine);\n\nko.templateRewriting = (function () {\n    var memoizeDataBindingAttributeSyntaxRegex = /(<([a-z]+\\d*)(?:\\s+(?!data-bind\\s*=\\s*)[a-z0-9\\-]+(?:=(?:\\\"[^\\\"]*\\\"|\\'[^\\']*\\'|[^>]*))?)*\\s+)data-bind\\s*=\\s*([\"'])([\\s\\S]*?)\\3/gi;\n    var memoizeVirtualContainerBindingSyntaxRegex = /<!--\\s*ko\\b\\s*([\\s\\S]*?)\\s*-->/g;\n\n    function validateDataBindValuesForRewriting(keyValueArray) {\n        var allValidators = ko.expressionRewriting.bindingRewriteValidators;\n        for (var i = 0; i < keyValueArray.length; i++) {\n            var key = keyValueArray[i]['key'];\n            if (allValidators.hasOwnProperty(key)) {\n                var validator = allValidators[key];\n\n                if (typeof validator === \"function\") {\n                    var possibleErrorMessage = validator(keyValueArray[i]['value']);\n                    if (possibleErrorMessage)\n                        throw new Error(possibleErrorMessage);\n                } else if (!validator) {\n                    throw new Error(\"This template engine does not support the '\" + key + \"' binding within its templates\");\n                }\n            }\n        }\n    }\n\n    function constructMemoizedTagReplacement(dataBindAttributeValue, tagToRetain, nodeName, templateEngine) {\n        var dataBindKeyValueArray = ko.expressionRewriting.parseObjectLiteral(dataBindAttributeValue);\n        validateDataBindValuesForRewriting(dataBindKeyValueArray);\n        var rewrittenDataBindAttributeValue = ko.expressionRewriting.preProcessBindings(dataBindKeyValueArray, {'valueAccessors':true});\n\n        // For no obvious reason, Opera fails to evaluate rewrittenDataBindAttributeValue unless it's wrapped in an additional\n        // anonymous function, even though Opera's built-in debugger can evaluate it anyway. No other browser requires this\n        // extra indirection.\n        var applyBindingsToNextSiblingScript =\n            \"ko.__tr_ambtns(function($context,$element){return(function(){return{ \" + rewrittenDataBindAttributeValue + \" } })()},'\" + nodeName.toLowerCase() + \"')\";\n        return templateEngine['createJavaScriptEvaluatorBlock'](applyBindingsToNextSiblingScript) + tagToRetain;\n    }\n\n    return {\n        ensureTemplateIsRewritten: function (template, templateEngine, templateDocument) {\n            if (!templateEngine['isTemplateRewritten'](template, templateDocument))\n                templateEngine['rewriteTemplate'](template, function (htmlString) {\n                    return ko.templateRewriting.memoizeBindingAttributeSyntax(htmlString, templateEngine);\n                }, templateDocument);\n        },\n\n        memoizeBindingAttributeSyntax: function (htmlString, templateEngine) {\n            return htmlString.replace(memoizeDataBindingAttributeSyntaxRegex, function () {\n                return constructMemoizedTagReplacement(/* dataBindAttributeValue: */ arguments[4], /* tagToRetain: */ arguments[1], /* nodeName: */ arguments[2], templateEngine);\n            }).replace(memoizeVirtualContainerBindingSyntaxRegex, function() {\n                return constructMemoizedTagReplacement(/* dataBindAttributeValue: */ arguments[1], /* tagToRetain: */ \"<!-- ko -->\", /* nodeName: */ \"#comment\", templateEngine);\n            });\n        },\n\n        applyMemoizedBindingsToNextSibling: function (bindings, nodeName) {\n            return ko.memoization.memoize(function (domNode, bindingContext) {\n                var nodeToBind = domNode.nextSibling;\n                if (nodeToBind && nodeToBind.nodeName.toLowerCase() === nodeName) {\n                    ko.applyBindingAccessorsToNode(nodeToBind, bindings, bindingContext);\n                }\n            });\n        }\n    }\n})();\n\n\n// Exported only because it has to be referenced by string lookup from within rewritten template\nko.exportSymbol('__tr_ambtns', ko.templateRewriting.applyMemoizedBindingsToNextSibling);\n(function() {\n    // A template source represents a read/write way of accessing a template. This is to eliminate the need for template loading/saving\n    // logic to be duplicated in every template engine (and means they can all work with anonymous templates, etc.)\n    //\n    // Two are provided by default:\n    //  1. ko.templateSources.domElement       - reads/writes the text content of an arbitrary DOM element\n    //  2. ko.templateSources.anonymousElement - uses ko.utils.domData to read/write text *associated* with the DOM element, but\n    //                                           without reading/writing the actual element text content, since it will be overwritten\n    //                                           with the rendered template output.\n    // You can implement your own template source if you want to fetch/store templates somewhere other than in DOM elements.\n    // Template sources need to have the following functions:\n    //   text() \t\t\t- returns the template text from your storage location\n    //   text(value)\t\t- writes the supplied template text to your storage location\n    //   data(key)\t\t\t- reads values stored using data(key, value) - see below\n    //   data(key, value)\t- associates \"value\" with this template and the key \"key\". Is used to store information like \"isRewritten\".\n    //\n    // Optionally, template sources can also have the following functions:\n    //   nodes()            - returns a DOM element containing the nodes of this template, where available\n    //   nodes(value)       - writes the given DOM element to your storage location\n    // If a DOM element is available for a given template source, template engines are encouraged to use it in preference over text()\n    // for improved speed. However, all templateSources must supply text() even if they don't supply nodes().\n    //\n    // Once you've implemented a templateSource, make your template engine use it by subclassing whatever template engine you were\n    // using and overriding \"makeTemplateSource\" to return an instance of your custom template source.\n\n    ko.templateSources = {};\n\n    // ---- ko.templateSources.domElement -----\n\n    // template types\n    var templateScript = 1,\n        templateTextArea = 2,\n        templateTemplate = 3,\n        templateElement = 4;\n\n    ko.templateSources.domElement = function(element) {\n        this.domElement = element;\n\n        if (element) {\n            var tagNameLower = ko.utils.tagNameLower(element);\n            this.templateType =\n                tagNameLower === \"script\" ? templateScript :\n                tagNameLower === \"textarea\" ? templateTextArea :\n                    // For browsers with proper <template> element support, where the .content property gives a document fragment\n                tagNameLower == \"template\" && element.content && element.content.nodeType === 11 ? templateTemplate :\n                templateElement;\n        }\n    }\n\n    ko.templateSources.domElement.prototype['text'] = function(/* valueToWrite */) {\n        var elemContentsProperty = this.templateType === templateScript ? \"text\"\n                                 : this.templateType === templateTextArea ? \"value\"\n                                 : \"innerHTML\";\n\n        if (arguments.length == 0) {\n            return this.domElement[elemContentsProperty];\n        } else {\n            var valueToWrite = arguments[0];\n            if (elemContentsProperty === \"innerHTML\")\n                ko.utils.setHtml(this.domElement, valueToWrite);\n            else\n                this.domElement[elemContentsProperty] = valueToWrite;\n        }\n    };\n\n    var dataDomDataPrefix = ko.utils.domData.nextKey() + \"_\";\n    ko.templateSources.domElement.prototype['data'] = function(key /*, valueToWrite */) {\n        if (arguments.length === 1) {\n            return ko.utils.domData.get(this.domElement, dataDomDataPrefix + key);\n        } else {\n            ko.utils.domData.set(this.domElement, dataDomDataPrefix + key, arguments[1]);\n        }\n    };\n\n    var templatesDomDataKey = ko.utils.domData.nextKey();\n    function getTemplateDomData(element) {\n        return ko.utils.domData.get(element, templatesDomDataKey) || {};\n    }\n    function setTemplateDomData(element, data) {\n        ko.utils.domData.set(element, templatesDomDataKey, data);\n    }\n\n    ko.templateSources.domElement.prototype['nodes'] = function(/* valueToWrite */) {\n        var element = this.domElement;\n        if (arguments.length == 0) {\n            var templateData = getTemplateDomData(element),\n                containerData = templateData.containerData;\n            return containerData || (\n                this.templateType === templateTemplate ? element.content :\n                this.templateType === templateElement ? element :\n                undefined);\n        } else {\n            var valueToWrite = arguments[0];\n            setTemplateDomData(element, {containerData: valueToWrite});\n        }\n    };\n\n    // ---- ko.templateSources.anonymousTemplate -----\n    // Anonymous templates are normally saved/retrieved as DOM nodes through \"nodes\".\n    // For compatibility, you can also read \"text\"; it will be serialized from the nodes on demand.\n    // Writing to \"text\" is still supported, but then the template data will not be available as DOM nodes.\n\n    ko.templateSources.anonymousTemplate = function(element) {\n        this.domElement = element;\n    }\n    ko.templateSources.anonymousTemplate.prototype = new ko.templateSources.domElement();\n    ko.templateSources.anonymousTemplate.prototype.constructor = ko.templateSources.anonymousTemplate;\n    ko.templateSources.anonymousTemplate.prototype['text'] = function(/* valueToWrite */) {\n        if (arguments.length == 0) {\n            var templateData = getTemplateDomData(this.domElement);\n            if (templateData.textData === undefined && templateData.containerData)\n                templateData.textData = templateData.containerData.innerHTML;\n            return templateData.textData;\n        } else {\n            var valueToWrite = arguments[0];\n            setTemplateDomData(this.domElement, {textData: valueToWrite});\n        }\n    };\n\n    ko.exportSymbol('templateSources', ko.templateSources);\n    ko.exportSymbol('templateSources.domElement', ko.templateSources.domElement);\n    ko.exportSymbol('templateSources.anonymousTemplate', ko.templateSources.anonymousTemplate);\n})();\n(function () {\n    var _templateEngine;\n    ko.setTemplateEngine = function (templateEngine) {\n        if ((templateEngine != undefined) && !(templateEngine instanceof ko.templateEngine))\n            throw new Error(\"templateEngine must inherit from ko.templateEngine\");\n        _templateEngine = templateEngine;\n    }\n\n    function invokeForEachNodeInContinuousRange(firstNode, lastNode, action) {\n        var node, nextInQueue = firstNode, firstOutOfRangeNode = ko.virtualElements.nextSibling(lastNode);\n        while (nextInQueue && ((node = nextInQueue) !== firstOutOfRangeNode)) {\n            nextInQueue = ko.virtualElements.nextSibling(node);\n            action(node, nextInQueue);\n        }\n    }\n\n    function activateBindingsOnContinuousNodeArray(continuousNodeArray, bindingContext) {\n        // To be used on any nodes that have been rendered by a template and have been inserted into some parent element\n        // Walks through continuousNodeArray (which *must* be continuous, i.e., an uninterrupted sequence of sibling nodes, because\n        // the algorithm for walking them relies on this), and for each top-level item in the virtual-element sense,\n        // (1) Does a regular \"applyBindings\" to associate bindingContext with this node and to activate any non-memoized bindings\n        // (2) Unmemoizes any memos in the DOM subtree (e.g., to activate bindings that had been memoized during template rewriting)\n\n        if (continuousNodeArray.length) {\n            var firstNode = continuousNodeArray[0],\n                lastNode = continuousNodeArray[continuousNodeArray.length - 1],\n                parentNode = firstNode.parentNode,\n                provider = ko.bindingProvider['instance'],\n                preprocessNode = provider['preprocessNode'];\n\n            if (preprocessNode) {\n                invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node, nextNodeInRange) {\n                    var nodePreviousSibling = node.previousSibling;\n                    var newNodes = preprocessNode.call(provider, node);\n                    if (newNodes) {\n                        if (node === firstNode)\n                            firstNode = newNodes[0] || nextNodeInRange;\n                        if (node === lastNode)\n                            lastNode = newNodes[newNodes.length - 1] || nodePreviousSibling;\n                    }\n                });\n\n                // Because preprocessNode can change the nodes, including the first and last nodes, update continuousNodeArray to match.\n                // We need the full set, including inner nodes, because the unmemoize step might remove the first node (and so the real\n                // first node needs to be in the array).\n                continuousNodeArray.length = 0;\n                if (!firstNode) { // preprocessNode might have removed all the nodes, in which case there's nothing left to do\n                    return;\n                }\n                if (firstNode === lastNode) {\n                    continuousNodeArray.push(firstNode);\n                } else {\n                    continuousNodeArray.push(firstNode, lastNode);\n                    ko.utils.fixUpContinuousNodeArray(continuousNodeArray, parentNode);\n                }\n            }\n\n            // Need to applyBindings *before* unmemoziation, because unmemoization might introduce extra nodes (that we don't want to re-bind)\n            // whereas a regular applyBindings won't introduce new memoized nodes\n            invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node) {\n                if (node.nodeType === 1 || node.nodeType === 8)\n                    ko.applyBindings(bindingContext, node);\n            });\n            invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node) {\n                if (node.nodeType === 1 || node.nodeType === 8)\n                    ko.memoization.unmemoizeDomNodeAndDescendants(node, [bindingContext]);\n            });\n\n            // Make sure any changes done by applyBindings or unmemoize are reflected in the array\n            ko.utils.fixUpContinuousNodeArray(continuousNodeArray, parentNode);\n        }\n    }\n\n    function getFirstNodeFromPossibleArray(nodeOrNodeArray) {\n        return nodeOrNodeArray.nodeType ? nodeOrNodeArray\n                                        : nodeOrNodeArray.length > 0 ? nodeOrNodeArray[0]\n                                        : null;\n    }\n\n    function executeTemplate(targetNodeOrNodeArray, renderMode, template, bindingContext, options) {\n        options = options || {};\n        var firstTargetNode = targetNodeOrNodeArray && getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n        var templateDocument = (firstTargetNode || template || {}).ownerDocument;\n        var templateEngineToUse = (options['templateEngine'] || _templateEngine);\n        ko.templateRewriting.ensureTemplateIsRewritten(template, templateEngineToUse, templateDocument);\n        var renderedNodesArray = templateEngineToUse['renderTemplate'](template, bindingContext, options, templateDocument);\n\n        // Loosely check result is an array of DOM nodes\n        if ((typeof renderedNodesArray.length != \"number\") || (renderedNodesArray.length > 0 && typeof renderedNodesArray[0].nodeType != \"number\"))\n            throw new Error(\"Template engine must return an array of DOM nodes\");\n\n        var haveAddedNodesToParent = false;\n        switch (renderMode) {\n            case \"replaceChildren\":\n                ko.virtualElements.setDomNodeChildren(targetNodeOrNodeArray, renderedNodesArray);\n                haveAddedNodesToParent = true;\n                break;\n            case \"replaceNode\":\n                ko.utils.replaceDomNodes(targetNodeOrNodeArray, renderedNodesArray);\n                haveAddedNodesToParent = true;\n                break;\n            case \"ignoreTargetNode\": break;\n            default:\n                throw new Error(\"Unknown renderMode: \" + renderMode);\n        }\n\n        if (haveAddedNodesToParent) {\n            activateBindingsOnContinuousNodeArray(renderedNodesArray, bindingContext);\n            if (options['afterRender'])\n                ko.dependencyDetection.ignore(options['afterRender'], null, [renderedNodesArray, bindingContext['$data']]);\n        }\n\n        return renderedNodesArray;\n    }\n\n    function resolveTemplateName(template, data, context) {\n        // The template can be specified as:\n        if (ko.isObservable(template)) {\n            // 1. An observable, with string value\n            return template();\n        } else if (typeof template === 'function') {\n            // 2. A function of (data, context) returning a string\n            return template(data, context);\n        } else {\n            // 3. A string\n            return template;\n        }\n    }\n\n    ko.renderTemplate = function (template, dataOrBindingContext, options, targetNodeOrNodeArray, renderMode) {\n        options = options || {};\n        if ((options['templateEngine'] || _templateEngine) == undefined)\n            throw new Error(\"Set a template engine before calling renderTemplate\");\n        renderMode = renderMode || \"replaceChildren\";\n\n        if (targetNodeOrNodeArray) {\n            var firstTargetNode = getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n\n            var whenToDispose = function () { return (!firstTargetNode) || !ko.utils.domNodeIsAttachedToDocument(firstTargetNode); }; // Passive disposal (on next evaluation)\n            var activelyDisposeWhenNodeIsRemoved = (firstTargetNode && renderMode == \"replaceNode\") ? firstTargetNode.parentNode : firstTargetNode;\n\n            return ko.dependentObservable( // So the DOM is automatically updated when any dependency changes\n                function () {\n                    // Ensure we've got a proper binding context to work with\n                    var bindingContext = (dataOrBindingContext && (dataOrBindingContext instanceof ko.bindingContext))\n                        ? dataOrBindingContext\n                        : new ko.bindingContext(dataOrBindingContext, null, null, null, { \"exportDependencies\": true });\n\n                    var templateName = resolveTemplateName(template, bindingContext['$data'], bindingContext),\n                        renderedNodesArray = executeTemplate(targetNodeOrNodeArray, renderMode, templateName, bindingContext, options);\n\n                    if (renderMode == \"replaceNode\") {\n                        targetNodeOrNodeArray = renderedNodesArray;\n                        firstTargetNode = getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n                    }\n                },\n                null,\n                { disposeWhen: whenToDispose, disposeWhenNodeIsRemoved: activelyDisposeWhenNodeIsRemoved }\n            );\n        } else {\n            // We don't yet have a DOM node to evaluate, so use a memo and render the template later when there is a DOM node\n            return ko.memoization.memoize(function (domNode) {\n                ko.renderTemplate(template, dataOrBindingContext, options, domNode, \"replaceNode\");\n            });\n        }\n    };\n\n    ko.renderTemplateForEach = function (template, arrayOrObservableArray, options, targetNode, parentBindingContext) {\n        // Since setDomNodeChildrenFromArrayMapping always calls executeTemplateForArrayItem and then\n        // activateBindingsCallback for added items, we can store the binding context in the former to use in the latter.\n        var arrayItemContext;\n\n        // This will be called by setDomNodeChildrenFromArrayMapping to get the nodes to add to targetNode\n        var executeTemplateForArrayItem = function (arrayValue, index) {\n            // Support selecting template as a function of the data being rendered\n            arrayItemContext = parentBindingContext['createChildContext'](arrayValue, options['as'], function(context) {\n                context['$index'] = index;\n            });\n\n            var templateName = resolveTemplateName(template, arrayValue, arrayItemContext);\n            return executeTemplate(null, \"ignoreTargetNode\", templateName, arrayItemContext, options);\n        }\n\n        // This will be called whenever setDomNodeChildrenFromArrayMapping has added nodes to targetNode\n        var activateBindingsCallback = function(arrayValue, addedNodesArray, index) {\n            activateBindingsOnContinuousNodeArray(addedNodesArray, arrayItemContext);\n            if (options['afterRender'])\n                options['afterRender'](addedNodesArray, arrayValue);\n\n            // release the \"cache\" variable, so that it can be collected by\n            // the GC when its value isn't used from within the bindings anymore.\n            arrayItemContext = null;\n        };\n\n        return ko.dependentObservable(function () {\n            var unwrappedArray = ko.utils.unwrapObservable(arrayOrObservableArray) || [];\n            if (typeof unwrappedArray.length == \"undefined\") // Coerce single value into array\n                unwrappedArray = [unwrappedArray];\n\n            // Filter out any entries marked as destroyed\n            var filteredArray = ko.utils.arrayFilter(unwrappedArray, function(item) {\n                return options['includeDestroyed'] || item === undefined || item === null || !ko.utils.unwrapObservable(item['_destroy']);\n            });\n\n            // Call setDomNodeChildrenFromArrayMapping, ignoring any observables unwrapped within (most likely from a callback function).\n            // If the array items are observables, though, they will be unwrapped in executeTemplateForArrayItem and managed within setDomNodeChildrenFromArrayMapping.\n            ko.dependencyDetection.ignore(ko.utils.setDomNodeChildrenFromArrayMapping, null, [targetNode, filteredArray, executeTemplateForArrayItem, options, activateBindingsCallback]);\n\n        }, null, { disposeWhenNodeIsRemoved: targetNode });\n    };\n\n    var templateComputedDomDataKey = ko.utils.domData.nextKey();\n    function disposeOldComputedAndStoreNewOne(element, newComputed) {\n        var oldComputed = ko.utils.domData.get(element, templateComputedDomDataKey);\n        if (oldComputed && (typeof(oldComputed.dispose) == 'function'))\n            oldComputed.dispose();\n        ko.utils.domData.set(element, templateComputedDomDataKey, (newComputed && newComputed.isActive()) ? newComputed : undefined);\n    }\n\n    ko.bindingHandlers['template'] = {\n        'init': function(element, valueAccessor) {\n            // Support anonymous templates\n            var bindingValue = ko.utils.unwrapObservable(valueAccessor());\n            if (typeof bindingValue == \"string\" || bindingValue['name']) {\n                // It's a named template - clear the element\n                ko.virtualElements.emptyNode(element);\n            } else if ('nodes' in bindingValue) {\n                // We've been given an array of DOM nodes. Save them as the template source.\n                // There is no known use case for the node array being an observable array (if the output\n                // varies, put that behavior *into* your template - that's what templates are for), and\n                // the implementation would be a mess, so assert that it's not observable.\n                var nodes = bindingValue['nodes'] || [];\n                if (ko.isObservable(nodes)) {\n                    throw new Error('The \"nodes\" option must be a plain, non-observable array.');\n                }\n                var container = ko.utils.moveCleanedNodesToContainerElement(nodes); // This also removes the nodes from their current parent\n                new ko.templateSources.anonymousTemplate(element)['nodes'](container);\n            } else {\n                // It's an anonymous template - store the element contents, then clear the element\n                var templateNodes = ko.virtualElements.childNodes(element),\n                    container = ko.utils.moveCleanedNodesToContainerElement(templateNodes); // This also removes the nodes from their current parent\n                new ko.templateSources.anonymousTemplate(element)['nodes'](container);\n            }\n            return { 'controlsDescendantBindings': true };\n        },\n        'update': function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n            var value = valueAccessor(),\n                options = ko.utils.unwrapObservable(value),\n                shouldDisplay = true,\n                templateComputed = null,\n                templateName;\n\n            if (typeof options == \"string\") {\n                templateName = value;\n                options = {};\n            } else {\n                templateName = options['name'];\n\n                // Support \"if\"/\"ifnot\" conditions\n                if ('if' in options)\n                    shouldDisplay = ko.utils.unwrapObservable(options['if']);\n                if (shouldDisplay && 'ifnot' in options)\n                    shouldDisplay = !ko.utils.unwrapObservable(options['ifnot']);\n            }\n\n            if ('foreach' in options) {\n                // Render once for each data point (treating data set as empty if shouldDisplay==false)\n                var dataArray = (shouldDisplay && options['foreach']) || [];\n                templateComputed = ko.renderTemplateForEach(templateName || element, dataArray, options, element, bindingContext);\n            } else if (!shouldDisplay) {\n                ko.virtualElements.emptyNode(element);\n            } else {\n                // Render once for this single data point (or use the viewModel if no data was provided)\n                var innerBindingContext = ('data' in options) ?\n                    bindingContext.createStaticChildContext(options['data'], options['as']) :  // Given an explitit 'data' value, we create a child binding context for it\n                    bindingContext;                                                        // Given no explicit 'data' value, we retain the same binding context\n                templateComputed = ko.renderTemplate(templateName || element, innerBindingContext, options, element);\n            }\n\n            // It only makes sense to have a single template computed per element (otherwise which one should have its output displayed?)\n            disposeOldComputedAndStoreNewOne(element, templateComputed);\n        }\n    };\n\n    // Anonymous templates can't be rewritten. Give a nice error message if you try to do it.\n    ko.expressionRewriting.bindingRewriteValidators['template'] = function(bindingValue) {\n        var parsedBindingValue = ko.expressionRewriting.parseObjectLiteral(bindingValue);\n\n        if ((parsedBindingValue.length == 1) && parsedBindingValue[0]['unknown'])\n            return null; // It looks like a string literal, not an object literal, so treat it as a named template (which is allowed for rewriting)\n\n        if (ko.expressionRewriting.keyValueArrayContainsKey(parsedBindingValue, \"name\"))\n            return null; // Named templates can be rewritten, so return \"no error\"\n        return \"This template engine does not support anonymous templates nested within its templates\";\n    };\n\n    ko.virtualElements.allowedBindings['template'] = true;\n})();\n\nko.exportSymbol('setTemplateEngine', ko.setTemplateEngine);\nko.exportSymbol('renderTemplate', ko.renderTemplate);\n// Go through the items that have been added and deleted and try to find matches between them.\nko.utils.findMovesInArrayComparison = function (left, right, limitFailedCompares) {\n    if (left.length && right.length) {\n        var failedCompares, l, r, leftItem, rightItem;\n        for (failedCompares = l = 0; (!limitFailedCompares || failedCompares < limitFailedCompares) && (leftItem = left[l]); ++l) {\n            for (r = 0; rightItem = right[r]; ++r) {\n                if (leftItem['value'] === rightItem['value']) {\n                    leftItem['moved'] = rightItem['index'];\n                    rightItem['moved'] = leftItem['index'];\n                    right.splice(r, 1);         // This item is marked as moved; so remove it from right list\n                    failedCompares = r = 0;     // Reset failed compares count because we're checking for consecutive failures\n                    break;\n                }\n            }\n            failedCompares += r;\n        }\n    }\n};\n\nko.utils.compareArrays = (function () {\n    var statusNotInOld = 'added', statusNotInNew = 'deleted';\n\n    // Simple calculation based on Levenshtein distance.\n    function compareArrays(oldArray, newArray, options) {\n        // For backward compatibility, if the third arg is actually a bool, interpret\n        // it as the old parameter 'dontLimitMoves'. Newer code should use { dontLimitMoves: true }.\n        options = (typeof options === 'boolean') ? { 'dontLimitMoves': options } : (options || {});\n        oldArray = oldArray || [];\n        newArray = newArray || [];\n\n        if (oldArray.length < newArray.length)\n            return compareSmallArrayToBigArray(oldArray, newArray, statusNotInOld, statusNotInNew, options);\n        else\n            return compareSmallArrayToBigArray(newArray, oldArray, statusNotInNew, statusNotInOld, options);\n    }\n\n    function compareSmallArrayToBigArray(smlArray, bigArray, statusNotInSml, statusNotInBig, options) {\n        var myMin = Math.min,\n            myMax = Math.max,\n            editDistanceMatrix = [],\n            smlIndex, smlIndexMax = smlArray.length,\n            bigIndex, bigIndexMax = bigArray.length,\n            compareRange = (bigIndexMax - smlIndexMax) || 1,\n            maxDistance = smlIndexMax + bigIndexMax + 1,\n            thisRow, lastRow,\n            bigIndexMaxForRow, bigIndexMinForRow;\n\n        for (smlIndex = 0; smlIndex <= smlIndexMax; smlIndex++) {\n            lastRow = thisRow;\n            editDistanceMatrix.push(thisRow = []);\n            bigIndexMaxForRow = myMin(bigIndexMax, smlIndex + compareRange);\n            bigIndexMinForRow = myMax(0, smlIndex - 1);\n            for (bigIndex = bigIndexMinForRow; bigIndex <= bigIndexMaxForRow; bigIndex++) {\n                if (!bigIndex)\n                    thisRow[bigIndex] = smlIndex + 1;\n                else if (!smlIndex)  // Top row - transform empty array into new array via additions\n                    thisRow[bigIndex] = bigIndex + 1;\n                else if (smlArray[smlIndex - 1] === bigArray[bigIndex - 1])\n                    thisRow[bigIndex] = lastRow[bigIndex - 1];                  // copy value (no edit)\n                else {\n                    var northDistance = lastRow[bigIndex] || maxDistance;       // not in big (deletion)\n                    var westDistance = thisRow[bigIndex - 1] || maxDistance;    // not in small (addition)\n                    thisRow[bigIndex] = myMin(northDistance, westDistance) + 1;\n                }\n            }\n        }\n\n        var editScript = [], meMinusOne, notInSml = [], notInBig = [];\n        for (smlIndex = smlIndexMax, bigIndex = bigIndexMax; smlIndex || bigIndex;) {\n            meMinusOne = editDistanceMatrix[smlIndex][bigIndex] - 1;\n            if (bigIndex && meMinusOne === editDistanceMatrix[smlIndex][bigIndex-1]) {\n                notInSml.push(editScript[editScript.length] = {     // added\n                    'status': statusNotInSml,\n                    'value': bigArray[--bigIndex],\n                    'index': bigIndex });\n            } else if (smlIndex && meMinusOne === editDistanceMatrix[smlIndex - 1][bigIndex]) {\n                notInBig.push(editScript[editScript.length] = {     // deleted\n                    'status': statusNotInBig,\n                    'value': smlArray[--smlIndex],\n                    'index': smlIndex });\n            } else {\n                --bigIndex;\n                --smlIndex;\n                if (!options['sparse']) {\n                    editScript.push({\n                        'status': \"retained\",\n                        'value': bigArray[bigIndex] });\n                }\n            }\n        }\n\n        // Set a limit on the number of consecutive non-matching comparisons; having it a multiple of\n        // smlIndexMax keeps the time complexity of this algorithm linear.\n        ko.utils.findMovesInArrayComparison(notInBig, notInSml, !options['dontLimitMoves'] && smlIndexMax * 10);\n\n        return editScript.reverse();\n    }\n\n    return compareArrays;\n})();\n\nko.exportSymbol('utils.compareArrays', ko.utils.compareArrays);\n(function () {\n    // Objective:\n    // * Given an input array, a container DOM node, and a function from array elements to arrays of DOM nodes,\n    //   map the array elements to arrays of DOM nodes, concatenate together all these arrays, and use them to populate the container DOM node\n    // * Next time we're given the same combination of things (with the array possibly having mutated), update the container DOM node\n    //   so that its children is again the concatenation of the mappings of the array elements, but don't re-map any array elements that we\n    //   previously mapped - retain those nodes, and just insert/delete other ones\n\n    // \"callbackAfterAddingNodes\" will be invoked after any \"mapping\"-generated nodes are inserted into the container node\n    // You can use this, for example, to activate bindings on those nodes.\n\n    function mapNodeAndRefreshWhenChanged(containerNode, mapping, valueToMap, callbackAfterAddingNodes, index) {\n        // Map this array value inside a dependentObservable so we re-map when any dependency changes\n        var mappedNodes = [];\n        var dependentObservable = ko.dependentObservable(function() {\n            var newMappedNodes = mapping(valueToMap, index, ko.utils.fixUpContinuousNodeArray(mappedNodes, containerNode)) || [];\n\n            // On subsequent evaluations, just replace the previously-inserted DOM nodes\n            if (mappedNodes.length > 0) {\n                ko.utils.replaceDomNodes(mappedNodes, newMappedNodes);\n                if (callbackAfterAddingNodes)\n                    ko.dependencyDetection.ignore(callbackAfterAddingNodes, null, [valueToMap, newMappedNodes, index]);\n            }\n\n            // Replace the contents of the mappedNodes array, thereby updating the record\n            // of which nodes would be deleted if valueToMap was itself later removed\n            mappedNodes.length = 0;\n            ko.utils.arrayPushAll(mappedNodes, newMappedNodes);\n        }, null, { disposeWhenNodeIsRemoved: containerNode, disposeWhen: function() { return !ko.utils.anyDomNodeIsAttachedToDocument(mappedNodes); } });\n        return { mappedNodes : mappedNodes, dependentObservable : (dependentObservable.isActive() ? dependentObservable : undefined) };\n    }\n\n    var lastMappingResultDomDataKey = ko.utils.domData.nextKey(),\n        deletedItemDummyValue = ko.utils.domData.nextKey();\n\n    ko.utils.setDomNodeChildrenFromArrayMapping = function (domNode, array, mapping, options, callbackAfterAddingNodes) {\n        // Compare the provided array against the previous one\n        array = array || [];\n        options = options || {};\n        var isFirstExecution = ko.utils.domData.get(domNode, lastMappingResultDomDataKey) === undefined;\n        var lastMappingResult = ko.utils.domData.get(domNode, lastMappingResultDomDataKey) || [];\n        var lastArray = ko.utils.arrayMap(lastMappingResult, function (x) { return x.arrayEntry; });\n        var editScript = ko.utils.compareArrays(lastArray, array, options['dontLimitMoves']);\n\n        // Build the new mapping result\n        var newMappingResult = [];\n        var lastMappingResultIndex = 0;\n        var newMappingResultIndex = 0;\n\n        var nodesToDelete = [];\n        var itemsToProcess = [];\n        var itemsForBeforeRemoveCallbacks = [];\n        var itemsForMoveCallbacks = [];\n        var itemsForAfterAddCallbacks = [];\n        var mapData;\n\n        function itemMovedOrRetained(editScriptIndex, oldPosition) {\n            mapData = lastMappingResult[oldPosition];\n            if (newMappingResultIndex !== oldPosition)\n                itemsForMoveCallbacks[editScriptIndex] = mapData;\n            // Since updating the index might change the nodes, do so before calling fixUpContinuousNodeArray\n            mapData.indexObservable(newMappingResultIndex++);\n            ko.utils.fixUpContinuousNodeArray(mapData.mappedNodes, domNode);\n            newMappingResult.push(mapData);\n            itemsToProcess.push(mapData);\n        }\n\n        function callCallback(callback, items) {\n            if (callback) {\n                for (var i = 0, n = items.length; i < n; i++) {\n                    if (items[i]) {\n                        ko.utils.arrayForEach(items[i].mappedNodes, function(node) {\n                            callback(node, i, items[i].arrayEntry);\n                        });\n                    }\n                }\n            }\n        }\n\n        for (var i = 0, editScriptItem, movedIndex; editScriptItem = editScript[i]; i++) {\n            movedIndex = editScriptItem['moved'];\n            switch (editScriptItem['status']) {\n                case \"deleted\":\n                    if (movedIndex === undefined) {\n                        mapData = lastMappingResult[lastMappingResultIndex];\n\n                        // Stop tracking changes to the mapping for these nodes\n                        if (mapData.dependentObservable) {\n                            mapData.dependentObservable.dispose();\n                            mapData.dependentObservable = undefined;\n                        }\n\n                        // Queue these nodes for later removal\n                        if (ko.utils.fixUpContinuousNodeArray(mapData.mappedNodes, domNode).length) {\n                            if (options['beforeRemove']) {\n                                newMappingResult.push(mapData);\n                                itemsToProcess.push(mapData);\n                                if (mapData.arrayEntry === deletedItemDummyValue) {\n                                    mapData = null;\n                                } else {\n                                    itemsForBeforeRemoveCallbacks[i] = mapData;\n                                }\n                            }\n                            if (mapData) {\n                                nodesToDelete.push.apply(nodesToDelete, mapData.mappedNodes);\n                            }\n                        }\n                    }\n                    lastMappingResultIndex++;\n                    break;\n\n                case \"retained\":\n                    itemMovedOrRetained(i, lastMappingResultIndex++);\n                    break;\n\n                case \"added\":\n                    if (movedIndex !== undefined) {\n                        itemMovedOrRetained(i, movedIndex);\n                    } else {\n                        mapData = { arrayEntry: editScriptItem['value'], indexObservable: ko.observable(newMappingResultIndex++) };\n                        newMappingResult.push(mapData);\n                        itemsToProcess.push(mapData);\n                        if (!isFirstExecution)\n                            itemsForAfterAddCallbacks[i] = mapData;\n                    }\n                    break;\n            }\n        }\n\n        // Store a copy of the array items we just considered so we can difference it next time\n        ko.utils.domData.set(domNode, lastMappingResultDomDataKey, newMappingResult);\n\n        // Call beforeMove first before any changes have been made to the DOM\n        callCallback(options['beforeMove'], itemsForMoveCallbacks);\n\n        // Next remove nodes for deleted items (or just clean if there's a beforeRemove callback)\n        ko.utils.arrayForEach(nodesToDelete, options['beforeRemove'] ? ko.cleanNode : ko.removeNode);\n\n        // Next add/reorder the remaining items (will include deleted items if there's a beforeRemove callback)\n        for (var i = 0, nextNode = ko.virtualElements.firstChild(domNode), lastNode, node; mapData = itemsToProcess[i]; i++) {\n            // Get nodes for newly added items\n            if (!mapData.mappedNodes)\n                ko.utils.extend(mapData, mapNodeAndRefreshWhenChanged(domNode, mapping, mapData.arrayEntry, callbackAfterAddingNodes, mapData.indexObservable));\n\n            // Put nodes in the right place if they aren't there already\n            for (var j = 0; node = mapData.mappedNodes[j]; nextNode = node.nextSibling, lastNode = node, j++) {\n                if (node !== nextNode)\n                    ko.virtualElements.insertAfter(domNode, node, lastNode);\n            }\n\n            // Run the callbacks for newly added nodes (for example, to apply bindings, etc.)\n            if (!mapData.initialized && callbackAfterAddingNodes) {\n                callbackAfterAddingNodes(mapData.arrayEntry, mapData.mappedNodes, mapData.indexObservable);\n                mapData.initialized = true;\n            }\n        }\n\n        // If there's a beforeRemove callback, call it after reordering.\n        // Note that we assume that the beforeRemove callback will usually be used to remove the nodes using\n        // some sort of animation, which is why we first reorder the nodes that will be removed. If the\n        // callback instead removes the nodes right away, it would be more efficient to skip reordering them.\n        // Perhaps we'll make that change in the future if this scenario becomes more common.\n        callCallback(options['beforeRemove'], itemsForBeforeRemoveCallbacks);\n\n        // Replace the stored values of deleted items with a dummy value. This provides two benefits: it marks this item\n        // as already \"removed\" so we won't call beforeRemove for it again, and it ensures that the item won't match up\n        // with an actual item in the array and appear as \"retained\" or \"moved\".\n        for (i = 0; i < itemsForBeforeRemoveCallbacks.length; ++i) {\n            if (itemsForBeforeRemoveCallbacks[i]) {\n                itemsForBeforeRemoveCallbacks[i].arrayEntry = deletedItemDummyValue;\n            }\n        }\n\n        // Finally call afterMove and afterAdd callbacks\n        callCallback(options['afterMove'], itemsForMoveCallbacks);\n        callCallback(options['afterAdd'], itemsForAfterAddCallbacks);\n    }\n})();\n\nko.exportSymbol('utils.setDomNodeChildrenFromArrayMapping', ko.utils.setDomNodeChildrenFromArrayMapping);\nko.nativeTemplateEngine = function () {\n    this['allowTemplateRewriting'] = false;\n}\n\nko.nativeTemplateEngine.prototype = new ko.templateEngine();\nko.nativeTemplateEngine.prototype.constructor = ko.nativeTemplateEngine;\nko.nativeTemplateEngine.prototype['renderTemplateSource'] = function (templateSource, bindingContext, options, templateDocument) {\n    var useNodesIfAvailable = !(ko.utils.ieVersion < 9), // IE<9 cloneNode doesn't work properly\n        templateNodesFunc = useNodesIfAvailable ? templateSource['nodes'] : null,\n        templateNodes = templateNodesFunc ? templateSource['nodes']() : null;\n\n    if (templateNodes) {\n        return ko.utils.makeArray(templateNodes.cloneNode(true).childNodes);\n    } else {\n        var templateText = templateSource['text']();\n        return ko.utils.parseHtmlFragment(templateText, templateDocument);\n    }\n};\n\nko.nativeTemplateEngine.instance = new ko.nativeTemplateEngine();\nko.setTemplateEngine(ko.nativeTemplateEngine.instance);\n\nko.exportSymbol('nativeTemplateEngine', ko.nativeTemplateEngine);\n(function() {\n    ko.jqueryTmplTemplateEngine = function () {\n        // Detect which version of jquery-tmpl you're using. Unfortunately jquery-tmpl\n        // doesn't expose a version number, so we have to infer it.\n        // Note that as of Knockout 1.3, we only support jQuery.tmpl 1.0.0pre and later,\n        // which KO internally refers to as version \"2\", so older versions are no longer detected.\n        var jQueryTmplVersion = this.jQueryTmplVersion = (function() {\n            if (!jQueryInstance || !(jQueryInstance['tmpl']))\n                return 0;\n            // Since it exposes no official version number, we use our own numbering system. To be updated as jquery-tmpl evolves.\n            try {\n                if (jQueryInstance['tmpl']['tag']['tmpl']['open'].toString().indexOf('__') >= 0) {\n                    // Since 1.0.0pre, custom tags should append markup to an array called \"__\"\n                    return 2; // Final version of jquery.tmpl\n                }\n            } catch(ex) { /* Apparently not the version we were looking for */ }\n\n            return 1; // Any older version that we don't support\n        })();\n\n        function ensureHasReferencedJQueryTemplates() {\n            if (jQueryTmplVersion < 2)\n                throw new Error(\"Your version of jQuery.tmpl is too old. Please upgrade to jQuery.tmpl 1.0.0pre or later.\");\n        }\n\n        function executeTemplate(compiledTemplate, data, jQueryTemplateOptions) {\n            return jQueryInstance['tmpl'](compiledTemplate, data, jQueryTemplateOptions);\n        }\n\n        this['renderTemplateSource'] = function(templateSource, bindingContext, options, templateDocument) {\n            templateDocument = templateDocument || document;\n            options = options || {};\n            ensureHasReferencedJQueryTemplates();\n\n            // Ensure we have stored a precompiled version of this template (don't want to reparse on every render)\n            var precompiled = templateSource['data']('precompiled');\n            if (!precompiled) {\n                var templateText = templateSource['text']() || \"\";\n                // Wrap in \"with($whatever.koBindingContext) { ... }\"\n                templateText = \"{{ko_with $item.koBindingContext}}\" + templateText + \"{{/ko_with}}\";\n\n                precompiled = jQueryInstance['template'](null, templateText);\n                templateSource['data']('precompiled', precompiled);\n            }\n\n            var data = [bindingContext['$data']]; // Prewrap the data in an array to stop jquery.tmpl from trying to unwrap any arrays\n            var jQueryTemplateOptions = jQueryInstance['extend']({ 'koBindingContext': bindingContext }, options['templateOptions']);\n\n            var resultNodes = executeTemplate(precompiled, data, jQueryTemplateOptions);\n            resultNodes['appendTo'](templateDocument.createElement(\"div\")); // Using \"appendTo\" forces jQuery/jQuery.tmpl to perform necessary cleanup work\n\n            jQueryInstance['fragments'] = {}; // Clear jQuery's fragment cache to avoid a memory leak after a large number of template renders\n            return resultNodes;\n        };\n\n        this['createJavaScriptEvaluatorBlock'] = function(script) {\n            return \"{{ko_code ((function() { return \" + script + \" })()) }}\";\n        };\n\n        this['addTemplate'] = function(templateName, templateMarkup) {\n            document.write(\"<script type='text/html' id='\" + templateName + \"'>\" + templateMarkup + \"<\" + \"/script>\");\n        };\n\n        if (jQueryTmplVersion > 0) {\n            jQueryInstance['tmpl']['tag']['ko_code'] = {\n                open: \"__.push($1 || '');\"\n            };\n            jQueryInstance['tmpl']['tag']['ko_with'] = {\n                open: \"with($1) {\",\n                close: \"} \"\n            };\n        }\n    };\n\n    ko.jqueryTmplTemplateEngine.prototype = new ko.templateEngine();\n    ko.jqueryTmplTemplateEngine.prototype.constructor = ko.jqueryTmplTemplateEngine;\n\n    // Use this one by default *only if jquery.tmpl is referenced*\n    var jqueryTmplTemplateEngineInstance = new ko.jqueryTmplTemplateEngine();\n    if (jqueryTmplTemplateEngineInstance.jQueryTmplVersion > 0)\n        ko.setTemplateEngine(jqueryTmplTemplateEngineInstance);\n\n    ko.exportSymbol('jqueryTmplTemplateEngine', ko.jqueryTmplTemplateEngine);\n})();\n}));\n}());\n})();\n"],"sourceRoot":""}